{
  "openapi": "3.0.0",
  "info": {
    "title": "CAS User Management API",
    "version": "v1",
    "description": "cas Management\n"
  },
  "servers": [
    {
      "url": "https://${baseUri}/",
      "variables": {
        "baseUri": {
          "default": "baseUri"
        }
      }
    },
    {
      "url": "http://${baseUri}/",
      "variables": {
        "baseUri": {
          "default": "baseUri"
        }
      }
    }
  ],
  "paths": {
    "/tag": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Tag objects using query parameter filter criteria.",
        "operationId": "GetTag",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readTag"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Tag object.",
        "operationId": "CreateTag",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyTag"
      },
      "x-annotation-common.entity": "Tag"
    },
    "/tag/{tagId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Tag object by tagId URL path parameter.",
        "operationId": "GetTagById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readTag"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Tag object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyTag",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyTag"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Tag object\nNote: This is only allowed if Tag object is in DRAFT status\n",
        "operationId": "DeleteTag",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyTag"
      },
      "parameters": [
        {
          "name": "tagId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tag/{tagId}/relationships/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "GetTagAssignmentRelationships",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Relationship added successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Add Relationship\n",
        "operationId": "AddTagAssignmentRelationship",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Relationships merged successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Merge Relationships\n",
        "operationId": "ModifyTagAssignmentRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Relationships removed successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Relationships\n",
        "operationId": "RemoveTagAssignmentRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "tagId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tagAssignment": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Object assignments using query parameter filter criteria.",
        "operationId": "GetTagAssignment",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readTagAssignment"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Object assignments.",
        "operationId": "CreateTagAssignment",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyTagAssignment"
      },
      "x-annotation-common.entity": "TagAssignment"
    },
    "/tagAssignment/{tagAssignmentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Object assignments by tagAssignmentId URL path parameter.",
        "operationId": "GetTagAssignmentById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readTagAssignment"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Object assignments.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyTagAssignment",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyTagAssignment"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Object assignments\nNote: This is only allowed if Object assignments is in DRAFT status\n",
        "operationId": "DeleteTagAssignment",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyTagAssignment"
      },
      "parameters": [
        {
          "name": "tagAssignmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tagAssignment/{tagAssignmentId}/relationships/tags": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "GetTagRelationships",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Relationship added successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Add Relationship\n",
        "operationId": "AddTagRelationship",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Relationships merged successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Merge Relationships\n",
        "operationId": "ModifyTagRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Relationships removed successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Relationships\n",
        "operationId": "RemoveTagRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "tagAssignmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/taggedObject": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaggedObjectArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find TaggedObject objects using query parameter filter criteria.",
        "operationId": "GetTaggedObject",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readTaggedObject"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaggedObjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new TaggedObject object.",
        "operationId": "CreateTaggedObject",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TaggedObjectRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyTaggedObject"
      },
      "x-annotation-common.entity": "TaggedObject"
    },
    "/taggedObject/{taggedObjectId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaggedObjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find TaggedObject object by taggedObjectId URL path parameter.",
        "operationId": "GetTaggedObjectById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readTaggedObject"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaggedObjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify TaggedObject object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyTaggedObject",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TaggedObjectRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyTaggedObject"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing TaggedObject object\nNote: This is only allowed if TaggedObject object is in DRAFT status\n",
        "operationId": "DeleteTaggedObject",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyTaggedObject"
      },
      "parameters": [
        {
          "name": "taggedObjectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/acl": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Acl objects using query parameter filter criteria.",
        "operationId": "GetAcl",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAcl"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Acl object.",
        "operationId": "CreateAcl",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAcl"
      },
      "x-annotation-common.entity": "Acl"
    },
    "/acl/{aclId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Acl object by aclId URL path parameter.",
        "operationId": "GetAclById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAcl"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Acl object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAcl",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAcl"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Acl object\nNote: This is only allowed if Acl object is in DRAFT status\n",
        "operationId": "DeleteAcl",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAcl"
      },
      "parameters": [
        {
          "name": "aclId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclDelegation": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclDelegation objects using query parameter filter criteria.",
        "operationId": "GetAclDelegation",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAclDelegation"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AclDelegation object.",
        "operationId": "CreateAclDelegation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclDelegationRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAclDelegation"
      },
      "x-annotation-common.entity": "AclDelegation"
    },
    "/aclDelegation/{aclDelegationId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclDelegation object by aclDelegationId URL path parameter.",
        "operationId": "GetAclDelegationById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAclDelegation"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AclDelegation object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAclDelegation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclDelegationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAclDelegation"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AclDelegation object\nNote: This is only allowed if AclDelegation object is in DRAFT status\n",
        "operationId": "DeleteAclDelegation",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAclDelegation"
      },
      "parameters": [
        {
          "name": "aclDelegationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclDelegation/{aclDelegationId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AclDelegation Resource",
        "operationId": "ActivateAclDelegation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclDelegationActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "aclDelegationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclDelegation/{aclDelegationId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AclDelegation Resource",
        "operationId": "DeactivateAclDelegation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclDelegationActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "aclDelegationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclInfoLocalization": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclInfoLocalizationArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclInfoLocalization objects using query parameter filter criteria.",
        "operationId": "GetAclInfoLocalization",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAclInfoLocalization"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclInfoLocalizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AclInfoLocalization object.",
        "operationId": "CreateAclInfoLocalization",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclInfoLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAclInfoLocalization"
      },
      "x-annotation-common.entity": "AclInfoLocalization"
    },
    "/aclInfoLocalization/{aclInfoLocalizationId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclInfoLocalizationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclInfoLocalization object by aclInfoLocalizationId URL path parameter.",
        "operationId": "GetAclInfoLocalizationById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAclInfoLocalization"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclInfoLocalizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AclInfoLocalization object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAclInfoLocalization",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclInfoLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAclInfoLocalization"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AclInfoLocalization object\nNote: This is only allowed if AclInfoLocalization object is in DRAFT status\n",
        "operationId": "DeleteAclInfoLocalization",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAclInfoLocalization"
      },
      "parameters": [
        {
          "name": "aclInfoLocalizationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclValue": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclValue objects using query parameter filter criteria.",
        "operationId": "GetAclValue",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAclValue"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AclValue object.",
        "operationId": "CreateAclValue",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclValueRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAclValue"
      },
      "x-annotation-common.entity": "AclValue"
    },
    "/aclValue/{aclValueId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclValue object by aclValueId URL path parameter.",
        "operationId": "GetAclValueById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAclValue"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AclValue object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAclValue",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclValueRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAclValue"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AclValue object\nNote: This is only allowed if AclValue object is in DRAFT status\n",
        "operationId": "DeleteAclValue",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAclValue"
      },
      "parameters": [
        {
          "name": "aclValueId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclValueBlob": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueBlobArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclValueBlob objects using query parameter filter criteria.",
        "operationId": "GetAclValueBlob",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAclValueBlob"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueBlobResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AclValueBlob object.",
        "operationId": "CreateAclValueBlob",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclValueBlobRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAclValueBlob"
      },
      "x-annotation-common.entity": "AclValueBlob"
    },
    "/aclValueBlob/{aclValueBlobId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueBlobResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclValueBlob object by aclValueBlobId URL path parameter.",
        "operationId": "GetAclValueBlobById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAclValueBlob"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueBlobResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AclValueBlob object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAclValueBlob",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclValueBlobRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAclValueBlob"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AclValueBlob object\nNote: This is only allowed if AclValueBlob object is in DRAFT status\n",
        "operationId": "DeleteAclValueBlob",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAclValueBlob"
      },
      "parameters": [
        {
          "name": "aclValueBlobId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accessControlItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItem objects using query parameter filter criteria.",
        "operationId": "GetAccessControlItem",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccessControlItem"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AccessControlItem object.",
        "operationId": "CreateAccessControlItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccessControlItem"
      },
      "x-annotation-common.entity": "AccessControlItem"
    },
    "/accessControlItem/{accessControlItemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItem object by accessControlItemId URL path parameter.",
        "operationId": "GetAccessControlItemById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccessControlItem"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AccessControlItem object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccessControlItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccessControlItem"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AccessControlItem object\nNote: This is only allowed if AccessControlItem object is in DRAFT status\n",
        "operationId": "DeleteAccessControlItem",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccessControlItem"
      },
      "parameters": [
        {
          "name": "accessControlItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accessControlItemValue": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItemValue objects using query parameter filter criteria.",
        "operationId": "GetAccessControlItemValue",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccessControlItemValue"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AccessControlItemValue object.",
        "operationId": "CreateAccessControlItemValue",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemValueRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccessControlItemValue"
      },
      "x-annotation-common.entity": "AccessControlItemValue"
    },
    "/accessControlItemValue/{accessControlItemValueId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItemValue object by accessControlItemValueId URL path parameter.",
        "operationId": "GetAccessControlItemValueById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccessControlItemValue"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AccessControlItemValue object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccessControlItemValue",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemValueRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccessControlItemValue"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AccessControlItemValue object\nNote: This is only allowed if AccessControlItemValue object is in DRAFT status\n",
        "operationId": "DeleteAccessControlItemValue",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccessControlItemValue"
      },
      "parameters": [
        {
          "name": "accessControlItemValueId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accessControlItemValueBlob": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueBlobArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItemValueBlob objects using query parameter filter criteria.",
        "operationId": "GetAccessControlItemValueBlob",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccessControlItemValueBlob"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueBlobResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AccessControlItemValueBlob object.",
        "operationId": "CreateAccessControlItemValueBlob",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemValueBlobRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccessControlItemValueBlob"
      },
      "x-annotation-common.entity": "AccessControlItemValueBlob"
    },
    "/accessControlItemValueBlob/{accessControlItemValueBlobId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueBlobResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItemValueBlob object by accessControlItemValueBlobId URL path parameter.",
        "operationId": "GetAccessControlItemValueBlobById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccessControlItemValueBlob"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueBlobResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AccessControlItemValueBlob object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccessControlItemValueBlob",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemValueBlobRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccessControlItemValueBlob"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AccessControlItemValueBlob object\nNote: This is only allowed if AccessControlItemValueBlob object is in DRAFT status\n",
        "operationId": "DeleteAccessControlItemValueBlob",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccessControlItemValueBlob"
      },
      "parameters": [
        {
          "name": "accessControlItemValueBlobId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/user": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find User objects using query parameter filter criteria.",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUser"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new User object.",
        "operationId": "CreateUser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUser"
      },
      "x-annotation-common.entity": "User"
    },
    "/user/{userId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find User object by userId URL path parameter.",
        "operationId": "GetUserById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUser"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify User object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyUser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUser"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing User object\nNote: This is only allowed if User object is in DRAFT status\n",
        "operationId": "DeleteUser",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUser"
      },
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/userPasswordToken": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordTokenArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UserPasswordToken objects using query parameter filter criteria.",
        "operationId": "GetUserPasswordToken",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUserPasswordToken"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new UserPasswordToken object.",
        "operationId": "CreateUserPasswordToken",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordTokenRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUserPasswordToken"
      },
      "x-annotation-common.entity": "UserPasswordToken"
    },
    "/userPasswordToken/{userPasswordTokenId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UserPasswordToken object by userPasswordTokenId URL path parameter.",
        "operationId": "GetUserPasswordTokenById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUserPasswordToken"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify UserPasswordToken object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyUserPasswordToken",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordTokenRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUserPasswordToken"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing UserPasswordToken object\nNote: This is only allowed if UserPasswordToken object is in DRAFT status\n",
        "operationId": "DeleteUserPasswordToken",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUserPasswordToken"
      },
      "parameters": [
        {
          "name": "userPasswordTokenId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizationUnit": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OrganizationUnit objects using query parameter filter criteria.",
        "operationId": "GetOrganizationUnit",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readOrganizationUnit"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new OrganizationUnit object.",
        "operationId": "CreateOrganizationUnit",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUnitRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyOrganizationUnit"
      },
      "x-annotation-common.entity": "OrganizationUnit"
    },
    "/organizationUnit/{organizationUnitId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OrganizationUnit object by organizationUnitId URL path parameter.",
        "operationId": "GetOrganizationUnitById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readOrganizationUnit"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify OrganizationUnit object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyOrganizationUnit",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUnitRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyOrganizationUnit"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing OrganizationUnit object\nNote: This is only allowed if OrganizationUnit object is in DRAFT status\n",
        "operationId": "DeleteOrganizationUnit",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyOrganizationUnit"
      },
      "parameters": [
        {
          "name": "organizationUnitId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizationUnitAddress": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitAddressArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OrganizationUnitAddress objects using query parameter filter criteria.",
        "operationId": "GetOrganizationUnitAddress",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readOrganizationUnitAddress"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new OrganizationUnitAddress object.",
        "operationId": "CreateOrganizationUnitAddress",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUnitAddressRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyOrganizationUnitAddress"
      },
      "x-annotation-common.entity": "OrganizationUnitAddress"
    },
    "/organizationUnitAddress/{organizationUnitAddressId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitAddressResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OrganizationUnitAddress object by organizationUnitAddressId URL path parameter.",
        "operationId": "GetOrganizationUnitAddressById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readOrganizationUnitAddress"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify OrganizationUnitAddress object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyOrganizationUnitAddress",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUnitAddressRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyOrganizationUnitAddress"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing OrganizationUnitAddress object\nNote: This is only allowed if OrganizationUnitAddress object is in DRAFT status\n",
        "operationId": "DeleteOrganizationUnitAddress",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyOrganizationUnitAddress"
      },
      "parameters": [
        {
          "name": "organizationUnitAddressId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/usergroup": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Usergroup objects using query parameter filter criteria.",
        "operationId": "GetUsergroup",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUsergroup"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Usergroup object.",
        "operationId": "CreateUsergroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UsergroupRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUsergroup"
      },
      "x-annotation-common.entity": "Usergroup"
    },
    "/usergroup/{usergroupId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Usergroup object by usergroupId URL path parameter.",
        "operationId": "GetUsergroupById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUsergroup"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Usergroup object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyUsergroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UsergroupRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUsergroup"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Usergroup object\nNote: This is only allowed if Usergroup object is in DRAFT status\n",
        "operationId": "DeleteUsergroup",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUsergroup"
      },
      "parameters": [
        {
          "name": "usergroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/usergroupUser": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupUserArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UsergroupUser objects using query parameter filter criteria.",
        "operationId": "GetUsergroupUser",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUsergroupUser"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new UsergroupUser object.",
        "operationId": "CreateUsergroupUser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UsergroupUserRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUsergroupUser"
      },
      "x-annotation-common.entity": "UsergroupUser"
    },
    "/usergroupUser/{usergroupUserId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UsergroupUser object by usergroupUserId URL path parameter.",
        "operationId": "GetUsergroupUserById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUsergroupUser"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify UsergroupUser object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyUsergroupUser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UsergroupUserRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUsergroupUser"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing UsergroupUser object\nNote: This is only allowed if UsergroupUser object is in DRAFT status\n",
        "operationId": "DeleteUsergroupUser",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUsergroupUser"
      },
      "parameters": [
        {
          "name": "usergroupUserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/context": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Context objects using query parameter filter criteria.",
        "operationId": "GetContext",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContext"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Context object.",
        "operationId": "CreateContext",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContextRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContext"
      },
      "x-annotation-common.entity": "Context"
    },
    "/context/{contextId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Context object by contextId URL path parameter.",
        "operationId": "GetContextById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContext"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Context object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyContext",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContextRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContext"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Context object\nNote: This is only allowed if Context object is in DRAFT status\n",
        "operationId": "DeleteContext",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContext"
      },
      "parameters": [
        {
          "name": "contextId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contextUser": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextUserArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ContextUser objects using query parameter filter criteria.",
        "operationId": "GetContextUser",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContextUser"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new ContextUser object.",
        "operationId": "CreateContextUser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContextUserRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContextUser"
      },
      "x-annotation-common.entity": "ContextUser"
    },
    "/contextUser/{contextUserId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ContextUser object by contextUserId URL path parameter.",
        "operationId": "GetContextUserById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContextUser"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify ContextUser object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyContextUser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContextUserRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContextUser"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing ContextUser object\nNote: This is only allowed if ContextUser object is in DRAFT status\n",
        "operationId": "DeleteContextUser",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContextUser"
      },
      "parameters": [
        {
          "name": "contextUserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/avatar": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Avatar objects using query parameter filter criteria.",
        "operationId": "GetAvatar",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAvatar"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Avatar object.",
        "operationId": "CreateAvatar",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAvatar"
      },
      "x-annotation-common.entity": "Avatar"
    },
    "/avatar/{avatarId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Avatar object by avatarId URL path parameter.",
        "operationId": "GetAvatarById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAvatar"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Avatar object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAvatar",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAvatar"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Avatar object\nNote: This is only allowed if Avatar object is in DRAFT status\n",
        "operationId": "DeleteAvatar",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAvatar"
      },
      "parameters": [
        {
          "name": "avatarId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/casuser": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Casuser objects using query parameter filter criteria.",
        "operationId": "GetCasuser",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCasuser"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Casuser object.",
        "operationId": "CreateCasuser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasuserRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCasuser"
      },
      "x-annotation-common.entity": "Casuser"
    },
    "/casuser/{casuserId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Casuser object by casuserId URL path parameter.",
        "operationId": "GetCasuserById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCasuser"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Casuser object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyCasuser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasuserRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCasuser"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Casuser object\nNote: This is only allowed if Casuser object is in DRAFT status\n",
        "operationId": "DeleteCasuser",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCasuser"
      },
      "parameters": [
        {
          "name": "casuserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/casuser/{casuserId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate Casuser Resource",
        "operationId": "ActivateCasuser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasuserActivateOperationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "sendWelcomeNotification",
            "in": "query",
            "description": "some info",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "casuserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/casuser/{casuserId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate Casuser Resource",
        "operationId": "DeactivateCasuser",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasuserActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "casuserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customer": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Customer objects using query parameter filter criteria.",
        "operationId": "GetCustomer",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCustomer"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Customer object.",
        "operationId": "CreateCustomer",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCustomer"
      },
      "x-annotation-common.entity": "Customer"
    },
    "/customer/{customerId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Customer object by customerId URL path parameter.",
        "operationId": "GetCustomerById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCustomer"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Customer object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyCustomer",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCustomer"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Customer object\nNote: This is only allowed if Customer object is in DRAFT status\n",
        "operationId": "DeleteCustomer",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCustomer"
      },
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/csp": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CspArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Csp objects using query parameter filter criteria.",
        "operationId": "GetCsp",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCsp"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CspResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Csp object.",
        "operationId": "CreateCsp",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CspRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCsp"
      },
      "x-annotation-common.entity": "Csp"
    },
    "/csp/{cspId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CspResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Csp object by cspId URL path parameter.",
        "operationId": "GetCspById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCsp"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CspResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Csp object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyCsp",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CspRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCsp"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Csp object\nNote: This is only allowed if Csp object is in DRAFT status\n",
        "operationId": "DeleteCsp",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCsp"
      },
      "parameters": [
        {
          "name": "cspId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/domain": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Domain objects using query parameter filter criteria.",
        "operationId": "GetDomain",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readDomain"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Domain object.",
        "operationId": "CreateDomain",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyDomain"
      },
      "x-annotation-common.entity": "Domain"
    },
    "/domain/{domainId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Domain object by domainId URL path parameter.",
        "operationId": "GetDomainById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readDomain"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Domain object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyDomain",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyDomain"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Domain object\nNote: This is only allowed if Domain object is in DRAFT status\n",
        "operationId": "DeleteDomain",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyDomain"
      },
      "parameters": [
        {
          "name": "domainId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/emailTemplatePart": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplatePartArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find EmailTemplatePart objects using query parameter filter criteria.",
        "operationId": "GetEmailTemplatePart",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readEmailTemplatePart"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplatePartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new EmailTemplatePart object.",
        "operationId": "CreateEmailTemplatePart",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplatePartRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyEmailTemplatePart"
      },
      "x-annotation-common.entity": "EmailTemplatePart"
    },
    "/emailTemplatePart/{emailTemplatePartId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplatePartResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find EmailTemplatePart object by emailTemplatePartId URL path parameter.",
        "operationId": "GetEmailTemplatePartById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readEmailTemplatePart"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplatePartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify EmailTemplatePart object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyEmailTemplatePart",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplatePartRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyEmailTemplatePart"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing EmailTemplatePart object\nNote: This is only allowed if EmailTemplatePart object is in DRAFT status\n",
        "operationId": "DeleteEmailTemplatePart",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyEmailTemplatePart"
      },
      "parameters": [
        {
          "name": "emailTemplatePartId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/logUsrTag": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find LogUsrTag objects using query parameter filter criteria.",
        "operationId": "GetLogUsrTag",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readLogUsrTag"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new LogUsrTag object.",
        "operationId": "CreateLogUsrTag",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LogUsrTagRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyLogUsrTag"
      },
      "x-annotation-common.entity": "LogUsrTag"
    },
    "/logUsrTag/{logUsrTagId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find LogUsrTag object by logUsrTagId URL path parameter.",
        "operationId": "GetLogUsrTagById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readLogUsrTag"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify LogUsrTag object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyLogUsrTag",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LogUsrTagRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyLogUsrTag"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing LogUsrTag object\nNote: This is only allowed if LogUsrTag object is in DRAFT status\n",
        "operationId": "DeleteLogUsrTag",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyLogUsrTag"
      },
      "parameters": [
        {
          "name": "logUsrTagId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/logUsrTagAssignment": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find LogUsrTagAssignment objects using query parameter filter criteria.",
        "operationId": "GetLogUsrTagAssignment",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readLogUsrTagAssignment"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new LogUsrTagAssignment object.",
        "operationId": "CreateLogUsrTagAssignment",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LogUsrTagAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyLogUsrTagAssignment"
      },
      "x-annotation-common.entity": "LogUsrTagAssignment"
    },
    "/logUsrTagAssignment/{logUsrTagAssignmentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagAssignmentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find LogUsrTagAssignment object by logUsrTagAssignmentId URL path parameter.",
        "operationId": "GetLogUsrTagAssignmentById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readLogUsrTagAssignment"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify LogUsrTagAssignment object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyLogUsrTagAssignment",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LogUsrTagAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyLogUsrTagAssignment"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing LogUsrTagAssignment object\nNote: This is only allowed if LogUsrTagAssignment object is in DRAFT status\n",
        "operationId": "DeleteLogUsrTagAssignment",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyLogUsrTagAssignment"
      },
      "parameters": [
        {
          "name": "logUsrTagAssignmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/messageLocalization": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageLocalizationArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find MessageLocalization objects using query parameter filter criteria.",
        "operationId": "GetMessageLocalization",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readMessageLocalization"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageLocalizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new MessageLocalization object.",
        "operationId": "CreateMessageLocalization",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyMessageLocalization"
      },
      "x-annotation-common.entity": "MessageLocalization"
    },
    "/messageLocalization/{messageLocalizationId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageLocalizationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find MessageLocalization object by messageLocalizationId URL path parameter.",
        "operationId": "GetMessageLocalizationById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readMessageLocalization"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageLocalizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify MessageLocalization object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyMessageLocalization",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyMessageLocalization"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing MessageLocalization object\nNote: This is only allowed if MessageLocalization object is in DRAFT status\n",
        "operationId": "DeleteMessageLocalization",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyMessageLocalization"
      },
      "parameters": [
        {
          "name": "messageLocalizationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/messageTemplate": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find MessageTemplate objects using query parameter filter criteria.",
        "operationId": "GetMessageTemplate",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readMessageTemplate"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new MessageTemplate object.",
        "operationId": "CreateMessageTemplate",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplateRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyMessageTemplate"
      },
      "x-annotation-common.entity": "MessageTemplate"
    },
    "/messageTemplate/{messageTemplateId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find MessageTemplate object by messageTemplateId URL path parameter.",
        "operationId": "GetMessageTemplateById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readMessageTemplate"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify MessageTemplate object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyMessageTemplate",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplateRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyMessageTemplate"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing MessageTemplate object\nNote: This is only allowed if MessageTemplate object is in DRAFT status\n",
        "operationId": "DeleteMessageTemplate",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyMessageTemplate"
      },
      "parameters": [
        {
          "name": "messageTemplateId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/module": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Module objects using query parameter filter criteria.",
        "operationId": "GetModule",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readModule"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Module object.",
        "operationId": "CreateModule",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyModule"
      },
      "x-annotation-common.entity": "Module"
    },
    "/module/{moduleId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Module object by moduleId URL path parameter.",
        "operationId": "GetModuleById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readModule"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Module object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyModule",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyModule"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Module object\nNote: This is only allowed if Module object is in DRAFT status\n",
        "operationId": "DeleteModule",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyModule"
      },
      "parameters": [
        {
          "name": "moduleId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/notification": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Notification objects using query parameter filter criteria.",
        "operationId": "GetNotification",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readNotification"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Notification object.",
        "operationId": "CreateNotification",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyNotification"
      },
      "x-annotation-common.entity": "Notification"
    },
    "/notification/{notificationId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Notification object by notificationId URL path parameter.",
        "operationId": "GetNotificationById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readNotification"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Notification object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyNotification",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyNotification"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Notification object\nNote: This is only allowed if Notification object is in DRAFT status\n",
        "operationId": "DeleteNotification",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyNotification"
      },
      "parameters": [
        {
          "name": "notificationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orgunit": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgunitArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Orgunit objects using query parameter filter criteria.",
        "operationId": "GetOrgunit",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readOrgunit"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgunitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Orgunit object.",
        "operationId": "CreateOrgunit",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrgunitRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyOrgunit"
      },
      "x-annotation-common.entity": "Orgunit"
    },
    "/orgunit/{orgunitId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgunitResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Orgunit object by orgunitId URL path parameter.",
        "operationId": "GetOrgunitById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readOrgunit"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgunitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Orgunit object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyOrgunit",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrgunitRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyOrgunit"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Orgunit object\nNote: This is only allowed if Orgunit object is in DRAFT status\n",
        "operationId": "DeleteOrgunit",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyOrgunit"
      },
      "parameters": [
        {
          "name": "orgunitId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/person": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Person objects using query parameter filter criteria.",
        "operationId": "GetPerson",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readPerson"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Person object.",
        "operationId": "CreatePerson",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyPerson"
      },
      "x-annotation-common.entity": "Person"
    },
    "/person/{personId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Person object by personId URL path parameter.",
        "operationId": "GetPersonById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readPerson"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Person object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyPerson",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyPerson"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Person object\nNote: This is only allowed if Person object is in DRAFT status\n",
        "operationId": "DeletePerson",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyPerson"
      },
      "parameters": [
        {
          "name": "personId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/casResource": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasResourceArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CasResource objects using query parameter filter criteria.",
        "operationId": "GetCasResource",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCasResource"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasResourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new CasResource object.",
        "operationId": "CreateCasResource",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasResourceRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCasResource"
      },
      "x-annotation-common.entity": "CasResource"
    },
    "/casResource/{casResourceId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasResourceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CasResource object by casResourceId URL path parameter.",
        "operationId": "GetCasResourceById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCasResource"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasResourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify CasResource object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyCasResource",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasResourceRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCasResource"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing CasResource object\nNote: This is only allowed if CasResource object is in DRAFT status\n",
        "operationId": "DeleteCasResource",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCasResource"
      },
      "parameters": [
        {
          "name": "casResourceId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/resourceValue": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceValueArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ResourceValue objects using query parameter filter criteria.",
        "operationId": "GetResourceValue",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readResourceValue"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new ResourceValue object.",
        "operationId": "CreateResourceValue",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceValueRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyResourceValue"
      },
      "x-annotation-common.entity": "ResourceValue"
    },
    "/resourceValue/{resourceValueId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceValueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ResourceValue object by resourceValueId URL path parameter.",
        "operationId": "GetResourceValueById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readResourceValue"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify ResourceValue object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyResourceValue",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceValueRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyResourceValue"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing ResourceValue object\nNote: This is only allowed if ResourceValue object is in DRAFT status\n",
        "operationId": "DeleteResourceValue",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyResourceValue"
      },
      "parameters": [
        {
          "name": "resourceValueId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/auditRecord": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditRecordArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AuditRecord objects using query parameter filter criteria.",
        "operationId": "GetAuditRecord",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAuditRecord"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditRecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AuditRecord object.",
        "operationId": "CreateAuditRecord",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AuditRecordRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAuditRecord"
      },
      "x-annotation-common.entity": "AuditRecord"
    },
    "/auditRecord/{auditRecordId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditRecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AuditRecord object by auditRecordId URL path parameter.",
        "operationId": "GetAuditRecordById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAuditRecord"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditRecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AuditRecord object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAuditRecord",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AuditRecordRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAuditRecord"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AuditRecord object\nNote: This is only allowed if AuditRecord object is in DRAFT status\n",
        "operationId": "DeleteAuditRecord",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAuditRecord"
      },
      "parameters": [
        {
          "name": "auditRecordId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/userDomain": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDomainArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UserDomain objects using query parameter filter criteria.",
        "operationId": "GetUserDomain",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUserDomain"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDomainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new UserDomain object.",
        "operationId": "CreateUserDomain",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDomainRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUserDomain"
      },
      "x-annotation-common.entity": "UserDomain"
    },
    "/userDomain/{userDomainId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDomainResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UserDomain object by userDomainId URL path parameter.",
        "operationId": "GetUserDomainById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUserDomain"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDomainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify UserDomain object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyUserDomain",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDomainRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUserDomain"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing UserDomain object\nNote: This is only allowed if UserDomain object is in DRAFT status\n",
        "operationId": "DeleteUserDomain",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUserDomain"
      },
      "parameters": [
        {
          "name": "userDomainId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/group": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Group objects using query parameter filter criteria.",
        "operationId": "GetGroup",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readGroup"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Group object.",
        "operationId": "CreateGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyGroup"
      },
      "x-annotation-common.entity": "Group"
    },
    "/group/{groupId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Group object by groupId URL path parameter.",
        "operationId": "GetGroupById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readGroup"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Group object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyGroup"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Group object\nNote: This is only allowed if Group object is in DRAFT status\n",
        "operationId": "DeleteGroup",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyGroup"
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "TagRequest": {
        "title": "TagRequest",
        "description": "Tag based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Tag"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagResponse": {
        "title": "TagResponse",
        "description": "Tag based response. Returns single lib.Tag object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Tag"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagArrayResponse": {
        "title": "TagsResponse",
        "description": "List of Tags response. Returns list of lib.Tag objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Tag"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentRelationshipRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lib.TagAssignment"
              },
              {
                "$ref": "#/components/schemas/common.Resource"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentRelationshipArrayRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/lib.TagAssignment"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common.Resource"
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentRequest": {
        "title": "TagAssignmentRequest",
        "description": "TagAssignment based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TagAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentResponse": {
        "title": "TagAssignmentResponse",
        "description": "TagAssignment based response. Returns single lib.TagAssignment object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TagAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentArrayResponse": {
        "title": "TagAssignmentsResponse",
        "description": "List of TagAssignments response. Returns list of lib.TagAssignment objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.TagAssignment"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagRelationshipRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lib.Tag"
              },
              {
                "$ref": "#/components/schemas/common.Resource"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagRelationshipArrayRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/lib.Tag"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common.Resource"
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TaggedObjectRequest": {
        "title": "TaggedObjectRequest",
        "description": "TaggedObject based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TaggedObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TaggedObjectResponse": {
        "title": "TaggedObjectResponse",
        "description": "TaggedObject based response. Returns single lib.TaggedObject object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TaggedObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TaggedObjectArrayResponse": {
        "title": "TaggedObjectsResponse",
        "description": "List of TaggedObjects response. Returns list of lib.TaggedObject objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.TaggedObject"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclRequest": {
        "title": "AclRequest",
        "description": "Acl based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Acl"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclResponse": {
        "title": "AclResponse",
        "description": "Acl based response. Returns single lib.Acl object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Acl"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclArrayResponse": {
        "title": "AclsResponse",
        "description": "List of Acls response. Returns list of lib.Acl objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Acl"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclDelegationRequest": {
        "title": "AclDelegationRequest",
        "description": "AclDelegation based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclDelegation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclDelegationResponse": {
        "title": "AclDelegationResponse",
        "description": "AclDelegation based response. Returns single lib.AclDelegation object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclDelegation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclDelegationArrayResponse": {
        "title": "AclDelegationsResponse",
        "description": "List of AclDelegations response. Returns list of lib.AclDelegation objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AclDelegation"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclDelegationActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AclDelegation"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AclDelegationActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AclDelegationActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclInfoLocalizationRequest": {
        "title": "AclInfoLocalizationRequest",
        "description": "AclInfoLocalization based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclInfoLocalization"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclInfoLocalizationResponse": {
        "title": "AclInfoLocalizationResponse",
        "description": "AclInfoLocalization based response. Returns single lib.AclInfoLocalization object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclInfoLocalization"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclInfoLocalizationArrayResponse": {
        "title": "AclInfoLocalizationsResponse",
        "description": "List of AclInfoLocalizations response. Returns list of lib.AclInfoLocalization objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AclInfoLocalization"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueRequest": {
        "title": "AclValueRequest",
        "description": "AclValue based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueResponse": {
        "title": "AclValueResponse",
        "description": "AclValue based response. Returns single lib.AclValue object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueArrayResponse": {
        "title": "AclValuesResponse",
        "description": "List of AclValues response. Returns list of lib.AclValue objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AclValue"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueBlobRequest": {
        "title": "AclValueBlobRequest",
        "description": "AclValueBlob based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclValueBlob"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueBlobResponse": {
        "title": "AclValueBlobResponse",
        "description": "AclValueBlob based response. Returns single lib.AclValueBlob object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclValueBlob"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueBlobArrayResponse": {
        "title": "AclValueBlobsResponse",
        "description": "List of AclValueBlobs response. Returns list of lib.AclValueBlob objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AclValueBlob"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemRequest": {
        "title": "AccessControlItemRequest",
        "description": "AccessControlItem based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemResponse": {
        "title": "AccessControlItemResponse",
        "description": "AccessControlItem based response. Returns single lib.AccessControlItem object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemArrayResponse": {
        "title": "AccessControlItemsResponse",
        "description": "List of AccessControlItems response. Returns list of lib.AccessControlItem objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccessControlItem"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueRequest": {
        "title": "AccessControlItemValueRequest",
        "description": "AccessControlItemValue based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItemValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueResponse": {
        "title": "AccessControlItemValueResponse",
        "description": "AccessControlItemValue based response. Returns single lib.AccessControlItemValue object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItemValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueArrayResponse": {
        "title": "AccessControlItemValuesResponse",
        "description": "List of AccessControlItemValues response. Returns list of lib.AccessControlItemValue objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccessControlItemValue"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueBlobRequest": {
        "title": "AccessControlItemValueBlobRequest",
        "description": "AccessControlItemValueBlob based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItemValueBlob"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueBlobResponse": {
        "title": "AccessControlItemValueBlobResponse",
        "description": "AccessControlItemValueBlob based response. Returns single lib.AccessControlItemValueBlob object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItemValueBlob"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueBlobArrayResponse": {
        "title": "AccessControlItemValueBlobsResponse",
        "description": "List of AccessControlItemValueBlobs response. Returns list of lib.AccessControlItemValueBlob objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccessControlItemValueBlob"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserRequest": {
        "title": "UserRequest",
        "description": "User based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.User"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserResponse": {
        "title": "UserResponse",
        "description": "User based response. Returns single lib.User object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.User"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserArrayResponse": {
        "title": "UsersResponse",
        "description": "List of Users response. Returns list of lib.User objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.User"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserPasswordTokenRequest": {
        "title": "UserPasswordTokenRequest",
        "description": "UserPasswordToken based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserPasswordToken"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserPasswordTokenResponse": {
        "title": "UserPasswordTokenResponse",
        "description": "UserPasswordToken based response. Returns single lib.UserPasswordToken object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserPasswordToken"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserPasswordTokenArrayResponse": {
        "title": "UserPasswordTokensResponse",
        "description": "List of UserPasswordTokens response. Returns list of lib.UserPasswordToken objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.UserPasswordToken"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitRequest": {
        "title": "OrganizationUnitRequest",
        "description": "OrganizationUnit based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OrganizationUnit"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitResponse": {
        "title": "OrganizationUnitResponse",
        "description": "OrganizationUnit based response. Returns single lib.OrganizationUnit object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OrganizationUnit"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitArrayResponse": {
        "title": "OrganizationUnitsResponse",
        "description": "List of OrganizationUnits response. Returns list of lib.OrganizationUnit objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.OrganizationUnit"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitAddressRequest": {
        "title": "OrganizationUnitAddressRequest",
        "description": "OrganizationUnitAddress based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OrganizationUnitAddress"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitAddressResponse": {
        "title": "OrganizationUnitAddressResponse",
        "description": "OrganizationUnitAddress based response. Returns single lib.OrganizationUnitAddress object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OrganizationUnitAddress"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitAddressArrayResponse": {
        "title": "OrganizationUnitAddressesResponse",
        "description": "List of OrganizationUnitAddresses response. Returns list of lib.OrganizationUnitAddress objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.OrganizationUnitAddress"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupRequest": {
        "title": "UsergroupRequest",
        "description": "Usergroup based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Usergroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupResponse": {
        "title": "UsergroupResponse",
        "description": "Usergroup based response. Returns single lib.Usergroup object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Usergroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupArrayResponse": {
        "title": "UsergroupsResponse",
        "description": "List of Usergroups response. Returns list of lib.Usergroup objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Usergroup"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupUserRequest": {
        "title": "UsergroupUserRequest",
        "description": "UsergroupUser based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UsergroupUser"
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupUserResponse": {
        "title": "UsergroupUserResponse",
        "description": "UsergroupUser based response. Returns single lib.UsergroupUser object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UsergroupUser"
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupUserArrayResponse": {
        "title": "UsergroupUsersResponse",
        "description": "List of UsergroupUsers response. Returns list of lib.UsergroupUser objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.UsergroupUser"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextRequest": {
        "title": "ContextRequest",
        "description": "Context based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Context"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextResponse": {
        "title": "ContextResponse",
        "description": "Context based response. Returns single lib.Context object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Context"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextArrayResponse": {
        "title": "ContextsResponse",
        "description": "List of Contexts response. Returns list of lib.Context objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Context"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextUserRequest": {
        "title": "ContextUserRequest",
        "description": "ContextUser based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContextUser"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextUserResponse": {
        "title": "ContextUserResponse",
        "description": "ContextUser based response. Returns single lib.ContextUser object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContextUser"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextUserArrayResponse": {
        "title": "ContextUsersResponse",
        "description": "List of ContextUsers response. Returns list of lib.ContextUser objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContextUser"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AvatarRequest": {
        "title": "AvatarRequest",
        "description": "Avatar based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Avatar"
          }
        },
        "required": [
          "data"
        ]
      },
      "AvatarResponse": {
        "title": "AvatarResponse",
        "description": "Avatar based response. Returns single lib.Avatar object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Avatar"
          }
        },
        "required": [
          "data"
        ]
      },
      "AvatarArrayResponse": {
        "title": "AvatarsResponse",
        "description": "List of Avatars response. Returns list of lib.Avatar objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Avatar"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CasuserRequest": {
        "title": "CasuserRequest",
        "description": "Casuser based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Casuser"
          }
        },
        "required": [
          "data"
        ]
      },
      "CasuserResponse": {
        "title": "CasuserResponse",
        "description": "Casuser based response. Returns single lib.Casuser object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Casuser"
          }
        },
        "required": [
          "data"
        ]
      },
      "CasuserArrayResponse": {
        "title": "CasusersResponse",
        "description": "List of Casusers response. Returns list of lib.Casuser objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Casuser"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CasuserActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "CasuserActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CasuserActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomerRequest": {
        "title": "CustomerRequest",
        "description": "Customer based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Customer"
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomerResponse": {
        "title": "CustomerResponse",
        "description": "Customer based response. Returns single lib.Customer object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Customer"
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomerArrayResponse": {
        "title": "CustomersResponse",
        "description": "List of Customers response. Returns list of lib.Customer objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Customer"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CspRequest": {
        "title": "CspRequest",
        "description": "Csp based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Csp"
          }
        },
        "required": [
          "data"
        ]
      },
      "CspResponse": {
        "title": "CspResponse",
        "description": "Csp based response. Returns single lib.Csp object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Csp"
          }
        },
        "required": [
          "data"
        ]
      },
      "CspArrayResponse": {
        "title": "CspsResponse",
        "description": "List of Csps response. Returns list of lib.Csp objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Csp"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "DomainRequest": {
        "title": "DomainRequest",
        "description": "Domain based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Domain"
          }
        },
        "required": [
          "data"
        ]
      },
      "DomainResponse": {
        "title": "DomainResponse",
        "description": "Domain based response. Returns single lib.Domain object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Domain"
          }
        },
        "required": [
          "data"
        ]
      },
      "DomainArrayResponse": {
        "title": "DomainsResponse",
        "description": "List of Domains response. Returns list of lib.Domain objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Domain"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailTemplatePartRequest": {
        "title": "EmailTemplatePartRequest",
        "description": "EmailTemplatePart based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.EmailTemplatePart"
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailTemplatePartResponse": {
        "title": "EmailTemplatePartResponse",
        "description": "EmailTemplatePart based response. Returns single lib.EmailTemplatePart object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.EmailTemplatePart"
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailTemplatePartArrayResponse": {
        "title": "EmailTemplatePartsResponse",
        "description": "List of EmailTemplateParts response. Returns list of lib.EmailTemplatePart objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.EmailTemplatePart"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagRequest": {
        "title": "LogUsrTagRequest",
        "description": "LogUsrTag based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.LogUsrTag"
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagResponse": {
        "title": "LogUsrTagResponse",
        "description": "LogUsrTag based response. Returns single lib.LogUsrTag object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.LogUsrTag"
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagArrayResponse": {
        "title": "LogUsrTagsResponse",
        "description": "List of LogUsrTags response. Returns list of lib.LogUsrTag objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.LogUsrTag"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagAssignmentRequest": {
        "title": "LogUsrTagAssignmentRequest",
        "description": "LogUsrTagAssignment based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.LogUsrTagAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagAssignmentResponse": {
        "title": "LogUsrTagAssignmentResponse",
        "description": "LogUsrTagAssignment based response. Returns single lib.LogUsrTagAssignment object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.LogUsrTagAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagAssignmentArrayResponse": {
        "title": "LogUsrTagAssignmentsResponse",
        "description": "List of LogUsrTagAssignments response. Returns list of lib.LogUsrTagAssignment objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.LogUsrTagAssignment"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageLocalizationRequest": {
        "title": "MessageLocalizationRequest",
        "description": "MessageLocalization based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.MessageLocalization"
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageLocalizationResponse": {
        "title": "MessageLocalizationResponse",
        "description": "MessageLocalization based response. Returns single lib.MessageLocalization object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.MessageLocalization"
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageLocalizationArrayResponse": {
        "title": "MessageLocalizationsResponse",
        "description": "List of MessageLocalizations response. Returns list of lib.MessageLocalization objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.MessageLocalization"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageTemplateRequest": {
        "title": "MessageTemplateRequest",
        "description": "MessageTemplate based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.MessageTemplate"
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageTemplateResponse": {
        "title": "MessageTemplateResponse",
        "description": "MessageTemplate based response. Returns single lib.MessageTemplate object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.MessageTemplate"
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageTemplateArrayResponse": {
        "title": "MessageTemplatesResponse",
        "description": "List of MessageTemplates response. Returns list of lib.MessageTemplate objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.MessageTemplate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ModuleRequest": {
        "title": "ModuleRequest",
        "description": "Module based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Module"
          }
        },
        "required": [
          "data"
        ]
      },
      "ModuleResponse": {
        "title": "ModuleResponse",
        "description": "Module based response. Returns single lib.Module object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Module"
          }
        },
        "required": [
          "data"
        ]
      },
      "ModuleArrayResponse": {
        "title": "ModulesResponse",
        "description": "List of Modules response. Returns list of lib.Module objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Module"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "NotificationRequest": {
        "title": "NotificationRequest",
        "description": "Notification based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Notification"
          }
        },
        "required": [
          "data"
        ]
      },
      "NotificationResponse": {
        "title": "NotificationResponse",
        "description": "Notification based response. Returns single lib.Notification object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Notification"
          }
        },
        "required": [
          "data"
        ]
      },
      "NotificationArrayResponse": {
        "title": "NotificationsResponse",
        "description": "List of Notifications response. Returns list of lib.Notification objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Notification"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "OrgunitRequest": {
        "title": "OrgunitRequest",
        "description": "Orgunit based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Orgunit"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrgunitResponse": {
        "title": "OrgunitResponse",
        "description": "Orgunit based response. Returns single lib.Orgunit object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Orgunit"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrgunitArrayResponse": {
        "title": "OrgunitsResponse",
        "description": "List of Orgunits response. Returns list of lib.Orgunit objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Orgunit"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonRequest": {
        "title": "PersonRequest",
        "description": "Person based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Person"
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonResponse": {
        "title": "PersonResponse",
        "description": "Person based response. Returns single lib.Person object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Person"
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonArrayResponse": {
        "title": "PeopleResponse",
        "description": "List of People response. Returns list of lib.Person objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Person"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CasResourceRequest": {
        "title": "CasResourceRequest",
        "description": "CasResource based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CasResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CasResourceResponse": {
        "title": "CasResourceResponse",
        "description": "CasResource based response. Returns single lib.CasResource object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CasResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CasResourceArrayResponse": {
        "title": "CasResourcesResponse",
        "description": "List of CasResources response. Returns list of lib.CasResource objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.CasResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ResourceValueRequest": {
        "title": "ResourceValueRequest",
        "description": "ResourceValue based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ResourceValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "ResourceValueResponse": {
        "title": "ResourceValueResponse",
        "description": "ResourceValue based response. Returns single lib.ResourceValue object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ResourceValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "ResourceValueArrayResponse": {
        "title": "ResourceValuesResponse",
        "description": "List of ResourceValues response. Returns list of lib.ResourceValue objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ResourceValue"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AuditRecordRequest": {
        "title": "AuditRecordRequest",
        "description": "AuditRecord based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AuditRecord"
          }
        },
        "required": [
          "data"
        ]
      },
      "AuditRecordResponse": {
        "title": "AuditRecordResponse",
        "description": "AuditRecord based response. Returns single lib.AuditRecord object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AuditRecord"
          }
        },
        "required": [
          "data"
        ]
      },
      "AuditRecordArrayResponse": {
        "title": "AuditRecordsResponse",
        "description": "List of AuditRecords response. Returns list of lib.AuditRecord objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AuditRecord"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserDomainRequest": {
        "title": "UserDomainRequest",
        "description": "UserDomain based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserDomain"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserDomainResponse": {
        "title": "UserDomainResponse",
        "description": "UserDomain based response. Returns single lib.UserDomain object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserDomain"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserDomainArrayResponse": {
        "title": "UserDomainsResponse",
        "description": "List of UserDomains response. Returns list of lib.UserDomain objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.UserDomain"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GroupRequest": {
        "title": "GroupRequest",
        "description": "Group based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Group"
          }
        },
        "required": [
          "data"
        ]
      },
      "GroupResponse": {
        "title": "GroupResponse",
        "description": "Group based response. Returns single lib.Group object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Group"
          }
        },
        "required": [
          "data"
        ]
      },
      "GroupArrayResponse": {
        "title": "GroupsResponse",
        "description": "List of Groups response. Returns list of lib.Group objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Group"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "lib.FileData": {
        "$ref": "#/components/schemas/common.FileData"
      },
      "lib.Resource": {
        "$ref": "#/components/schemas/common.Resource"
      },
      "lib.RelationshipToOne": {
        "$ref": "#/components/schemas/common.RelationshipToOne"
      },
      "lib.RelationshipToMany": {
        "$ref": "#/components/schemas/common.RelationshipToMany"
      },
      "lib.AclValueType": {
        "enum": [
          "BLOB",
          "BOOLEAN",
          "DATE",
          "DATETIME",
          "NUMERIC",
          "TEXT"
        ],
        "type": "string"
      },
      "lib.ContextType": {
        "enum": [
          "ACCOUNT",
          "CSP",
          "CUSTOMER",
          "GROUP"
        ],
        "type": "string"
      },
      "lib.DelegationStatus": {
        "enum": [
          "ACTIVE",
          "ARCHIVED",
          "INACTIVE"
        ],
        "type": "string"
      },
      "lib.NotificationChannel": {
        "enum": [
          "EMAIL",
          "KAFKA",
          "SMS"
        ],
        "type": "string"
      },
      "lib.TaggedObjectType": {
        "description": "SUBSCRIPTION-ITEM\n",
        "enum": [
          "IMSI",
          "SIM",
          "SUBSCRIPTION-ITEM"
        ],
        "type": "string"
      },
      "lib.TagScope": {
        "enum": [
          "PRIVATE",
          "PUBLIC"
        ],
        "type": "string"
      },
      "lib.TemplateType": {
        "description": "PLAIN-TEXT\n",
        "enum": [
          "HTML",
          "PLAIN-TEXT"
        ],
        "type": "string"
      },
      "lib.UiLanguage": {
        "enum": [
          "ENGLISH",
          "GERMAN",
          "POLISH",
          "SPANISH"
        ],
        "type": "string"
      },
      "lib.UserStatus": {
        "enum": [
          "ACTIVE",
          "DISABLED",
          "DELETED"
        ],
        "type": "string"
      },
      "lib.Account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Acl": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "aclDefaultValue": {
                    "description": "Default value.\n",
                    "type": "string"
                  },
                  "aclValueType": {
                    "$ref": "#/components/schemas/lib.AclValueType"
                  },
                  "aclValues": {
                    "description": "List of comma separated values.\n",
                    "type": "string"
                  },
                  "category": {
                    "description": "???\n",
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "resourceAware": {
                    "description": "Is ACL multiplicable for many resource types.   ????\n",
                    "type": "boolean"
                  },
                  "resourceType": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclInfoLocalizations": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclInfoLocalization"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "aclValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Domain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "module": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Module"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AclDelegation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "delegatorComment": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.DelegationStatus"
                  },
                  "validFrom": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validTo": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "delegateeContextUser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ContextUser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "delegatorContextUser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ContextUser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AclInfoLocalization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "languageCode": {
                    "description": "English: en American English: en_US British English:  en_UK\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "summary": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "acl": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Acl"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AclValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "aclValue": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isInheritableIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "acl": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Acl"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "aclValueBlobs": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValueBlob"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Context"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Usergroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AclValueBlob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "aclValue": {
                    "$ref": "#/components/schemas/lib.FileData"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclValue": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AclValue"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Avatar": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "avatarSmall": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "avatar": {
                    "$ref": "#/components/schemas/lib.FileData"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Casuser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isApiUserIndicator": {
                    "description": "API User must not have a person relation. API User must not switch context, i.e. the api-user - user-organization association is mutually exclusive.\n",
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "loginPasswordHash": {
                    "type": "string"
                  },
                  "loginUsername": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.UserStatus"
                  },
                  "uiLanguage": {
                    "$ref": "#/components/schemas/lib.UiLanguage"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "avatars": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Avatar"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contextUsers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContextUser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Domain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "person": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Person"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tag"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroupUsers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsergroupUser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Context": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "contextType": {
                    "$ref": "#/components/schemas/lib.ContextType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "aclValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contextUsers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContextUser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "csp": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Csp"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Customer"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "messageTemplates": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.MessageTemplate"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "orgunit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Orgunit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tag"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Usergroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContextUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclDelegationsDelegateeContextUser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclDelegation"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "aclDelegationsDelegatorContextUser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclDelegation"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Context"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Csp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Customer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Domain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "description": "Additional description.\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "description": "Unique name of the domain.\n",
                    "type": "string"
                  },
                  "sn": {
                    "description": "Unique short name of the domain\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Acl"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casusers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Casuser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.EmailTemplatePart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "content": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mimeType": {
                    "description": "Part MIME Type\n",
                    "type": "string"
                  },
                  "name": {
                    "description": "Part Name\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "messageTemplate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.MessageTemplate"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.LogUsrTag": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "enterDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "id": {
                    "format": "int32",
                    "type": "number"
                  },
                  "orgunitId": {
                    "format": "int32",
                    "type": "number"
                  },
                  "userId": {
                    "format": "int32",
                    "type": "number"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.LogUsrTagAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "enterDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "js": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "url": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.MessageLocalization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "languageCode": {
                    "description": "English: en American English: en-US British English:  en-UK\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "messageTemplate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.MessageTemplate"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.MessageTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "defaultContent": {
                    "type": "string"
                  },
                  "description": {
                    "description": "Additional description\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mimeType": {
                    "description": "Part MIME Type\n",
                    "type": "string"
                  },
                  "name": {
                    "description": "Template Name\n",
                    "type": "string"
                  },
                  "notificationChannel": {
                    "$ref": "#/components/schemas/lib.NotificationChannel"
                  },
                  "skin": {
                    "type": "string"
                  },
                  "sn": {
                    "description": "Unique short name, which is used as CAS serviceId\n",
                    "type": "string"
                  },
                  "templateType": {
                    "$ref": "#/components/schemas/lib.TemplateType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Context"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "emailTemplateParts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.EmailTemplatePart"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "messageLocalizations": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.MessageLocalization"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Module": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "description": "Module Name\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Acl"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "modulesParentModule": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Module"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentModule": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Module"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resources": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Notification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "eventDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "eventCode": {
                    "format": "int64",
                    "type": "number"
                  },
                  "parameters": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "reportId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "domainId": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "organizationUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.UserDomain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Orgunit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Person": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "casusers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Casuser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CasResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "description": "Additional description\n",
                    "type": "string"
                  },
                  "key": {
                    "description": "Resource Key\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "value": {
                    "description": "Parameter Value\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "module": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Module"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resourceValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ResourceValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ResourceValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "language": {
                    "description": "Resource Language\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "themeTemplateName": {
                    "description": "Customer Theme\n",
                    "type": "string"
                  },
                  "value": {
                    "description": "Parameter Value\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CasResource"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Tag": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "color": {
                    "maxLength": 6,
                    "description": "RGB, HEX notation FFFFFF\n",
                    "type": "string"
                  },
                  "fontIcon": {
                    "maxLength": 6,
                    "description": "HEX notation FFFFFF\n",
                    "type": "string"
                  },
                  "scope": {
                    "$ref": "#/components/schemas/lib.TagScope"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.TagStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "orgUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TagAssignment"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TaggedObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "objectReference": {
                    "format": "int64",
                    "type": "number"
                  },
                  "objectReferenceText": {
                    "type": "string"
                  },
                  "objectType": {
                    "$ref": "#/components/schemas/lib.TaggedObjectType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tag": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Tag"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Usergroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "isTemplateIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string"
                  },
                  "templateContextType": {
                    "$ref": "#/components/schemas/lib.ContextType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Context"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroupUsers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsergroupUser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.UsergroupUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Usergroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AuditStatus": {
        "description": "Audit status OK or FAILED.\nOperation success\nOperation Failed\n",
        "enum": [
          "OK",
          "FAILED"
        ],
        "type": "string"
      },
      "lib.AuditType": {
        "description": "Predefined Global Audit Event Types.\nObject Modified\nObject Created\nObject Deleted\nObject Opened in Read Only mode\nObject Downloaded to user computer.\n",
        "enum": [
          "MODIFIED",
          "CREATED",
          "DELETED",
          "VIEWED",
          "DOWNLOADED"
        ],
        "type": "string"
      },
      "lib.AclDataType": {
        "enum": [
          "BOOLEAN",
          "STRING",
          "NUMERIC",
          "DATE",
          "TIME",
          "DATETIME",
          "CBLOB"
        ],
        "type": "string"
      },
      "lib.OrganizationUnitType": {
        "description": "Type of Organization Unit\n",
        "enum": [
          "CUSTOMER",
          "AREA",
          "COUNTRY",
          "SUBSIDIARY",
          "RESELLER",
          "DISTRIBUTOR",
          "FLEET",
          "DEPARTMENT",
          "TEAM",
          "OTHERS"
        ],
        "type": "string"
      },
      "lib.ResourceType": {
        "description": "Predefined Global Resource Types\nUsers Group\nSIM Card identified by ICCID\nFirewall Security Profile\nAction assigned to Rule\nRule Assigned to SIM, ORGANIZATION or SUBSCRIBER\nBatch Task\nSubscriber identified by IMSI\n",
        "enum": [
          "USER",
          "USER-GROUP",
          "ORGANIZATION",
          "SIM",
          "TARIFF",
          "SECURITY-PROFILE",
          "REPORT",
          "INVOICE",
          "DEVICE",
          "POOL",
          "RULE",
          "ACTION",
          "RULE-ACTION",
          "LOCATION",
          "RULE-ASSIGNMENT",
          "BATCH-TASK",
          "EVENT",
          "SUBSCRIBER"
        ],
        "type": "string"
      },
      "lib.ResetPasswordTokenStatus": {
        "enum": [
          "PENDING",
          "ERROR",
          "DONE"
        ],
        "type": "string"
      },
      "lib.TagStatus": {
        "enum": [
          "ACTIVE",
          "DELETE-PROTECTED"
        ],
        "type": "string"
      },
      "lib.AccessControlItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "resourceType": {
                    "$ref": "#/components/schemas/lib.ResourceType"
                  },
                  "resourceAware": {
                    "description": "Is ACL multiplicable for many resource types.\n",
                    "type": "boolean"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "category": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "type": {
                    "$ref": "#/components/schemas/lib.AclDataType"
                  },
                  "values": {
                    "maxLength": 4096,
                    "description": "List of comma separated values.\n",
                    "type": "string"
                  },
                  "defaultValue": {
                    "maxLength": 4096,
                    "description": "Default value.\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.UserDomain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccessControlItemValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "resourceId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "resourceType": {
                    "$ref": "#/components/schemas/lib.ResourceType"
                  },
                  "value": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "delegate": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "group": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Group"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acl": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccessControlItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "organization": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "itemValueBlob": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValueBlob"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccessControlItemValueBlob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "value": {
                    "$ref": "#/components/schemas/lib.FileData"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "itemValue": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccessControlItemValue"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AuditRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/lib.AuditType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.AuditStatus"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "resourceId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "resourceType": {
                    "$ref": "#/components/schemas/lib.ResourceType"
                  },
                  "resourceName": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "taskId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "eventDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "ipAddress": {
                    "maxLength": 46,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "organizationContext": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.UserDomain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 4096,
                    "description": "Unique name for Domain.\n",
                    "type": "string"
                  },
                  "shortName": {
                    "maxLength": 4096,
                    "description": "Short name, unique used as CAS serviceId.\n",
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 4096,
                    "description": "Additional description.\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organizations": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OrganizationUnit"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "users": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.User"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Group": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "role": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "orgUnitId": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organizationUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Group"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Group"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "users": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.User"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.OrganizationUnit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "shortName": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalUid": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "externalType": {
                    "format": "int32",
                    "type": "number"
                  },
                  "externalId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "virtualPoolUuid": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "theme": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "rootCompany": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "lastSyncDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "type": {
                    "$ref": "#/components/schemas/lib.OrganizationUnitType"
                  },
                  "costCenter": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "companyNumber": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "dunsNumber": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "taxNumber": {
                    "maxLength": 1024,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "parentUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subUnits": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OrganizationUnit"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.UserDomain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "addreses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OrganizationUnitAddress"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "groups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Group"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tag"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "auditRecords": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AuditRecord"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "users": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.User"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.OrganizationUnitAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "mail": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "phone": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "mobile": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "street": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "city": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "country": {
                    "maxLength": 1024,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "unit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.UserPasswordToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "tokenTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "tokenValue": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "mail": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ResetPasswordTokenStatus"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TagAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "objectIdentifier": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "objectType": {
                    "$ref": "#/components/schemas/lib.ResourceType"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "createdBy": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "orgUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Tag"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "lastName": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "name": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "loginName": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "title": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "password": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mail": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "phone": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.UserStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Avatar"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tag"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "auditRecords": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AuditRecord"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "organizationUnits": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OrganizationUnit"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "userDomains": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UserDomain"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "groups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Group"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "common.Resource": {
        "description": "Abstract Resource",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "common.FileData": {
        "description": "Abstract file data",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          }
        },
        "required": [
          "fileName",
          "content"
        ],
        "type": "object"
      },
      "common.RelationshipToOne": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/common.Resource"
          }
        },
        "required": [
          "data"
        ]
      },
      "common.RelationshipToMany": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Resource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "common.BatchTaskItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "format": "int64",
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/common.Resource"
          },
          "status": {
            "$ref": "#/components/schemas/common.BatchTaskItemStatus"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.ErrorObject"
            }
          }
        },
        "required": [
          "itemId",
          "status"
        ]
      },
      "common.BatchTaskAttributes": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "creationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.BatchTaskItem"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "common.BatchTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/common.BatchTaskAttributes"
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "common.BatchTaskItemStatus": {
        "enum": [
          "WAITING",
          "PENDING",
          "SUCCESS",
          "ERROR"
        ],
        "type": "string"
      },
      "common.ErrorObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "common.ErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.ErrorObject"
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "common.Heartbeat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "timestamp": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relaitonships": {
                "type": "object"
              },
              "meta": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      }
    },
    "responses": {},
    "parameters": {
      "trait_common.filtered_filter": {
        "name": "filter",
        "in": "query",
        "description": "Filtering expression follows LISP syntax.\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_common.paged_pageOffset": {
        "name": "pageOffset",
        "in": "query",
        "schema": {
          "type": "integer"
        }
      },
      "trait_common.paged_pageLimit": {
        "name": "pageLimit",
        "in": "query",
        "schema": {
          "type": "integer"
        }
      },
      "trait_common.sorted_sort": {
        "name": "sort",
        "in": "query",
        "description": "The value for sort represents sort fields. \nMultiple sortfields are comma-separated.\nSort order for each field is ascending - unless it is prefixed with a minus, in which case sort order is descending\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_common.included_include": {
        "name": "include",
        "in": "query",
        "description": "Referenced resources which are to be included in response.\nYou can include in response any attribute listed in Relationships.\n",
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "basic": {
        "description": "This API supports Basic Authentication.\n",
        "type": "http",
        "scheme": "basic"
      },
      "oauth_2_0": {
        "description": "This API supports OAuth 2.0 for authenticating all API requests.\n",
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://{cspUrl}/cas/oauth2/authorize",
            "tokenUrl": "https://{cspUrl}/cas/oauth2/token",
            "scopes": {}
          }
        }
      }
    },
    "links": {},
    "callbacks": {}
  }
}