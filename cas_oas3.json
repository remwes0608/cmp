{
  "openapi": "3.0.0",
  "info": {
    "title": "CAS User Management API",
    "version": "v1",
    "description": "cas Management\n"
  },
  "servers": [
    {
      "url": "https://${baseUri}/",
      "variables": {
        "baseUri": {
          "default": "baseUri"
        }
      }
    },
    {
      "url": "http://${baseUri}/",
      "variables": {
        "baseUri": {
          "default": "baseUri"
        }
      }
    }
  ],
  "paths": {
    "/tag": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Tag objects using query parameter filter criteria.",
        "operationId": "Find Tag objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readTag"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Tag object.",
        "operationId": "Create Tag object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyTag"
      },
      "x-annotation-common.entity": "Tag"
    },
    "/tag/{tagId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Tag object by tagId URL path parameter.",
        "operationId": "Find Tag object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readTag"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Tag object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Tag object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyTag"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Tag object\nNote: This is only allowed if Tag object is in DRAFT status\n",
        "operationId": "Delete Tag object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyTag"
      },
      "parameters": [
        {
          "name": "tagId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tag/{tagId}/relationships/assignments": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "Lists Relationships",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Relationship added successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Add Relationship\n",
        "operationId": "Add Relationship",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Relationsips merged successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Merge Relationships\n",
        "operationId": "Merge Relationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Relationships removed successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Relationships\n",
        "operationId": "Remove Relationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "tagId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tagAssignment": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Object assignments using query parameter filter criteria.",
        "operationId": "Find Object assignments",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readTagAssignment"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Object assignments.",
        "operationId": "Create Object assignments",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyTagAssignment"
      },
      "x-annotation-common.entity": "TagAssignment"
    },
    "/tagAssignment/{tagAssignmentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Object assignments by tagAssignmentId URL path parameter.",
        "operationId": "Find Object assignments by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readTagAssignment"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Object assignments.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Object assignments",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyTagAssignment"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Object assignments\nNote: This is only allowed if Object assignments is in DRAFT status\n",
        "operationId": "Delete Object assignments",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyTagAssignment"
      },
      "parameters": [
        {
          "name": "tagAssignmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/tagAssignment/{tagAssignmentId}/relationships/tags": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "Lists Relationships",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Relationship added successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Add Relationship\n",
        "operationId": "Add Relationship",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Relationsips merged successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Merge Relationships\n",
        "operationId": "Merge Relationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Relationships removed successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Relationships\n",
        "operationId": "Remove Relationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "tagAssignmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/taggedObject": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaggedObjectArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find TaggedObject objects using query parameter filter criteria.",
        "operationId": "Find TaggedObject objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readTaggedObject"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaggedObjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new TaggedObject object.",
        "operationId": "Create TaggedObject object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TaggedObjectRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyTaggedObject"
      },
      "x-annotation-common.entity": "TaggedObject"
    },
    "/taggedObject/{taggedObjectId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaggedObjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find TaggedObject object by taggedObjectId URL path parameter.",
        "operationId": "Find TaggedObject object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readTaggedObject"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaggedObjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify TaggedObject object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify TaggedObject object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/TaggedObjectRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyTaggedObject"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing TaggedObject object\nNote: This is only allowed if TaggedObject object is in DRAFT status\n",
        "operationId": "Delete TaggedObject object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyTaggedObject"
      },
      "parameters": [
        {
          "name": "taggedObjectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/acl": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Acl objects using query parameter filter criteria.",
        "operationId": "Find Acl objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAcl"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Acl object.",
        "operationId": "Create Acl object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAcl"
      },
      "x-annotation-common.entity": "Acl"
    },
    "/acl/{aclId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Acl object by aclId URL path parameter.",
        "operationId": "Find Acl object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAcl"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Acl object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Acl object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAcl"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Acl object\nNote: This is only allowed if Acl object is in DRAFT status\n",
        "operationId": "Delete Acl object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAcl"
      },
      "parameters": [
        {
          "name": "aclId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclDelegation": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclDelegation objects using query parameter filter criteria.",
        "operationId": "Find AclDelegation objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAclDelegation"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AclDelegation object.",
        "operationId": "Create AclDelegation object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclDelegationRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAclDelegation"
      },
      "x-annotation-common.entity": "AclDelegation"
    },
    "/aclDelegation/{aclDelegationId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclDelegation object by aclDelegationId URL path parameter.",
        "operationId": "Find AclDelegation object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAclDelegation"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AclDelegation object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify AclDelegation object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclDelegationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAclDelegation"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AclDelegation object\nNote: This is only allowed if AclDelegation object is in DRAFT status\n",
        "operationId": "Delete AclDelegation object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAclDelegation"
      },
      "parameters": [
        {
          "name": "aclDelegationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclDelegation/{aclDelegationId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate Resource",
        "operationId": "Activate Resource",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclDelegationActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "aclDelegationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclDelegation/{aclDelegationId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclDelegationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate Resource",
        "operationId": "Deactivate Resource",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclDelegationActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "aclDelegationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclInfoLocalization": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclInfoLocalizationArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclInfoLocalization objects using query parameter filter criteria.",
        "operationId": "Find AclInfoLocalization objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAclInfoLocalization"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclInfoLocalizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AclInfoLocalization object.",
        "operationId": "Create AclInfoLocalization object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclInfoLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAclInfoLocalization"
      },
      "x-annotation-common.entity": "AclInfoLocalization"
    },
    "/aclInfoLocalization/{aclInfoLocalizationId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclInfoLocalizationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclInfoLocalization object by aclInfoLocalizationId URL path parameter.",
        "operationId": "Find AclInfoLocalization object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAclInfoLocalization"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclInfoLocalizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AclInfoLocalization object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify AclInfoLocalization object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclInfoLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAclInfoLocalization"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AclInfoLocalization object\nNote: This is only allowed if AclInfoLocalization object is in DRAFT status\n",
        "operationId": "Delete AclInfoLocalization object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAclInfoLocalization"
      },
      "parameters": [
        {
          "name": "aclInfoLocalizationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclValue": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclValue objects using query parameter filter criteria.",
        "operationId": "Find AclValue objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAclValue"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AclValue object.",
        "operationId": "Create AclValue object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclValueRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAclValue"
      },
      "x-annotation-common.entity": "AclValue"
    },
    "/aclValue/{aclValueId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclValue object by aclValueId URL path parameter.",
        "operationId": "Find AclValue object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAclValue"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AclValue object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify AclValue object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclValueRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAclValue"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AclValue object\nNote: This is only allowed if AclValue object is in DRAFT status\n",
        "operationId": "Delete AclValue object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAclValue"
      },
      "parameters": [
        {
          "name": "aclValueId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/aclValueBlob": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueBlobArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclValueBlob objects using query parameter filter criteria.",
        "operationId": "Find AclValueBlob objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAclValueBlob"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueBlobResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AclValueBlob object.",
        "operationId": "Create AclValueBlob object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclValueBlobRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAclValueBlob"
      },
      "x-annotation-common.entity": "AclValueBlob"
    },
    "/aclValueBlob/{aclValueBlobId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueBlobResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AclValueBlob object by aclValueBlobId URL path parameter.",
        "operationId": "Find AclValueBlob object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAclValueBlob"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AclValueBlobResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AclValueBlob object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify AclValueBlob object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AclValueBlobRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAclValueBlob"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AclValueBlob object\nNote: This is only allowed if AclValueBlob object is in DRAFT status\n",
        "operationId": "Delete AclValueBlob object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAclValueBlob"
      },
      "parameters": [
        {
          "name": "aclValueBlobId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accessControlItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItem objects using query parameter filter criteria.",
        "operationId": "Find AccessControlItem objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccessControlItem"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AccessControlItem object.",
        "operationId": "Create AccessControlItem object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccessControlItem"
      },
      "x-annotation-common.entity": "AccessControlItem"
    },
    "/accessControlItem/{accessControlItemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItem object by accessControlItemId URL path parameter.",
        "operationId": "Find AccessControlItem object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccessControlItem"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AccessControlItem object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify AccessControlItem object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccessControlItem"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AccessControlItem object\nNote: This is only allowed if AccessControlItem object is in DRAFT status\n",
        "operationId": "Delete AccessControlItem object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccessControlItem"
      },
      "parameters": [
        {
          "name": "accessControlItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accessControlItemValue": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItemValue objects using query parameter filter criteria.",
        "operationId": "Find AccessControlItemValue objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccessControlItemValue"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AccessControlItemValue object.",
        "operationId": "Create AccessControlItemValue object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemValueRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccessControlItemValue"
      },
      "x-annotation-common.entity": "AccessControlItemValue"
    },
    "/accessControlItemValue/{accessControlItemValueId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItemValue object by accessControlItemValueId URL path parameter.",
        "operationId": "Find AccessControlItemValue object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccessControlItemValue"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AccessControlItemValue object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify AccessControlItemValue object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemValueRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccessControlItemValue"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AccessControlItemValue object\nNote: This is only allowed if AccessControlItemValue object is in DRAFT status\n",
        "operationId": "Delete AccessControlItemValue object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccessControlItemValue"
      },
      "parameters": [
        {
          "name": "accessControlItemValueId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accessControlItemValueBlob": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueBlobArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItemValueBlob objects using query parameter filter criteria.",
        "operationId": "Find AccessControlItemValueBlob objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccessControlItemValueBlob"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueBlobResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AccessControlItemValueBlob object.",
        "operationId": "Create AccessControlItemValueBlob object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemValueBlobRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccessControlItemValueBlob"
      },
      "x-annotation-common.entity": "AccessControlItemValueBlob"
    },
    "/accessControlItemValueBlob/{accessControlItemValueBlobId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueBlobResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccessControlItemValueBlob object by accessControlItemValueBlobId URL path parameter.",
        "operationId": "Find AccessControlItemValueBlob object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccessControlItemValueBlob"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlItemValueBlobResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AccessControlItemValueBlob object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify AccessControlItemValueBlob object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlItemValueBlobRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccessControlItemValueBlob"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AccessControlItemValueBlob object\nNote: This is only allowed if AccessControlItemValueBlob object is in DRAFT status\n",
        "operationId": "Delete AccessControlItemValueBlob object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccessControlItemValueBlob"
      },
      "parameters": [
        {
          "name": "accessControlItemValueBlobId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/user": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find User objects using query parameter filter criteria.",
        "operationId": "Find User objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUser"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new User object.",
        "operationId": "Create User object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUser"
      },
      "x-annotation-common.entity": "User"
    },
    "/user/{userId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find User object by userId URL path parameter.",
        "operationId": "Find User object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUser"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify User object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify User object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUser"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing User object\nNote: This is only allowed if User object is in DRAFT status\n",
        "operationId": "Delete User object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUser"
      },
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/userPasswordToken": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordTokenArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UserPasswordToken objects using query parameter filter criteria.",
        "operationId": "Find UserPasswordToken objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUserPasswordToken"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new UserPasswordToken object.",
        "operationId": "Create UserPasswordToken object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordTokenRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUserPasswordToken"
      },
      "x-annotation-common.entity": "UserPasswordToken"
    },
    "/userPasswordToken/{userPasswordTokenId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UserPasswordToken object by userPasswordTokenId URL path parameter.",
        "operationId": "Find UserPasswordToken object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUserPasswordToken"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPasswordTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify UserPasswordToken object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify UserPasswordToken object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordTokenRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUserPasswordToken"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing UserPasswordToken object\nNote: This is only allowed if UserPasswordToken object is in DRAFT status\n",
        "operationId": "Delete UserPasswordToken object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUserPasswordToken"
      },
      "parameters": [
        {
          "name": "userPasswordTokenId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizationUnit": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OrganizationUnit objects using query parameter filter criteria.",
        "operationId": "Find OrganizationUnit objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readOrganizationUnit"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new OrganizationUnit object.",
        "operationId": "Create OrganizationUnit object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUnitRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyOrganizationUnit"
      },
      "x-annotation-common.entity": "OrganizationUnit"
    },
    "/organizationUnit/{organizationUnitId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OrganizationUnit object by organizationUnitId URL path parameter.",
        "operationId": "Find OrganizationUnit object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readOrganizationUnit"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify OrganizationUnit object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify OrganizationUnit object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUnitRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyOrganizationUnit"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing OrganizationUnit object\nNote: This is only allowed if OrganizationUnit object is in DRAFT status\n",
        "operationId": "Delete OrganizationUnit object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyOrganizationUnit"
      },
      "parameters": [
        {
          "name": "organizationUnitId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/organizationUnitAddress": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitAddressArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OrganizationUnitAddress objects using query parameter filter criteria.",
        "operationId": "Find OrganizationUnitAddress objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readOrganizationUnitAddress"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new OrganizationUnitAddress object.",
        "operationId": "Create OrganizationUnitAddress object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUnitAddressRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyOrganizationUnitAddress"
      },
      "x-annotation-common.entity": "OrganizationUnitAddress"
    },
    "/organizationUnitAddress/{organizationUnitAddressId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitAddressResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OrganizationUnitAddress object by organizationUnitAddressId URL path parameter.",
        "operationId": "Find OrganizationUnitAddress object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readOrganizationUnitAddress"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify OrganizationUnitAddress object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify OrganizationUnitAddress object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUnitAddressRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyOrganizationUnitAddress"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing OrganizationUnitAddress object\nNote: This is only allowed if OrganizationUnitAddress object is in DRAFT status\n",
        "operationId": "Delete OrganizationUnitAddress object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyOrganizationUnitAddress"
      },
      "parameters": [
        {
          "name": "organizationUnitAddressId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/usergroup": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Usergroup objects using query parameter filter criteria.",
        "operationId": "Find Usergroup objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUsergroup"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Usergroup object.",
        "operationId": "Create Usergroup object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UsergroupRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUsergroup"
      },
      "x-annotation-common.entity": "Usergroup"
    },
    "/usergroup/{usergroupId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Usergroup object by usergroupId URL path parameter.",
        "operationId": "Find Usergroup object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUsergroup"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Usergroup object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Usergroup object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UsergroupRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUsergroup"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Usergroup object\nNote: This is only allowed if Usergroup object is in DRAFT status\n",
        "operationId": "Delete Usergroup object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUsergroup"
      },
      "parameters": [
        {
          "name": "usergroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/usergroupUser": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupUserArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UsergroupUser objects using query parameter filter criteria.",
        "operationId": "Find UsergroupUser objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUsergroupUser"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new UsergroupUser object.",
        "operationId": "Create UsergroupUser object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UsergroupUserRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUsergroupUser"
      },
      "x-annotation-common.entity": "UsergroupUser"
    },
    "/usergroupUser/{usergroupUserId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UsergroupUser object by usergroupUserId URL path parameter.",
        "operationId": "Find UsergroupUser object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUsergroupUser"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UsergroupUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify UsergroupUser object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify UsergroupUser object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UsergroupUserRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUsergroupUser"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing UsergroupUser object\nNote: This is only allowed if UsergroupUser object is in DRAFT status\n",
        "operationId": "Delete UsergroupUser object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUsergroupUser"
      },
      "parameters": [
        {
          "name": "usergroupUserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/context": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Context objects using query parameter filter criteria.",
        "operationId": "Find Context objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContext"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Context object.",
        "operationId": "Create Context object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContextRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContext"
      },
      "x-annotation-common.entity": "Context"
    },
    "/context/{contextId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Context object by contextId URL path parameter.",
        "operationId": "Find Context object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContext"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Context object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Context object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContextRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContext"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Context object\nNote: This is only allowed if Context object is in DRAFT status\n",
        "operationId": "Delete Context object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContext"
      },
      "parameters": [
        {
          "name": "contextId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contextUser": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextUserArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ContextUser objects using query parameter filter criteria.",
        "operationId": "Find ContextUser objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContextUser"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new ContextUser object.",
        "operationId": "Create ContextUser object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContextUserRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContextUser"
      },
      "x-annotation-common.entity": "ContextUser"
    },
    "/contextUser/{contextUserId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ContextUser object by contextUserId URL path parameter.",
        "operationId": "Find ContextUser object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContextUser"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify ContextUser object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify ContextUser object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContextUserRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContextUser"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing ContextUser object\nNote: This is only allowed if ContextUser object is in DRAFT status\n",
        "operationId": "Delete ContextUser object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContextUser"
      },
      "parameters": [
        {
          "name": "contextUserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/avatar": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Avatar objects using query parameter filter criteria.",
        "operationId": "Find Avatar objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAvatar"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Avatar object.",
        "operationId": "Create Avatar object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAvatar"
      },
      "x-annotation-common.entity": "Avatar"
    },
    "/avatar/{avatarId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Avatar object by avatarId URL path parameter.",
        "operationId": "Find Avatar object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAvatar"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Avatar object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Avatar object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAvatar"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Avatar object\nNote: This is only allowed if Avatar object is in DRAFT status\n",
        "operationId": "Delete Avatar object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAvatar"
      },
      "parameters": [
        {
          "name": "avatarId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/casuser": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Casuser objects using query parameter filter criteria.",
        "operationId": "Find Casuser objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCasuser"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Casuser object.",
        "operationId": "Create Casuser object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasuserRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCasuser"
      },
      "x-annotation-common.entity": "Casuser"
    },
    "/casuser/{casuserId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Casuser object by casuserId URL path parameter.",
        "operationId": "Find Casuser object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCasuser"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Casuser object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Casuser object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasuserRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCasuser"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Casuser object\nNote: This is only allowed if Casuser object is in DRAFT status\n",
        "operationId": "Delete Casuser object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCasuser"
      },
      "parameters": [
        {
          "name": "casuserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/casuser/{casuserId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate Resource",
        "operationId": "Activate Resource",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasuserActivateOperationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "sendWelcomeNotification",
            "in": "query",
            "description": "some info",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "casuserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/casuser/{casuserId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasuserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate Resource",
        "operationId": "Deactivate Resource",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasuserActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "casuserId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customer": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Customer objects using query parameter filter criteria.",
        "operationId": "Find Customer objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCustomer"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Customer object.",
        "operationId": "Create Customer object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCustomer"
      },
      "x-annotation-common.entity": "Customer"
    },
    "/customer/{customerId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Customer object by customerId URL path parameter.",
        "operationId": "Find Customer object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCustomer"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Customer object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Customer object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCustomer"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Customer object\nNote: This is only allowed if Customer object is in DRAFT status\n",
        "operationId": "Delete Customer object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCustomer"
      },
      "parameters": [
        {
          "name": "customerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/csp": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CspArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Csp objects using query parameter filter criteria.",
        "operationId": "Find Csp objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCsp"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CspResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Csp object.",
        "operationId": "Create Csp object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CspRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCsp"
      },
      "x-annotation-common.entity": "Csp"
    },
    "/csp/{cspId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CspResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Csp object by cspId URL path parameter.",
        "operationId": "Find Csp object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCsp"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CspResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Csp object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Csp object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CspRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCsp"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Csp object\nNote: This is only allowed if Csp object is in DRAFT status\n",
        "operationId": "Delete Csp object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCsp"
      },
      "parameters": [
        {
          "name": "cspId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/domain": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Domain objects using query parameter filter criteria.",
        "operationId": "Find Domain objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readDomain"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Domain object.",
        "operationId": "Create Domain object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyDomain"
      },
      "x-annotation-common.entity": "Domain"
    },
    "/domain/{domainId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Domain object by domainId URL path parameter.",
        "operationId": "Find Domain object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readDomain"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Domain object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Domain object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyDomain"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Domain object\nNote: This is only allowed if Domain object is in DRAFT status\n",
        "operationId": "Delete Domain object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyDomain"
      },
      "parameters": [
        {
          "name": "domainId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/emailTemplatePart": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplatePartArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find EmailTemplatePart objects using query parameter filter criteria.",
        "operationId": "Find EmailTemplatePart objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readEmailTemplatePart"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplatePartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new EmailTemplatePart object.",
        "operationId": "Create EmailTemplatePart object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplatePartRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyEmailTemplatePart"
      },
      "x-annotation-common.entity": "EmailTemplatePart"
    },
    "/emailTemplatePart/{emailTemplatePartId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplatePartResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find EmailTemplatePart object by emailTemplatePartId URL path parameter.",
        "operationId": "Find EmailTemplatePart object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readEmailTemplatePart"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplatePartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify EmailTemplatePart object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify EmailTemplatePart object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplatePartRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyEmailTemplatePart"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing EmailTemplatePart object\nNote: This is only allowed if EmailTemplatePart object is in DRAFT status\n",
        "operationId": "Delete EmailTemplatePart object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyEmailTemplatePart"
      },
      "parameters": [
        {
          "name": "emailTemplatePartId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/logUsrTag": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find LogUsrTag objects using query parameter filter criteria.",
        "operationId": "Find LogUsrTag objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readLogUsrTag"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new LogUsrTag object.",
        "operationId": "Create LogUsrTag object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LogUsrTagRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyLogUsrTag"
      },
      "x-annotation-common.entity": "LogUsrTag"
    },
    "/logUsrTag/{logUsrTagId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find LogUsrTag object by logUsrTagId URL path parameter.",
        "operationId": "Find LogUsrTag object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readLogUsrTag"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify LogUsrTag object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify LogUsrTag object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LogUsrTagRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyLogUsrTag"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing LogUsrTag object\nNote: This is only allowed if LogUsrTag object is in DRAFT status\n",
        "operationId": "Delete LogUsrTag object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyLogUsrTag"
      },
      "parameters": [
        {
          "name": "logUsrTagId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/logUsrTagAssignment": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagAssignmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find LogUsrTagAssignment objects using query parameter filter criteria.",
        "operationId": "Find LogUsrTagAssignment objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readLogUsrTagAssignment"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new LogUsrTagAssignment object.",
        "operationId": "Create LogUsrTagAssignment object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LogUsrTagAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyLogUsrTagAssignment"
      },
      "x-annotation-common.entity": "LogUsrTagAssignment"
    },
    "/logUsrTagAssignment/{logUsrTagAssignmentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagAssignmentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find LogUsrTagAssignment object by logUsrTagAssignmentId URL path parameter.",
        "operationId": "Find LogUsrTagAssignment object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readLogUsrTagAssignment"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LogUsrTagAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify LogUsrTagAssignment object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify LogUsrTagAssignment object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LogUsrTagAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyLogUsrTagAssignment"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing LogUsrTagAssignment object\nNote: This is only allowed if LogUsrTagAssignment object is in DRAFT status\n",
        "operationId": "Delete LogUsrTagAssignment object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyLogUsrTagAssignment"
      },
      "parameters": [
        {
          "name": "logUsrTagAssignmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/messageLocalization": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageLocalizationArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find MessageLocalization objects using query parameter filter criteria.",
        "operationId": "Find MessageLocalization objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readMessageLocalization"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageLocalizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new MessageLocalization object.",
        "operationId": "Create MessageLocalization object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyMessageLocalization"
      },
      "x-annotation-common.entity": "MessageLocalization"
    },
    "/messageLocalization/{messageLocalizationId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageLocalizationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find MessageLocalization object by messageLocalizationId URL path parameter.",
        "operationId": "Find MessageLocalization object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readMessageLocalization"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageLocalizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify MessageLocalization object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify MessageLocalization object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyMessageLocalization"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing MessageLocalization object\nNote: This is only allowed if MessageLocalization object is in DRAFT status\n",
        "operationId": "Delete MessageLocalization object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyMessageLocalization"
      },
      "parameters": [
        {
          "name": "messageLocalizationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/messageTemplate": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find MessageTemplate objects using query parameter filter criteria.",
        "operationId": "Find MessageTemplate objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readMessageTemplate"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new MessageTemplate object.",
        "operationId": "Create MessageTemplate object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplateRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyMessageTemplate"
      },
      "x-annotation-common.entity": "MessageTemplate"
    },
    "/messageTemplate/{messageTemplateId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find MessageTemplate object by messageTemplateId URL path parameter.",
        "operationId": "Find MessageTemplate object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readMessageTemplate"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify MessageTemplate object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify MessageTemplate object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageTemplateRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyMessageTemplate"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing MessageTemplate object\nNote: This is only allowed if MessageTemplate object is in DRAFT status\n",
        "operationId": "Delete MessageTemplate object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyMessageTemplate"
      },
      "parameters": [
        {
          "name": "messageTemplateId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/module": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Module objects using query parameter filter criteria.",
        "operationId": "Find Module objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readModule"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Module object.",
        "operationId": "Create Module object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyModule"
      },
      "x-annotation-common.entity": "Module"
    },
    "/module/{moduleId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Module object by moduleId URL path parameter.",
        "operationId": "Find Module object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readModule"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Module object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Module object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyModule"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Module object\nNote: This is only allowed if Module object is in DRAFT status\n",
        "operationId": "Delete Module object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyModule"
      },
      "parameters": [
        {
          "name": "moduleId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/notification": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Notification objects using query parameter filter criteria.",
        "operationId": "Find Notification objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readNotification"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Notification object.",
        "operationId": "Create Notification object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyNotification"
      },
      "x-annotation-common.entity": "Notification"
    },
    "/notification/{notificationId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Notification object by notificationId URL path parameter.",
        "operationId": "Find Notification object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readNotification"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Notification object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Notification object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyNotification"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Notification object\nNote: This is only allowed if Notification object is in DRAFT status\n",
        "operationId": "Delete Notification object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyNotification"
      },
      "parameters": [
        {
          "name": "notificationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orgunit": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgunitArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Orgunit objects using query parameter filter criteria.",
        "operationId": "Find Orgunit objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readOrgunit"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgunitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Orgunit object.",
        "operationId": "Create Orgunit object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrgunitRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyOrgunit"
      },
      "x-annotation-common.entity": "Orgunit"
    },
    "/orgunit/{orgunitId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgunitResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Orgunit object by orgunitId URL path parameter.",
        "operationId": "Find Orgunit object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readOrgunit"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgunitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Orgunit object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Orgunit object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/OrgunitRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyOrgunit"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Orgunit object\nNote: This is only allowed if Orgunit object is in DRAFT status\n",
        "operationId": "Delete Orgunit object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyOrgunit"
      },
      "parameters": [
        {
          "name": "orgunitId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/person": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Person objects using query parameter filter criteria.",
        "operationId": "Find Person objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readPerson"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Person object.",
        "operationId": "Create Person object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyPerson"
      },
      "x-annotation-common.entity": "Person"
    },
    "/person/{personId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Person object by personId URL path parameter.",
        "operationId": "Find Person object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readPerson"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Person object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Person object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyPerson"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Person object\nNote: This is only allowed if Person object is in DRAFT status\n",
        "operationId": "Delete Person object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyPerson"
      },
      "parameters": [
        {
          "name": "personId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/casResource": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasResourceArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CasResource objects using query parameter filter criteria.",
        "operationId": "Find CasResource objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCasResource"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasResourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new CasResource object.",
        "operationId": "Create CasResource object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasResourceRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCasResource"
      },
      "x-annotation-common.entity": "CasResource"
    },
    "/casResource/{casResourceId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasResourceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CasResource object by casResourceId URL path parameter.",
        "operationId": "Find CasResource object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCasResource"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CasResourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify CasResource object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify CasResource object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CasResourceRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCasResource"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing CasResource object\nNote: This is only allowed if CasResource object is in DRAFT status\n",
        "operationId": "Delete CasResource object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCasResource"
      },
      "parameters": [
        {
          "name": "casResourceId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/resourceValue": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceValueArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ResourceValue objects using query parameter filter criteria.",
        "operationId": "Find ResourceValue objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readResourceValue"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new ResourceValue object.",
        "operationId": "Create ResourceValue object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceValueRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyResourceValue"
      },
      "x-annotation-common.entity": "ResourceValue"
    },
    "/resourceValue/{resourceValueId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceValueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ResourceValue object by resourceValueId URL path parameter.",
        "operationId": "Find ResourceValue object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readResourceValue"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify ResourceValue object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify ResourceValue object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceValueRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyResourceValue"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing ResourceValue object\nNote: This is only allowed if ResourceValue object is in DRAFT status\n",
        "operationId": "Delete ResourceValue object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyResourceValue"
      },
      "parameters": [
        {
          "name": "resourceValueId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/auditRecord": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditRecordArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AuditRecord objects using query parameter filter criteria.",
        "operationId": "Find AuditRecord objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAuditRecord"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditRecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AuditRecord object.",
        "operationId": "Create AuditRecord object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AuditRecordRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAuditRecord"
      },
      "x-annotation-common.entity": "AuditRecord"
    },
    "/auditRecord/{auditRecordId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditRecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AuditRecord object by auditRecordId URL path parameter.",
        "operationId": "Find AuditRecord object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAuditRecord"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditRecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AuditRecord object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify AuditRecord object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AuditRecordRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAuditRecord"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AuditRecord object\nNote: This is only allowed if AuditRecord object is in DRAFT status\n",
        "operationId": "Delete AuditRecord object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAuditRecord"
      },
      "parameters": [
        {
          "name": "auditRecordId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/userDomain": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDomainArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UserDomain objects using query parameter filter criteria.",
        "operationId": "Find UserDomain objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUserDomain"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDomainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new UserDomain object.",
        "operationId": "Create UserDomain object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDomainRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUserDomain"
      },
      "x-annotation-common.entity": "UserDomain"
    },
    "/userDomain/{userDomainId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDomainResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find UserDomain object by userDomainId URL path parameter.",
        "operationId": "Find UserDomain object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUserDomain"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDomainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify UserDomain object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify UserDomain object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDomainRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUserDomain"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing UserDomain object\nNote: This is only allowed if UserDomain object is in DRAFT status\n",
        "operationId": "Delete UserDomain object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUserDomain"
      },
      "parameters": [
        {
          "name": "userDomainId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/group": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Group objects using query parameter filter criteria.",
        "operationId": "Find Group objects",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readGroup"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Group object.",
        "operationId": "Create Group object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyGroup"
      },
      "x-annotation-common.entity": "Group"
    },
    "/group/{groupId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Group object by groupId URL path parameter.",
        "operationId": "Find Group object by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readGroup"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Group object.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "Modify Group object",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyGroup"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Group object\nNote: This is only allowed if Group object is in DRAFT status\n",
        "operationId": "Delete Group object",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyGroup"
      },
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "TagRequest": {
        "title": "Tag object Data Request",
        "description": "Tag based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Tag"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagResponse": {
        "title": "Tag object Data Response",
        "description": "Tag based response. Returns single lib.Tag object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Tag"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagArrayResponse": {
        "title": "Tag objects Data Response",
        "description": "List of Tags response. Returns list of lib.Tag objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Tag"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentRelationshipRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lib.TagAssignment"
              },
              {
                "$ref": "#/components/schemas/common.Resource"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentRelationshipArrayRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/lib.TagAssignment"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common.Resource"
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentRequest": {
        "title": "Object assignments Data Request",
        "description": "TagAssignment based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TagAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentResponse": {
        "title": "Object assignments Data Response",
        "description": "TagAssignment based response. Returns single lib.TagAssignment object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TagAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "TagAssignmentArrayResponse": {
        "title": "Object assignments Data Response",
        "description": "List of TagAssignments response. Returns list of lib.TagAssignment objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.TagAssignment"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TagRelationshipRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lib.Tag"
              },
              {
                "$ref": "#/components/schemas/common.Resource"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TagRelationshipArrayRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/lib.Tag"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common.Resource"
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "TaggedObjectRequest": {
        "title": "TaggedObject object Data Request",
        "description": "TaggedObject based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TaggedObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TaggedObjectResponse": {
        "title": "TaggedObject object Data Response",
        "description": "TaggedObject based response. Returns single lib.TaggedObject object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TaggedObject"
          }
        },
        "required": [
          "data"
        ]
      },
      "TaggedObjectArrayResponse": {
        "title": "TaggedObject objects Data Response",
        "description": "List of TaggedObjects response. Returns list of lib.TaggedObject objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.TaggedObject"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclRequest": {
        "title": "Acl object Data Request",
        "description": "Acl based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Acl"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclResponse": {
        "title": "Acl object Data Response",
        "description": "Acl based response. Returns single lib.Acl object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Acl"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclArrayResponse": {
        "title": "Acl objects Data Response",
        "description": "List of Acls response. Returns list of lib.Acl objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Acl"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclDelegationRequest": {
        "title": "AclDelegation object Data Request",
        "description": "AclDelegation based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclDelegation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclDelegationResponse": {
        "title": "AclDelegation object Data Response",
        "description": "AclDelegation based response. Returns single lib.AclDelegation object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclDelegation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclDelegationArrayResponse": {
        "title": "AclDelegation objects Data Response",
        "description": "List of AclDelegations response. Returns list of lib.AclDelegation objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AclDelegation"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclDelegationActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AclDelegation"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AclDelegationActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AclDelegationActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclInfoLocalizationRequest": {
        "title": "AclInfoLocalization object Data Request",
        "description": "AclInfoLocalization based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclInfoLocalization"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclInfoLocalizationResponse": {
        "title": "AclInfoLocalization object Data Response",
        "description": "AclInfoLocalization based response. Returns single lib.AclInfoLocalization object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclInfoLocalization"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclInfoLocalizationArrayResponse": {
        "title": "AclInfoLocalization objects Data Response",
        "description": "List of AclInfoLocalizations response. Returns list of lib.AclInfoLocalization objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AclInfoLocalization"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueRequest": {
        "title": "AclValue object Data Request",
        "description": "AclValue based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueResponse": {
        "title": "AclValue object Data Response",
        "description": "AclValue based response. Returns single lib.AclValue object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueArrayResponse": {
        "title": "AclValue objects Data Response",
        "description": "List of AclValues response. Returns list of lib.AclValue objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AclValue"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueBlobRequest": {
        "title": "AclValueBlob object Data Request",
        "description": "AclValueBlob based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclValueBlob"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueBlobResponse": {
        "title": "AclValueBlob object Data Response",
        "description": "AclValueBlob based response. Returns single lib.AclValueBlob object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AclValueBlob"
          }
        },
        "required": [
          "data"
        ]
      },
      "AclValueBlobArrayResponse": {
        "title": "AclValueBlob objects Data Response",
        "description": "List of AclValueBlobs response. Returns list of lib.AclValueBlob objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AclValueBlob"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemRequest": {
        "title": "AccessControlItem object Data Request",
        "description": "AccessControlItem based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemResponse": {
        "title": "AccessControlItem object Data Response",
        "description": "AccessControlItem based response. Returns single lib.AccessControlItem object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemArrayResponse": {
        "title": "AccessControlItem objects Data Response",
        "description": "List of AccessControlItems response. Returns list of lib.AccessControlItem objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccessControlItem"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueRequest": {
        "title": "AccessControlItemValue object Data Request",
        "description": "AccessControlItemValue based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItemValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueResponse": {
        "title": "AccessControlItemValue object Data Response",
        "description": "AccessControlItemValue based response. Returns single lib.AccessControlItemValue object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItemValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueArrayResponse": {
        "title": "AccessControlItemValue objects Data Response",
        "description": "List of AccessControlItemValues response. Returns list of lib.AccessControlItemValue objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccessControlItemValue"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueBlobRequest": {
        "title": "AccessControlItemValueBlob object Data Request",
        "description": "AccessControlItemValueBlob based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItemValueBlob"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueBlobResponse": {
        "title": "AccessControlItemValueBlob object Data Response",
        "description": "AccessControlItemValueBlob based response. Returns single lib.AccessControlItemValueBlob object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccessControlItemValueBlob"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccessControlItemValueBlobArrayResponse": {
        "title": "AccessControlItemValueBlob objects Data Response",
        "description": "List of AccessControlItemValueBlobs response. Returns list of lib.AccessControlItemValueBlob objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccessControlItemValueBlob"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserRequest": {
        "title": "User object Data Request",
        "description": "User based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.User"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserResponse": {
        "title": "User object Data Response",
        "description": "User based response. Returns single lib.User object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.User"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserArrayResponse": {
        "title": "User objects Data Response",
        "description": "List of Users response. Returns list of lib.User objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.User"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserPasswordTokenRequest": {
        "title": "UserPasswordToken object Data Request",
        "description": "UserPasswordToken based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserPasswordToken"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserPasswordTokenResponse": {
        "title": "UserPasswordToken object Data Response",
        "description": "UserPasswordToken based response. Returns single lib.UserPasswordToken object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserPasswordToken"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserPasswordTokenArrayResponse": {
        "title": "UserPasswordToken objects Data Response",
        "description": "List of UserPasswordTokens response. Returns list of lib.UserPasswordToken objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.UserPasswordToken"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitRequest": {
        "title": "OrganizationUnit object Data Request",
        "description": "OrganizationUnit based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OrganizationUnit"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitResponse": {
        "title": "OrganizationUnit object Data Response",
        "description": "OrganizationUnit based response. Returns single lib.OrganizationUnit object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OrganizationUnit"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitArrayResponse": {
        "title": "OrganizationUnit objects Data Response",
        "description": "List of OrganizationUnits response. Returns list of lib.OrganizationUnit objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.OrganizationUnit"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitAddressRequest": {
        "title": "OrganizationUnitAddress object Data Request",
        "description": "OrganizationUnitAddress based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OrganizationUnitAddress"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitAddressResponse": {
        "title": "OrganizationUnitAddress object Data Response",
        "description": "OrganizationUnitAddress based response. Returns single lib.OrganizationUnitAddress object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OrganizationUnitAddress"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrganizationUnitAddressArrayResponse": {
        "title": "OrganizationUnitAddress objects Data Response",
        "description": "List of OrganizationUnitAddresses response. Returns list of lib.OrganizationUnitAddress objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.OrganizationUnitAddress"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupRequest": {
        "title": "Usergroup object Data Request",
        "description": "Usergroup based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Usergroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupResponse": {
        "title": "Usergroup object Data Response",
        "description": "Usergroup based response. Returns single lib.Usergroup object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Usergroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupArrayResponse": {
        "title": "Usergroup objects Data Response",
        "description": "List of Usergroups response. Returns list of lib.Usergroup objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Usergroup"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupUserRequest": {
        "title": "UsergroupUser object Data Request",
        "description": "UsergroupUser based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UsergroupUser"
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupUserResponse": {
        "title": "UsergroupUser object Data Response",
        "description": "UsergroupUser based response. Returns single lib.UsergroupUser object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UsergroupUser"
          }
        },
        "required": [
          "data"
        ]
      },
      "UsergroupUserArrayResponse": {
        "title": "UsergroupUser objects Data Response",
        "description": "List of UsergroupUsers response. Returns list of lib.UsergroupUser objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.UsergroupUser"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextRequest": {
        "title": "Context object Data Request",
        "description": "Context based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Context"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextResponse": {
        "title": "Context object Data Response",
        "description": "Context based response. Returns single lib.Context object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Context"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextArrayResponse": {
        "title": "Context objects Data Response",
        "description": "List of Contexts response. Returns list of lib.Context objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Context"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextUserRequest": {
        "title": "ContextUser object Data Request",
        "description": "ContextUser based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContextUser"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextUserResponse": {
        "title": "ContextUser object Data Response",
        "description": "ContextUser based response. Returns single lib.ContextUser object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContextUser"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContextUserArrayResponse": {
        "title": "ContextUser objects Data Response",
        "description": "List of ContextUsers response. Returns list of lib.ContextUser objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContextUser"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AvatarRequest": {
        "title": "Avatar object Data Request",
        "description": "Avatar based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Avatar"
          }
        },
        "required": [
          "data"
        ]
      },
      "AvatarResponse": {
        "title": "Avatar object Data Response",
        "description": "Avatar based response. Returns single lib.Avatar object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Avatar"
          }
        },
        "required": [
          "data"
        ]
      },
      "AvatarArrayResponse": {
        "title": "Avatar objects Data Response",
        "description": "List of Avatars response. Returns list of lib.Avatar objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Avatar"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CasuserRequest": {
        "title": "Casuser object Data Request",
        "description": "Casuser based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Casuser"
          }
        },
        "required": [
          "data"
        ]
      },
      "CasuserResponse": {
        "title": "Casuser object Data Response",
        "description": "Casuser based response. Returns single lib.Casuser object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Casuser"
          }
        },
        "required": [
          "data"
        ]
      },
      "CasuserArrayResponse": {
        "title": "Casuser objects Data Response",
        "description": "List of Casusers response. Returns list of lib.Casuser objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Casuser"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CasuserActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "CasuserActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CasuserActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomerRequest": {
        "title": "Customer object Data Request",
        "description": "Customer based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Customer"
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomerResponse": {
        "title": "Customer object Data Response",
        "description": "Customer based response. Returns single lib.Customer object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Customer"
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomerArrayResponse": {
        "title": "Customer objects Data Response",
        "description": "List of Customers response. Returns list of lib.Customer objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Customer"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CspRequest": {
        "title": "Csp object Data Request",
        "description": "Csp based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Csp"
          }
        },
        "required": [
          "data"
        ]
      },
      "CspResponse": {
        "title": "Csp object Data Response",
        "description": "Csp based response. Returns single lib.Csp object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Csp"
          }
        },
        "required": [
          "data"
        ]
      },
      "CspArrayResponse": {
        "title": "Csp objects Data Response",
        "description": "List of Csps response. Returns list of lib.Csp objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Csp"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "DomainRequest": {
        "title": "Domain object Data Request",
        "description": "Domain based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Domain"
          }
        },
        "required": [
          "data"
        ]
      },
      "DomainResponse": {
        "title": "Domain object Data Response",
        "description": "Domain based response. Returns single lib.Domain object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Domain"
          }
        },
        "required": [
          "data"
        ]
      },
      "DomainArrayResponse": {
        "title": "Domain objects Data Response",
        "description": "List of Domains response. Returns list of lib.Domain objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Domain"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailTemplatePartRequest": {
        "title": "EmailTemplatePart object Data Request",
        "description": "EmailTemplatePart based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.EmailTemplatePart"
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailTemplatePartResponse": {
        "title": "EmailTemplatePart object Data Response",
        "description": "EmailTemplatePart based response. Returns single lib.EmailTemplatePart object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.EmailTemplatePart"
          }
        },
        "required": [
          "data"
        ]
      },
      "EmailTemplatePartArrayResponse": {
        "title": "EmailTemplatePart objects Data Response",
        "description": "List of EmailTemplateParts response. Returns list of lib.EmailTemplatePart objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.EmailTemplatePart"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagRequest": {
        "title": "LogUsrTag object Data Request",
        "description": "LogUsrTag based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.LogUsrTag"
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagResponse": {
        "title": "LogUsrTag object Data Response",
        "description": "LogUsrTag based response. Returns single lib.LogUsrTag object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.LogUsrTag"
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagArrayResponse": {
        "title": "LogUsrTag objects Data Response",
        "description": "List of LogUsrTags response. Returns list of lib.LogUsrTag objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.LogUsrTag"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagAssignmentRequest": {
        "title": "LogUsrTagAssignment object Data Request",
        "description": "LogUsrTagAssignment based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.LogUsrTagAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagAssignmentResponse": {
        "title": "LogUsrTagAssignment object Data Response",
        "description": "LogUsrTagAssignment based response. Returns single lib.LogUsrTagAssignment object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.LogUsrTagAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "LogUsrTagAssignmentArrayResponse": {
        "title": "LogUsrTagAssignment objects Data Response",
        "description": "List of LogUsrTagAssignments response. Returns list of lib.LogUsrTagAssignment objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.LogUsrTagAssignment"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageLocalizationRequest": {
        "title": "MessageLocalization object Data Request",
        "description": "MessageLocalization based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.MessageLocalization"
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageLocalizationResponse": {
        "title": "MessageLocalization object Data Response",
        "description": "MessageLocalization based response. Returns single lib.MessageLocalization object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.MessageLocalization"
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageLocalizationArrayResponse": {
        "title": "MessageLocalization objects Data Response",
        "description": "List of MessageLocalizations response. Returns list of lib.MessageLocalization objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.MessageLocalization"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageTemplateRequest": {
        "title": "MessageTemplate object Data Request",
        "description": "MessageTemplate based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.MessageTemplate"
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageTemplateResponse": {
        "title": "MessageTemplate object Data Response",
        "description": "MessageTemplate based response. Returns single lib.MessageTemplate object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.MessageTemplate"
          }
        },
        "required": [
          "data"
        ]
      },
      "MessageTemplateArrayResponse": {
        "title": "MessageTemplate objects Data Response",
        "description": "List of MessageTemplates response. Returns list of lib.MessageTemplate objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.MessageTemplate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ModuleRequest": {
        "title": "Module object Data Request",
        "description": "Module based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Module"
          }
        },
        "required": [
          "data"
        ]
      },
      "ModuleResponse": {
        "title": "Module object Data Response",
        "description": "Module based response. Returns single lib.Module object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Module"
          }
        },
        "required": [
          "data"
        ]
      },
      "ModuleArrayResponse": {
        "title": "Module objects Data Response",
        "description": "List of Modules response. Returns list of lib.Module objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Module"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "NotificationRequest": {
        "title": "Notification object Data Request",
        "description": "Notification based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Notification"
          }
        },
        "required": [
          "data"
        ]
      },
      "NotificationResponse": {
        "title": "Notification object Data Response",
        "description": "Notification based response. Returns single lib.Notification object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Notification"
          }
        },
        "required": [
          "data"
        ]
      },
      "NotificationArrayResponse": {
        "title": "Notification objects Data Response",
        "description": "List of Notifications response. Returns list of lib.Notification objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Notification"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "OrgunitRequest": {
        "title": "Orgunit object Data Request",
        "description": "Orgunit based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Orgunit"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrgunitResponse": {
        "title": "Orgunit object Data Response",
        "description": "Orgunit based response. Returns single lib.Orgunit object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Orgunit"
          }
        },
        "required": [
          "data"
        ]
      },
      "OrgunitArrayResponse": {
        "title": "Orgunit objects Data Response",
        "description": "List of Orgunits response. Returns list of lib.Orgunit objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Orgunit"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonRequest": {
        "title": "Person object Data Request",
        "description": "Person based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Person"
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonResponse": {
        "title": "Person object Data Response",
        "description": "Person based response. Returns single lib.Person object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Person"
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonArrayResponse": {
        "title": "Person objects Data Response",
        "description": "List of People response. Returns list of lib.Person objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Person"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CasResourceRequest": {
        "title": "CasResource object Data Request",
        "description": "CasResource based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CasResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CasResourceResponse": {
        "title": "CasResource object Data Response",
        "description": "CasResource based response. Returns single lib.CasResource object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CasResource"
          }
        },
        "required": [
          "data"
        ]
      },
      "CasResourceArrayResponse": {
        "title": "CasResource objects Data Response",
        "description": "List of CasResources response. Returns list of lib.CasResource objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.CasResource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ResourceValueRequest": {
        "title": "ResourceValue object Data Request",
        "description": "ResourceValue based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ResourceValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "ResourceValueResponse": {
        "title": "ResourceValue object Data Response",
        "description": "ResourceValue based response. Returns single lib.ResourceValue object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ResourceValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "ResourceValueArrayResponse": {
        "title": "ResourceValue objects Data Response",
        "description": "List of ResourceValues response. Returns list of lib.ResourceValue objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ResourceValue"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AuditRecordRequest": {
        "title": "AuditRecord object Data Request",
        "description": "AuditRecord based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AuditRecord"
          }
        },
        "required": [
          "data"
        ]
      },
      "AuditRecordResponse": {
        "title": "AuditRecord object Data Response",
        "description": "AuditRecord based response. Returns single lib.AuditRecord object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AuditRecord"
          }
        },
        "required": [
          "data"
        ]
      },
      "AuditRecordArrayResponse": {
        "title": "AuditRecord objects Data Response",
        "description": "List of AuditRecords response. Returns list of lib.AuditRecord objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AuditRecord"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserDomainRequest": {
        "title": "UserDomain object Data Request",
        "description": "UserDomain based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserDomain"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserDomainResponse": {
        "title": "UserDomain object Data Response",
        "description": "UserDomain based response. Returns single lib.UserDomain object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserDomain"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserDomainArrayResponse": {
        "title": "UserDomain objects Data Response",
        "description": "List of UserDomains response. Returns list of lib.UserDomain objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.UserDomain"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GroupRequest": {
        "title": "Group object Data Request",
        "description": "Group based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Group"
          }
        },
        "required": [
          "data"
        ]
      },
      "GroupResponse": {
        "title": "Group object Data Response",
        "description": "Group based response. Returns single lib.Group object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Group"
          }
        },
        "required": [
          "data"
        ]
      },
      "GroupArrayResponse": {
        "title": "Group objects Data Response",
        "description": "List of Groups response. Returns list of lib.Group objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Group"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "lib.FileData": {
        "$ref": "#/components/schemas/common.FileData"
      },
      "lib.Resource": {
        "$ref": "#/components/schemas/common.Resource"
      },
      "lib.RelationshipToOne": {
        "$ref": "#/components/schemas/common.RelationshipToOne"
      },
      "lib.RelationshipToMany": {
        "$ref": "#/components/schemas/common.RelationshipToMany"
      },
      "lib.AclValueType": {
        "enum": [
          "BLOB",
          "BOOLEAN",
          "DATE",
          "DATETIME",
          "NUMERIC",
          "TEXT"
        ],
        "type": "string"
      },
      "lib.ContextType": {
        "enum": [
          "ACCOUNT",
          "CSP",
          "CUSTOMER",
          "GROUP"
        ],
        "type": "string"
      },
      "lib.DelegationStatus": {
        "enum": [
          "ACTIVE",
          "ARCHIVED",
          "INACTIVE"
        ],
        "type": "string"
      },
      "lib.NotificationChannel": {
        "enum": [
          "EMAIL",
          "KAFKA",
          "SMS"
        ],
        "type": "string"
      },
      "lib.TaggedObjectType": {
        "description": "SUBSCRIPTION-ITEM\n",
        "enum": [
          "IMSI",
          "SIM",
          "SUBSCRIPTION-ITEM"
        ],
        "type": "string"
      },
      "lib.TagScope": {
        "enum": [
          "PRIVATE",
          "PUBLIC"
        ],
        "type": "string"
      },
      "lib.TemplateType": {
        "description": "PLAIN-TEXT\n",
        "enum": [
          "HTML",
          "PLAIN-TEXT"
        ],
        "type": "string"
      },
      "lib.UiLanguage": {
        "enum": [
          "ENGLISH",
          "GERMAN",
          "POLISH",
          "SPANISH"
        ],
        "type": "string"
      },
      "lib.UserStatus": {
        "enum": [
          "ACTIVE",
          "DISABLED",
          "DELETED"
        ],
        "type": "string"
      },
      "lib.Account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Acl": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "aclDefaultValue": {
                    "description": "Default value.\n",
                    "type": "string"
                  },
                  "aclValueType": {
                    "$ref": "#/components/schemas/lib.AclValueType"
                  },
                  "aclValues": {
                    "description": "List of comma separated values.\n",
                    "type": "string"
                  },
                  "category": {
                    "description": "???\n",
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "resourceAware": {
                    "description": "Is ACL multiplicable for many resource types.   ????\n",
                    "type": "boolean"
                  },
                  "resourceType": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclInfoLocalizations": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclInfoLocalization"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "aclValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Domain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "module": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Module"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AclDelegation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "delegatorComment": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.DelegationStatus"
                  },
                  "validFrom": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validTo": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "delegateeContextUser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ContextUser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "delegatorContextUser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ContextUser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AclInfoLocalization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "languageCode": {
                    "description": "English: en American English: en_US British English:  en_UK\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "summary": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "acl": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Acl"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AclValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "aclValue": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isInheritableIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "acl": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Acl"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "aclValueBlobs": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValueBlob"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Context"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Usergroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AclValueBlob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "aclValue": {
                    "$ref": "#/components/schemas/lib.FileData"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclValue": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AclValue"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Avatar": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "avatarSmall": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "avatar": {
                    "$ref": "#/components/schemas/lib.FileData"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Casuser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isApiUserIndicator": {
                    "description": "API User must not have a person relation. API User must not switch context, i.e. the api-user - user-organization association is mutually exclusive.\n",
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "loginPasswordHash": {
                    "type": "string"
                  },
                  "loginUsername": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.UserStatus"
                  },
                  "uiLanguage": {
                    "$ref": "#/components/schemas/lib.UiLanguage"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "avatars": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Avatar"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contextUsers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContextUser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Domain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "person": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Person"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tag"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroupUsers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsergroupUser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Context": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "contextType": {
                    "$ref": "#/components/schemas/lib.ContextType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "aclValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contextUsers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContextUser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "csp": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Csp"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Customer"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "messageTemplates": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.MessageTemplate"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "orgunit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Orgunit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tag"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Usergroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContextUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclDelegationsDelegateeContextUser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclDelegation"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "aclDelegationsDelegatorContextUser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclDelegation"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Context"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Csp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Customer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Domain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "description": "Additional description.\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "description": "Unique name of the domain.\n",
                    "type": "string"
                  },
                  "sn": {
                    "description": "Unique short name of the domain\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Acl"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casusers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Casuser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.EmailTemplatePart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "content": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mimeType": {
                    "description": "Part MIME Type\n",
                    "type": "string"
                  },
                  "name": {
                    "description": "Part Name\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "messageTemplate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.MessageTemplate"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.LogUsrTag": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "enterDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "id": {
                    "format": "int32",
                    "type": "number"
                  },
                  "orgunitId": {
                    "format": "int32",
                    "type": "number"
                  },
                  "userId": {
                    "format": "int32",
                    "type": "number"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.LogUsrTagAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "enterDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "js": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "url": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.MessageLocalization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "languageCode": {
                    "description": "English: en American English: en-US British English:  en-UK\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "messageTemplate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.MessageTemplate"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.MessageTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "defaultContent": {
                    "type": "string"
                  },
                  "description": {
                    "description": "Additional description\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mimeType": {
                    "description": "Part MIME Type\n",
                    "type": "string"
                  },
                  "name": {
                    "description": "Template Name\n",
                    "type": "string"
                  },
                  "notificationChannel": {
                    "$ref": "#/components/schemas/lib.NotificationChannel"
                  },
                  "skin": {
                    "type": "string"
                  },
                  "sn": {
                    "description": "Unique short name, which is used as CAS serviceId\n",
                    "type": "string"
                  },
                  "templateType": {
                    "$ref": "#/components/schemas/lib.TemplateType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Context"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "emailTemplateParts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.EmailTemplatePart"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "messageLocalizations": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.MessageLocalization"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Module": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "description": "Module Name\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Acl"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "modulesParentModule": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Module"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentModule": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Module"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resources": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Notification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "eventDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "eventCode": {
                    "format": "int64",
                    "type": "number"
                  },
                  "parameters": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "reportId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "domainId": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "organizationUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.UserDomain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Orgunit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Person": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "casusers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Casuser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CasResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "description": "Additional description\n",
                    "type": "string"
                  },
                  "key": {
                    "description": "Resource Key\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "value": {
                    "description": "Parameter Value\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "module": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Module"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resourceValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ResourceValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ResourceValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "language": {
                    "description": "Resource Language\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "themeTemplateName": {
                    "description": "Customer Theme\n",
                    "type": "string"
                  },
                  "value": {
                    "description": "Parameter Value\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CasResource"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Tag": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "color": {
                    "maxLength": 6,
                    "description": "RGB, HEX notation FFFFFF\n",
                    "type": "string"
                  },
                  "fontIcon": {
                    "maxLength": 6,
                    "description": "HEX notation FFFFFF\n",
                    "type": "string"
                  },
                  "scope": {
                    "$ref": "#/components/schemas/lib.TagScope"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.TagStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "orgUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TagAssignment"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TaggedObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "objectReference": {
                    "format": "int64",
                    "type": "number"
                  },
                  "objectReferenceText": {
                    "type": "string"
                  },
                  "objectType": {
                    "$ref": "#/components/schemas/lib.TaggedObjectType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tag": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Tag"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Usergroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "isTemplateIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string"
                  },
                  "templateContextType": {
                    "$ref": "#/components/schemas/lib.ContextType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "aclValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AclValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Context"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroupUsers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsergroupUser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.UsergroupUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usergroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Usergroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AuditStatus": {
        "description": "Audit status OK or FAILED.\nOperation success\nOperation Failed\n",
        "enum": [
          "OK",
          "FAILED"
        ],
        "type": "string"
      },
      "lib.AuditType": {
        "description": "Predefined Global Audit Event Types.\nObject Modified\nObject Created\nObject Deleted\nObject Opened in Read Only mode\nObject Downloaded to user computer.\n",
        "enum": [
          "MODIFIED",
          "CREATED",
          "DELETED",
          "VIEWED",
          "DOWNLOADED"
        ],
        "type": "string"
      },
      "lib.AclDataType": {
        "enum": [
          "BOOLEAN",
          "STRING",
          "NUMERIC",
          "DATE",
          "TIME",
          "DATETIME",
          "CBLOB"
        ],
        "type": "string"
      },
      "lib.OrganizationUnitType": {
        "description": "Type of Organization Unit\n",
        "enum": [
          "CUSTOMER",
          "AREA",
          "COUNTRY",
          "SUBSIDIARY",
          "RESELLER",
          "DISTRIBUTOR",
          "FLEET",
          "DEPARTMENT",
          "TEAM",
          "OTHERS"
        ],
        "type": "string"
      },
      "lib.ResourceType": {
        "description": "Predefined Global Resource Types\nUsers Group\nSIM Card identified by ICCID\nFirewall Security Profile\nAction assigned to Rule\nRule Assigned to SIM, ORGANIZATION or SUBSCRIBER\nBatch Task\nSubscriber identified by IMSI\n",
        "enum": [
          "USER",
          "USER-GROUP",
          "ORGANIZATION",
          "SIM",
          "TARIFF",
          "SECURITY-PROFILE",
          "REPORT",
          "INVOICE",
          "DEVICE",
          "POOL",
          "RULE",
          "ACTION",
          "RULE-ACTION",
          "LOCATION",
          "RULE-ASSIGNMENT",
          "BATCH-TASK",
          "EVENT",
          "SUBSCRIBER"
        ],
        "type": "string"
      },
      "lib.ResetPasswordTokenStatus": {
        "enum": [
          "PENDING",
          "ERROR",
          "DONE"
        ],
        "type": "string"
      },
      "lib.TagStatus": {
        "enum": [
          "ACTIVE",
          "DELETE-PROTECTED"
        ],
        "type": "string"
      },
      "lib.AccessControlItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "resourceType": {
                    "$ref": "#/components/schemas/lib.ResourceType"
                  },
                  "resourceAware": {
                    "description": "Is ACL multiplicable for many resource types.\n",
                    "type": "boolean"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "category": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "type": {
                    "$ref": "#/components/schemas/lib.AclDataType"
                  },
                  "values": {
                    "maxLength": 4096,
                    "description": "List of comma separated values.\n",
                    "type": "string"
                  },
                  "defaultValue": {
                    "maxLength": 4096,
                    "description": "Default value.\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.UserDomain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccessControlItemValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "resourceId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "resourceType": {
                    "$ref": "#/components/schemas/lib.ResourceType"
                  },
                  "value": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "delegate": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "group": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Group"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acl": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccessControlItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "organization": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "itemValueBlob": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValueBlob"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccessControlItemValueBlob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "value": {
                    "$ref": "#/components/schemas/lib.FileData"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "itemValue": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccessControlItemValue"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AuditRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "type": {
                    "$ref": "#/components/schemas/lib.AuditType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.AuditStatus"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "resourceId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "resourceType": {
                    "$ref": "#/components/schemas/lib.ResourceType"
                  },
                  "resourceName": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "taskId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "eventDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "ipAddress": {
                    "maxLength": 46,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "user": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.User"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "organizationContext": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.UserDomain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 4096,
                    "description": "Unique name for Domain.\n",
                    "type": "string"
                  },
                  "shortName": {
                    "maxLength": 4096,
                    "description": "Short name, unique used as CAS serviceId.\n",
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 4096,
                    "description": "Additional description.\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organizations": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OrganizationUnit"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "users": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.User"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Group": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "role": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "orgUnitId": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "organizationUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Group"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Group"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "users": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.User"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.OrganizationUnit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "shortName": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalUid": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "externalType": {
                    "format": "int32",
                    "type": "number"
                  },
                  "externalId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "virtualPoolUuid": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "theme": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "rootCompany": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "lastSyncDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "type": {
                    "$ref": "#/components/schemas/lib.OrganizationUnitType"
                  },
                  "costCenter": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "companyNumber": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "dunsNumber": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "taxNumber": {
                    "maxLength": 1024,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "parentUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subUnits": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OrganizationUnit"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.UserDomain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "addreses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OrganizationUnitAddress"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "groups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Group"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tag"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "auditRecords": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AuditRecord"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "users": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.User"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.OrganizationUnitAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "mail": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "phone": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "mobile": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "street": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "city": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "country": {
                    "maxLength": 1024,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "unit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OrganizationUnit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.UserPasswordToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "tokenTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "tokenValue": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "mail": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ResetPasswordTokenStatus"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TagAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "objectIdentifier": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "objectType": {
                    "$ref": "#/components/schemas/lib.ResourceType"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "createdBy": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "orgUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Tag"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "lastName": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "name": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "loginName": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "title": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "password": {
                    "maxLength": 4096,
                    "type": "string"
                  },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mail": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "phone": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.UserStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Avatar"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tag"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "acls": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessControlItemValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "auditRecords": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AuditRecord"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "notifications": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Notification"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "organizationUnits": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OrganizationUnit"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "userDomains": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UserDomain"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "groups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Group"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "common.Resource": {
        "description": "Abstract Resource",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "common.FileData": {
        "description": "Abstract file data",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          }
        },
        "required": [
          "fileName",
          "content"
        ],
        "type": "object"
      },
      "common.RelationshipToOne": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/common.Resource"
          }
        },
        "required": [
          "data"
        ]
      },
      "common.RelationshipToMany": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Resource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "common.BatchTaskItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "format": "int64",
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/common.Resource"
          },
          "status": {
            "$ref": "#/components/schemas/common.BatchTaskItemStatus"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.ErrorObject"
            }
          }
        },
        "required": [
          "itemId",
          "status"
        ]
      },
      "common.BatchTaskAttributes": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "creationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.BatchTaskItem"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "common.BatchTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/common.BatchTaskAttributes"
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "common.BatchTaskItemStatus": {
        "enum": [
          "WAITING",
          "PENDING",
          "SUCCESS",
          "ERROR"
        ],
        "type": "string"
      },
      "common.ErrorObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "common.ErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.ErrorObject"
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "common.Heartbeat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "timestamp": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relaitonships": {
                "type": "object"
              },
              "meta": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      }
    },
    "responses": {},
    "parameters": {
      "trait_common.filtered_filter": {
        "name": "filter",
        "in": "query",
        "description": "Filtering expression follows LISP syntax.\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_common.paged_pageOffset": {
        "name": "pageOffset",
        "in": "query",
        "schema": {
          "type": "integer"
        }
      },
      "trait_common.paged_pageLimit": {
        "name": "pageLimit",
        "in": "query",
        "schema": {
          "type": "integer"
        }
      },
      "trait_common.sorted_sort": {
        "name": "sort",
        "in": "query",
        "description": "The value for sort represents sort fields. \nMultiple sortfields are comma-separated.\nSort order for each field is ascending - unless it is prefixed with a minus, in which case sort order is descending\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_common.included_include": {
        "name": "include",
        "in": "query",
        "description": "Referenced resources which are to be included in response.\nYou can include in response any attribute listed in Relationships.\n",
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "basic": {
        "description": "This API supports Basic Authentication.\n",
        "type": "http",
        "scheme": "basic"
      },
      "oauth_2_0": {
        "description": "This API supports OAuth 2.0 for authenticating all API requests.\n",
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://{cspUrl}/cas/oauth2/authorize",
            "tokenUrl": "https://{cspUrl}/cas/oauth2/token",
            "scopes": {}
          }
        }
      }
    },
    "links": {},
    "callbacks": {}
  }
}