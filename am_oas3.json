{
  "openapi": "3.0.0",
  "info": {
    "title": "Resource Management API",
    "version": "25.74.10",
    "description": "The Resource Manager is in charge of all resources and the business processes that an IoT Connectivity Provider can provide. These include SIM and eSIM cards of all types, APNs and their IP allocation, VPNs, roaming profiles, service settings, and security profiles. When resources are purchased by customers, the Resource Manager gives the appropriate resources to the Billing Manager. The Resource Manager works with any network and technology and can be a better central system for many networks and technologies.\n"
  },
  "servers": [
    {
      "url": "https://{cspUrl}/services/rm/v1",
      "variables": {
        "cspUrl": {
          "default": "cmp-demo.mavoco.com"
        }
      }
    },
    {
      "url": "http://{cspUrl}/services/rm/v1",
      "variables": {
        "cspUrl": {
          "default": "cmp-demo.mavoco.com"
        }
      }
    }
  ],
  "paths": {
    "/account": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 65,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "Account",
                      "id": "132962406249797505",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000019,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000019",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "PurpleSky Technology Ltd",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132962406249797505"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    },
                    {
                      "type": "Account",
                      "id": "132964854481819522",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000020,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000020",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "IOT_OLYMPUS_TEST_A1",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132964854481819522"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132964854481819522"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    },
                    {
                      "type": "Account",
                      "id": "132966301659305859",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000021,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000021",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "IOT_OLYMPUS_TEST_A2",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132966301659305859"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132966301659305859"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    },
                    {
                      "type": "Account",
                      "id": "132966661455091588",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000022,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000022",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "IOT_OLYMPUS_TEST_A3",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132966661455091588"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132966661455091588"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    },
                    {
                      "type": "Account",
                      "id": "132966858545436549",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000023,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000023",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "IOT_OLYMPUS_TEST_A4",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132966858545436549"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132966858545436549"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    },
                    {
                      "type": "Account",
                      "id": "132967094080771974",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000024,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000024",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "IOT_OLYMPUS_TEST_A5",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132967094080771974"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132967094080771974"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    },
                    {
                      "type": "Account",
                      "id": "132967339489499015",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000025,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000025",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "IOT_OLYMPUS_TEST_A6",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132967339489499015"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132967339489499015"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    },
                    {
                      "type": "Account",
                      "id": "132967604460459912",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000026,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000026",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "IOT_OLYMPUS_TEST_A7",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132967604460459912"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132967604460459912"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    },
                    {
                      "type": "Account",
                      "id": "132967790368790409",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000027,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000027",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "IOT_OLYMPUS_TEST_A8",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132967790368790409"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132967790368790409"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    },
                    {
                      "type": "Account",
                      "id": "132968035836237706",
                      "attributes": {
                        "accountIpAddressVersion": "IPV4",
                        "accountNumber": 288190000028,
                        "accountStatus": "DRAFT",
                        "bmAccountNumber": "190000028",
                        "clientType": "ENTERPRISE",
                        "isBillableIndicator": true,
                        "isBillingProfileIndicator": true,
                        "jasperCompatibilityIndicator": false,
                        "name": "IOT_OLYMPUS_TEST_F1",
                        "reportRetentionDays": 365,
                        "simOrderType": "CSP"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132968035836237706"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132968035836237706"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Accounts using query parameter filter criteria.",
        "operationId": "GetAccount",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccount"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                  },
                  "data": {
                    "type": "Account",
                    "id": "142425726132426641",
                    "attributes": {
                      "accountIpAddressVersion": "IPV6",
                      "accountNumber": 1310420,
                      "accountStatus": "DRAFT",
                      "bmAccountNumber": "1310421",
                      "clientType": "PERSON",
                      "externalAccountNumber": "1310422",
                      "externalCostCenter": "1310423",
                      "homepage": "1310424",
                      "isBillableIndicator": true,
                      "isBillingProfileIndicator": true,
                      "jasperCompatibilityIndicator": false,
                      "name": "name_1518032",
                      "notes": "1310425",
                      "reportRetentionDays": 1310426,
                      "simOrderType": "MANUFACTURER"
                    },
                    "relationships": {
                      "company": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/company/142425713364965260"
                        },
                        "data": {
                          "type": "Company",
                          "id": "142425713364965260"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account.",
        "operationId": "CreateAccount",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Account",
                  "attributes": {
                    "accountIpAddressVersion": "IPV4",
                    "accountNumber": 1310040,
                    "accountStatus": "DRAFT",
                    "bmAccountNumber": "1310041",
                    "clientType": "ENTERPRISE",
                    "externalAccountNumber": "1310042",
                    "externalCostCenter": "1310043",
                    "homepage": "1310044",
                    "isBillableIndicator": true,
                    "isBillingProfileIndicator": true,
                    "jasperCompatibilityIndicator": true,
                    "name": "name_1964228",
                    "notes": "1310045",
                    "reportRetentionDays": 1310046,
                    "simOrderType": "CSP"
                  },
                  "relationships": {
                    "company": {
                      "data": {
                        "type": "Company",
                        "id": "${companyId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccount"
      },
      "x-annotation-common.entity": "Account"
    },
    "/account/create": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSetupOperationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create with related objects",
        "operationId": "Create with related objects",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSetupOperation",
                  "id": "${accountSetupOperationId}",
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSetupOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/account/update": {
      "patch": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSetupOperationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create with related objects",
        "operationId": "Create with related objects",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSetupOperation",
                  "id": "${accountSetupOperationId}",
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSetupOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/account/synchronize": {
      "post": {
        "responses": {
          "200": {
            "description": "Synchronized successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Synchronize Billing Account",
        "operationId": "Synchronize Billing Account",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingAccount",
                  "id": "${billingAccountId}",
                  "attributes": {
                    "name": "name_1959218",
                    "uuid": "70372a67-ad94-4e8e-9990-71ec7b187a34",
                    "status": "DRAFT",
                    "lastSyncTimestamp": "2017-11-11T08:28:35.000-04:10"
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingAccountRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/account/validateExternalAccount": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurableFeatureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "Validate whether feature is enabled"
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateExternalAccountResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Validate Account in External System (CRM)",
        "operationId": "Validate Account in External System (CRM)",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateExternalAccountOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/account/externalAccountNumber/{externalAccountNumber}/accountStatus": {
      "patch": {
        "responses": {
          "200": {
            "description": "Network change request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change Account status",
        "operationId": "Change Account status",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "ChangeAccountStatusOperation",
                  "id": "${changeAccountStatusOperationId}",
                  "attributes": {
                    "accountStatus": "ACCOUNT"
                  },
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ChangeAccountStatusOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "externalAccountNumber",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                  },
                  "data": {
                    "type": "Account",
                    "id": "142425726132426641",
                    "attributes": {
                      "accountIpAddressVersion": "IPV6",
                      "accountNumber": 288190000086,
                      "accountStatus": "DRAFT",
                      "bmAccountNumber": "190000086",
                      "clientType": "PERSON",
                      "externalAccountNumber": "1310422",
                      "externalCostCenter": "1310423",
                      "homepage": "1310424",
                      "isBillableIndicator": true,
                      "isBillingProfileIndicator": true,
                      "jasperCompatibilityIndicator": false,
                      "name": "name_1518032",
                      "notes": "1310425",
                      "reportRetentionDays": 1310426,
                      "simOrderType": "MANUFACTURER"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      },
                      "company": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/company/142425713364965260"
                        },
                        "data": {
                          "type": "Company",
                          "id": "142425713364965260"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account by accountId URL path parameter.",
        "operationId": "GetAccountById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccount"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccount",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Account",
                  "id": "${accountId}",
                  "attributes": {
                    "accountIpAddressVersion": "IPV4",
                    "accountStatus": "DRAFT",
                    "clientType": "ENTERPRISE",
                    "externalAccountNumber": "1310077",
                    "externalCostCenter": "1310078",
                    "homepage": "1310079",
                    "isBillableIndicator": true,
                    "isBillingProfileIndicator": true,
                    "jasperCompatibilityIndicator": false,
                    "name": "name_1964228",
                    "notes": "1310080",
                    "reportRetentionDays": 1310081,
                    "simOrderType": "CSP"
                  },
                  "relationships": {
                    "company": {
                      "data": {
                        "type": "Company",
                        "id": "${companyId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccount"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account\nNote: This is only allowed if Account is in DRAFT status\n",
        "operationId": "DeleteAccount",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccount"
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/validation": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Do validation for account, and fetch detailed information.",
        "operationId": "Do validation for account, and fetch detailed information."
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "x-annotation-common.entity": "Account"
    },
    "/account/{accountId}/availableBillingProfileApnGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileApnGroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find BillingProfileApnGroups for Account using query parameter filter criteria.",
        "operationId": "Find BillingProfileApnGroups for Account",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "x-annotation-common.entity": "BillingProfileApnGroup"
    },
    "/account/{accountId}/availableBillingProfileRoamingProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileRoamingProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find BillingProfileRoamingProfiles for Account using query parameter filter criteria.",
        "operationId": "Find BillingProfileRoamingProfiles for Account",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "x-annotation-common.entity": "BillingProfileRoamingProfile"
    },
    "/account/{accountId}/availableBillingProfileSecurityProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSecurityProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find BillingProfileSecurityProfiles for Account using query parameter filter criteria.",
        "operationId": "Find BillingProfileSecurityProfiles for Account",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "x-annotation-common.entity": "BillingProfileSecurityProfile"
    },
    "/account/{accountId}/availableSecurityProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SecurityProfiles for Account using query parameter filter criteria.",
        "operationId": "Find SecurityProfiles for Account",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "x-annotation-common.entity": "SecurityProfile"
    },
    "/account/{accountId}/availableBillingProfileServiceProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileServiceProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find BillingProfileServiceProfiles for Account using query parameter filter criteria.",
        "operationId": "Find BillingProfileServiceProfiles for Account",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "x-annotation-common.entity": "BillingProfileServiceProfile"
    },
    "/account/{accountId}/availableBillingProfileSimSalesProduct": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSimSalesProductArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find BillingProfileSimSalesProducts for Account using query parameter filter criteria.",
        "operationId": "Find BillingProfileSimSalesProducts for Account",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "x-annotation-common.entity": "BillingProfileSimSalesProduct"
    },
    "/account/{accountId}/availableApnGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApnGroupArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "Lists Available Apn Group",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/zoneModel": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneModelArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Get customer's zoneModels assigned to Account",
        "operationId": "Get customer's zoneModels assigned to Account"
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/accountStatus": {
      "patch": {
        "responses": {
          "200": {
            "description": "Network change request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change Account status",
        "operationId": "Change Account status",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "ChangeAccountStatusOperation",
                  "id": "${changeAccountStatusOperationId}",
                  "attributes": {
                    "accountStatus": "ACCOUNT"
                  },
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ChangeAccountStatusOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/isBillableChange": {
      "patch": {
        "responses": {
          "200": {
            "description": "Billable status request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change Account Billable status",
        "operationId": "Change Account Billable status",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBillableAccountStatusOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/usageLimitOverride": {
      "patch": {
        "responses": {
          "202": {
            "description": "UsageLimitOverrideOperation request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change UsageLimitOverrideOperation for Account",
        "operationId": "Change UsageLimitOverrideOperation for Account",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UsageLimitOverrideOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/availableRoamingProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RoamingProfileArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Available Roaming Profiles using query parameter filter criteria.",
        "operationId": "Find Available Roaming Profiles",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAvailableRoamingProfile"
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "x-annotation-common.entity": "RoamingProfile"
    },
    "/account/{accountId}/availableServiceProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceProfileArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Available Service Profiles using query parameter filter criteria.",
        "operationId": "Find Available Service Profiles",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAvailableServiceProfile"
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/availableSubscriptionItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItemArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Available Subscription Items using query parameter filter criteria.",
        "operationId": "Find Available Subscription Items",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAvailableSubscriptionItem"
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "x-annotation-common.entity": "SubscriptionItem"
    },
    "/account/{accountId}/accountNetworkInterfacesBySubscriptionItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterfaceArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Network Interface Link by AccountSubscriptionItem by account Id.",
        "operationId": "Find Network Interface Link by account Id",
        "x-annotation-common.oid": 30
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/accountPlatforms": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Network Interface Link by AccountSubscriptionItem by account Id.",
        "operationId": "Find Network Interface Link by account Id",
        "x-annotation-common.oid": 30
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/accountNetworkInterfaces": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterfaceArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Network Interfaces with platfrom relationship by account Id.",
        "operationId": "Find Network Interface Link by account Id",
        "x-annotation-common.oid": 30
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/relationships/pendingChanges": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CmpObjectPendingChangeArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Available Service Profiles using query parameter filter criteria.",
        "operationId": "Find Available Service Profiles",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAvailableServiceProfile"
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/relationships/reports": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 500
                  },
                  "data": [
                    {
                      "type": "Report",
                      "id": "142424202618607493",
                      "attributes": {
                        "description": "description_1415702",
                        "lastUpdateTimestamp": "2019-07-16T12:11:28.008Z",
                        "name": "name_1594175",
                        "periodicity": "MONTHLY",
                        "query": "1167233",
                        "reportQueryType": "SQL",
                        "reportTemplate": {
                          "content": "fileContens="
                        },
                        "reportType": "PRIVATE",
                        "shortcode": "1167232",
                        "status": "DRAFT"
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ReportArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "GetReportRelationships",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Relationship added successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Add Relationship\n",
        "operationId": "AddReportRelationship",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "Report",
                    "id": "${reportId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ReportRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Relationships merged successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "data": [
                    {
                      "type": "Report",
                      "id": "142424202618607493",
                      "attributes": {
                        "description": "description_1415702",
                        "lastUpdateTimestamp": "2019-07-16T12:11:28.008Z",
                        "name": "name_1594175",
                        "periodicity": "MONTHLY",
                        "query": "1167233",
                        "reportQueryType": "SQL",
                        "reportTemplate": {
                          "content": "fileContens="
                        },
                        "reportType": "PRIVATE",
                        "shortcode": "1167232",
                        "status": "DRAFT"
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ReportArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Merge Relationships\n",
        "operationId": "ModifyReportRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "Report",
                    "id": "${reportId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ReportRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Relationships removed successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "data": [],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ReportArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Relationships\n",
        "operationId": "RemoveReportRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "Report",
                    "id": "${reportId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ReportRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/relationships/applicationTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "GetApplicationTypeRelationships",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Relationship added successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Add Relationship\n",
        "operationId": "AddApplicationTypeRelationship",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "ApplicationType",
                    "id": "${applicationTypeId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Relationships merged successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Merge Relationships\n",
        "operationId": "ModifyApplicationTypeRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "ApplicationType",
                    "id": "${applicationTypeId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Relationships removed successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Relationships\n",
        "operationId": "RemoveApplicationTypeRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "ApplicationType",
                    "id": "${applicationTypeId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/relationships/deviceTypes": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "GetDeviceTypeRelationships",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Relationship added successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Add Relationship\n",
        "operationId": "AddDeviceTypeRelationship",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "DeviceType",
                    "id": "${deviceTypeId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/DeviceTypeRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Relationships merged successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Merge Relationships\n",
        "operationId": "ModifyDeviceTypeRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "DeviceType",
                    "id": "${deviceTypeId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/DeviceTypeRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Relationships removed successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Relationships\n",
        "operationId": "RemoveDeviceTypeRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "DeviceType",
                    "id": "${deviceTypeId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/DeviceTypeRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/relationships/apnGroups": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApnGroupArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "GetApnGroupRelationships",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Relationship added successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApnGroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Add Relationship\n",
        "operationId": "AddApnGroupRelationship",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "ApnGroup",
                    "id": "${apnGroupId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApnGroupRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Relationships merged successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApnGroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Merge Relationships\n",
        "operationId": "ModifyApnGroupRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "ApnGroup",
                    "id": "${apnGroupId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApnGroupRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Relationships removed successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApnGroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Relationships\n",
        "operationId": "RemoveApnGroupRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "ApnGroup",
                    "id": "${apnGroupId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApnGroupRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/{accountId}/relationships/apns": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApnArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Offset-based pagination strategy.\n",
        "operationId": "GetApnRelationships",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Relationship added successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApnArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Add Relationship\n",
        "operationId": "AddApnRelationship",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "Apn",
                    "id": "${apnId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApnRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Relationships merged successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApnArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Merge Relationships\n",
        "operationId": "ModifyApnRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "Apn",
                    "id": "${apnId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApnRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Relationships removed successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApnArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Relationships\n",
        "operationId": "RemoveApnRelationships",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": [
                  {
                    "type": "Apn",
                    "id": "${apnId}"
                  }
                ],
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApnRelationshipArrayRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/account/validation": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountValidationArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Do simple validation for account.",
        "operationId": "Do simple validation for account.",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Coma separated account ids.\n",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "x-annotation-common.entity": "Account"
    },
    "/accountEmmProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountEmmProfile",
                      "id": "142425869250467795",
                      "attributes": {
                        "emmEnterpriseKey": "1310794",
                        "emmProvider": "APPLE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                          },
                          "data": {
                            "type": "Account",
                            "id": "142425726132426641"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountEmmProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Emm Profiles using query parameter filter criteria.",
        "operationId": "GetAccountEmmProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountEmmProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountEmmProfile/142425869250467795"
                  },
                  "data": {
                    "type": "AccountEmmProfile",
                    "id": "142425869250467795",
                    "attributes": {
                      "emmEnterpriseKey": "1310791",
                      "emmProvider": "APPLE"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountEmmProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Emm Profile.",
        "operationId": "CreateAccountEmmProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountEmmProfile",
                  "attributes": {
                    "emmEnterpriseKey": "1310209",
                    "emmProvider": "APPLE"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountEmmProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountEmmProfile"
      },
      "x-annotation-common.entity": "AccountEmmProfile"
    },
    "/accountEmmProfile/{accountEmmProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountEmmProfile/142425869250467795"
                  },
                  "data": {
                    "type": "AccountEmmProfile",
                    "id": "142425869250467795",
                    "attributes": {
                      "emmEnterpriseKey": "1310794",
                      "emmProvider": "APPLE"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountEmmProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Emm Profile by accountEmmProfileId URL path parameter.",
        "operationId": "GetAccountEmmProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountEmmProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountEmmProfile/142425869250467795"
                  },
                  "data": {
                    "type": "AccountEmmProfile",
                    "id": "142425869250467795",
                    "attributes": {
                      "emmEnterpriseKey": "1310794",
                      "emmProvider": "APPLE"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountEmmProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Emm Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountEmmProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountEmmProfile",
                  "id": "${accountEmmProfileId}",
                  "attributes": {
                    "emmEnterpriseKey": "1310212",
                    "emmProvider": "GOOGLE"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountEmmProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountEmmProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Emm Profile\nNote: This is only allowed if Account Emm Profile is in DRAFT status\n",
        "operationId": "DeleteAccountEmmProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountEmmProfile"
      },
      "parameters": [
        {
          "name": "accountEmmProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountPerson": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountPerson",
                      "id": "142425874979887062",
                      "attributes": {
                        "creationTimestamp": "2019-07-16T12:14:47.370Z",
                        "email": "1310808",
                        "fax": "1310809",
                        "homepage": "1310810",
                        "isPortalAdminUserIndicator": true,
                        "jobTitle": "1310811",
                        "lastUpdateTimestamp": "2019-07-16T12:14:47.588Z",
                        "phone1": "1310812",
                        "phone2": "1310813"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                          },
                          "data": {
                            "type": "Account",
                            "id": "142425726132426641"
                          }
                        },
                        "person": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/person/142425830209886151"
                          },
                          "data": {
                            "type": "Person",
                            "id": "142425830209886151"
                          }
                        },
                        "personType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/personType/142425835209496522"
                          },
                          "data": {
                            "type": "PersonType",
                            "id": "142425835209496522"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountPersonArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account People using query parameter filter criteria.",
        "operationId": "GetAccountPerson",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountPerson"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountPerson/142425874979887062"
                  },
                  "data": {
                    "type": "AccountPerson",
                    "id": "142425874979887062",
                    "attributes": {
                      "creationTimestamp": "2019-07-16T12:14:47.369Z",
                      "email": "1310797",
                      "fax": "1310798",
                      "homepage": "1310799",
                      "isPortalAdminUserIndicator": true,
                      "jobTitle": "1310800",
                      "lastUpdateTimestamp": "2019-07-16T12:14:47.369Z",
                      "phone1": "1310801",
                      "phone2": "1310802"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "person": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/person/142425830209886151"
                        },
                        "data": {
                          "type": "Person",
                          "id": "142425830209886151"
                        }
                      },
                      "personType": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/personType/142425835209496522"
                        },
                        "data": {
                          "type": "PersonType",
                          "id": "142425835209496522"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountPersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Person.",
        "operationId": "CreateAccountPerson",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountPerson",
                  "attributes": {
                    "creationTimestamp": "2013-12-06T04:19:19.000-11:04",
                    "email": "1310215",
                    "fax": "1310216",
                    "homepage": "1310217",
                    "isPortalAdminUserIndicator": true,
                    "jobTitle": "1310218",
                    "lastUpdateTimestamp": "2022-12-18T14:41:47.000+04:47",
                    "phone1": "1310219",
                    "phone2": "1310220"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "person": {
                      "data": {
                        "type": "Person",
                        "id": "${personId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "personType": {
                      "data": {
                        "type": "PersonType",
                        "id": "${personTypeId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountPersonRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountPerson"
      },
      "x-annotation-common.entity": "AccountPerson"
    },
    "/accountPerson/{accountPersonId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountPerson/142425874979887062"
                  },
                  "data": {
                    "type": "AccountPerson",
                    "id": "142425874979887062",
                    "attributes": {
                      "creationTimestamp": "2019-07-16T12:14:47.370Z",
                      "email": "1310808",
                      "fax": "1310809",
                      "homepage": "1310810",
                      "isPortalAdminUserIndicator": true,
                      "jobTitle": "1310811",
                      "lastUpdateTimestamp": "2019-07-16T12:14:47.588Z",
                      "phone1": "1310812",
                      "phone2": "1310813"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "person": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/person/142425830209886151"
                        },
                        "data": {
                          "type": "Person",
                          "id": "142425830209886151"
                        }
                      },
                      "personType": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/personType/142425835209496522"
                        },
                        "data": {
                          "type": "PersonType",
                          "id": "142425835209496522"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountPersonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Person by accountPersonId URL path parameter.",
        "operationId": "GetAccountPersonById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountPerson"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountPerson/142425874979887062"
                  },
                  "data": {
                    "type": "AccountPerson",
                    "id": "142425874979887062",
                    "attributes": {
                      "creationTimestamp": "2019-07-16T12:14:47.370Z",
                      "email": "1310808",
                      "fax": "1310809",
                      "homepage": "1310810",
                      "isPortalAdminUserIndicator": true,
                      "jobTitle": "1310811",
                      "lastUpdateTimestamp": "2019-07-16T12:14:47.589Z",
                      "phone1": "1310812",
                      "phone2": "1310813"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "person": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/person/142425830209886151"
                        },
                        "data": {
                          "type": "Person",
                          "id": "142425830209886151"
                        }
                      },
                      "personType": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/personType/142425835209496522"
                        },
                        "data": {
                          "type": "PersonType",
                          "id": "142425835209496522"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountPersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Person.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountPerson",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountPerson",
                  "id": "${accountPersonId}",
                  "attributes": {
                    "creationTimestamp": "2024-08-20T16:57:55.000+08:32",
                    "email": "1310226",
                    "fax": "1310227",
                    "homepage": "1310228",
                    "isPortalAdminUserIndicator": true,
                    "jobTitle": "1310229",
                    "lastUpdateTimestamp": "2021-01-16T12:45:31.000+02:03",
                    "phone1": "1310230",
                    "phone2": "1310231"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "person": {
                      "data": {
                        "type": "Person",
                        "id": "${personId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "personType": {
                      "data": {
                        "type": "PersonType",
                        "id": "${personTypeId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountPersonRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountPerson"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Person\nNote: This is only allowed if Account Person is in DRAFT status\n",
        "operationId": "DeleteAccountPerson",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountPerson"
      },
      "parameters": [
        {
          "name": "accountPersonId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountRoamingProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 10,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountRoamingProfile",
                      "id": "138987072722572806",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/138987072722572805"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "138987072722572805"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountRoamingProfile",
                      "id": "138987917170185736",
                      "attributes": {
                        "isDefaultProfileIndicator": true,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/138987917161797127"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "138987917161797127"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountRoamingProfile",
                      "id": "138991871551608330",
                      "attributes": {
                        "isDefaultProfileIndicator": true,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/138991871543219721"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "138991871543219721"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountRoamingProfile",
                      "id": "139486331565774714",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139486305913411437"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139486305913411437"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/139486330064213880"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "139486330064213880"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountRoamingProfile",
                      "id": "139487423611541397",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139487395669088136"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139487395669088136"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/139487420507756435"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "139487420507756435"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountRoamingProfile",
                      "id": "139582297618782133",
                      "attributes": {
                        "isDefaultProfileIndicator": true,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139568882254878619"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139568882254878619"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/139582297610393524"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "139582297610393524"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountRoamingProfile",
                      "id": "140220822261340144",
                      "attributes": {
                        "isDefaultProfileIndicator": true,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/140216478145189856"
                          },
                          "data": {
                            "type": "Account",
                            "id": "140216478145189856"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/140220822252951535"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "140220822252951535"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountRoamingProfile",
                      "id": "141515081203586080",
                      "attributes": {
                        "isDefaultProfileIndicator": true,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/141511733637288977"
                          },
                          "data": {
                            "type": "Account",
                            "id": "141511733637288977"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/141515081195197471"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "141515081195197471"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountRoamingProfile",
                      "id": "142425739847800734",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                          },
                          "data": {
                            "type": "Account",
                            "id": "142425726132426641"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "142425738245576604"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountRoamingProfile",
                      "id": "142425799767627706",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                          },
                          "data": {
                            "type": "Account",
                            "id": "142425726132426641"
                          }
                        },
                        "billingProfileRoamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                          },
                          "data": {
                            "type": "BillingProfileRoamingProfile",
                            "id": "142425738245576604"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountRoamingProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Roaming Profiles using query parameter filter criteria.",
        "operationId": "GetAccountRoamingProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountRoamingProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountRoamingProfile/142425994903426050"
                  },
                  "data": {
                    "type": "AccountRoamingProfile",
                    "id": "142425994903426050",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileRoamingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                        },
                        "data": {
                          "type": "BillingProfileRoamingProfile",
                          "id": "142425738245576604"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Roaming Profile.",
        "operationId": "CreateAccountRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountRoamingProfile",
                  "attributes": {
                    "isDefaultProfileIndicator": false,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileRoamingProfile": {
                      "data": {
                        "type": "BillingProfileRoamingProfile",
                        "id": "${billingProfileRoamingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountRoamingProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountRoamingProfile"
      },
      "x-annotation-common.entity": "AccountRoamingProfile"
    },
    "/accountRoamingProfile/create": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountRoamingProfileOperationResultResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create Account Roaming Profile (and others elements).",
        "operationId": "Create Account Roaming Profile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountRoamingProfileOperation",
                  "id": "${accountRoamingProfileOperationId}",
                  "attributes": {
                    "accountRoamingProfileIsDefault": false,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "roamingProfile": {
                      "data": {
                        "type": "RoamingProfile",
                        "id": "${roamingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountRoamingProfileOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/accountRoamingProfile/{accountRoamingProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountRoamingProfile/142425739847800734"
                  },
                  "data": {
                    "type": "AccountRoamingProfile",
                    "id": "142425739847800734",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileRoamingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                        },
                        "data": {
                          "type": "BillingProfileRoamingProfile",
                          "id": "142425738245576604"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountRoamingProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Roaming Profile by accountRoamingProfileId URL path parameter.",
        "operationId": "GetAccountRoamingProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountRoamingProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountRoamingProfile/142425739847800734"
                  },
                  "data": {
                    "type": "AccountRoamingProfile",
                    "id": "142425739847800734",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileRoamingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                        },
                        "data": {
                          "type": "BillingProfileRoamingProfile",
                          "id": "142425738245576604"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Roaming Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountRoamingProfile",
                  "id": "${accountRoamingProfileId}",
                  "attributes": {
                    "isDefaultProfileIndicator": false,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileRoamingProfile": {
                      "data": {
                        "type": "BillingProfileRoamingProfile",
                        "id": "${billingProfileRoamingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountRoamingProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountRoamingProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Roaming Profile\nNote: This is only allowed if Account Roaming Profile is in DRAFT status\n",
        "operationId": "DeleteAccountRoamingProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountRoamingProfile"
      },
      "parameters": [
        {
          "name": "accountRoamingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountRoamingProfile/{accountRoamingProfileId}/default": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Set Default Operation",
        "operationId": "Set Default Operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RoamingProfileSetDefaultOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountRoamingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountRoamingProfile/{accountRoamingProfileId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountRoamingProfile/142425739847800734"
                  },
                  "data": {
                    "type": "AccountRoamingProfile",
                    "id": "142425739847800734",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "status": "ACTIVE"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileRoamingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                        },
                        "data": {
                          "type": "BillingProfileRoamingProfile",
                          "id": "142425738245576604"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountRoamingProfile Resource",
        "operationId": "ActivateAccountRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountRoamingProfileActivateOperation",
                  "id": "${accountRoamingProfileId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountRoamingProfile",
                        "id": "${accountRoamingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountRoamingProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountRoamingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountRoamingProfile/{accountRoamingProfileId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountRoamingProfile/142425739847800734"
                  },
                  "data": {
                    "type": "AccountRoamingProfile",
                    "id": "142425739847800734",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "status": "INACTIVE"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileRoamingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                        },
                        "data": {
                          "type": "BillingProfileRoamingProfile",
                          "id": "142425738245576604"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountRoamingProfile Resource",
        "operationId": "DeactivateAccountRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountRoamingProfileActivateOperation",
                  "id": "${accountRoamingProfileId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountRoamingProfile",
                        "id": "${accountRoamingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountRoamingProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountRoamingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountServiceProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 9,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountServiceProfile",
                      "id": "134474753321736107",
                      "attributes": {
                        "isDefaultProfileIndicator": true,
                        "isSuspendProfileIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "billingProfileServiceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/134474753313347498"
                          },
                          "data": {
                            "type": "BillingProfileServiceProfile",
                            "id": "134474753313347498"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountServiceProfile",
                      "id": "138852059049891266",
                      "attributes": {
                        "isDefaultProfileIndicator": true,
                        "isSuspendProfileIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileServiceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/138852059024725441"
                          },
                          "data": {
                            "type": "BillingProfileServiceProfile",
                            "id": "138852059024725441"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountServiceProfile",
                      "id": "139486339123910526",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "isSuspendProfileIndicator": true,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139486305913411437"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139486305913411437"
                          }
                        },
                        "billingProfileServiceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/139486334183020412"
                          },
                          "data": {
                            "type": "BillingProfileServiceProfile",
                            "id": "139486334183020412"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountServiceProfile",
                      "id": "139487427092813721",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "isSuspendProfileIndicator": false,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139487395669088136"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139487395669088136"
                          }
                        },
                        "billingProfileServiceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/139487425331206039"
                          },
                          "data": {
                            "type": "BillingProfileServiceProfile",
                            "id": "139487425331206039"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountServiceProfile",
                      "id": "139582193121892273",
                      "attributes": {
                        "isDefaultProfileIndicator": true,
                        "isSuspendProfileIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139568882254878619"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139568882254878619"
                          }
                        },
                        "billingProfileServiceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/139582193113503664"
                          },
                          "data": {
                            "type": "BillingProfileServiceProfile",
                            "id": "139582193113503664"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountServiceProfile",
                      "id": "140221918862120949",
                      "attributes": {
                        "isDefaultProfileIndicator": true,
                        "isSuspendProfileIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/140216478145189856"
                          },
                          "data": {
                            "type": "Account",
                            "id": "140216478145189856"
                          }
                        },
                        "billingProfileServiceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/140221918853732340"
                          },
                          "data": {
                            "type": "BillingProfileServiceProfile",
                            "id": "140221918853732340"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountServiceProfile",
                      "id": "141515300800566309",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "isSuspendProfileIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/141511733637288977"
                          },
                          "data": {
                            "type": "Account",
                            "id": "141511733637288977"
                          }
                        },
                        "billingProfileServiceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/141515300792177700"
                          },
                          "data": {
                            "type": "BillingProfileServiceProfile",
                            "id": "141515300792177700"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountServiceProfile",
                      "id": "142425743278741410",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "isSuspendProfileIndicator": true,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                          },
                          "data": {
                            "type": "Account",
                            "id": "142425726132426641"
                          }
                        },
                        "billingProfileServiceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                          },
                          "data": {
                            "type": "BillingProfileServiceProfile",
                            "id": "142425741584242592"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountServiceProfile",
                      "id": "142425805572544443",
                      "attributes": {
                        "isDefaultProfileIndicator": false,
                        "isSuspendProfileIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                          },
                          "data": {
                            "type": "Account",
                            "id": "142425726132426641"
                          }
                        },
                        "billingProfileServiceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                          },
                          "data": {
                            "type": "BillingProfileServiceProfile",
                            "id": "142425741584242592"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Service Profiles using query parameter filter criteria.",
        "operationId": "GetAccountServiceProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountServiceProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountServiceProfile/142425990767843327"
                  },
                  "data": {
                    "type": "AccountServiceProfile",
                    "id": "142425990767843327",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "isSuspendProfileIndicator": false,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileServiceProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                        },
                        "data": {
                          "type": "BillingProfileServiceProfile",
                          "id": "142425741584242592"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Service Profile.",
        "operationId": "CreateAccountServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountServiceProfile",
                  "attributes": {
                    "isDefaultProfileIndicator": false,
                    "isSuspendProfileIndicator": true,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileServiceProfile": {
                      "data": {
                        "type": "BillingProfileServiceProfile",
                        "id": "${billingProfileServiceProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountServiceProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountServiceProfile"
      },
      "x-annotation-common.entity": "AccountServiceProfile"
    },
    "/accountServiceProfile/create": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileOperationResultResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create with ServiceProfile (and others elements).",
        "operationId": "Create with ServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountServiceProfileOperation",
                  "id": "${accountServiceProfileOperationId}",
                  "attributes": {
                    "isDefaultProfileIndicator": false,
                    "isSuspendProfileIndicator": true,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "serviceProfile": {
                      "data": {
                        "type": "ServiceProfile",
                        "id": "${serviceProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountServiceProfileOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/accountServiceProfile/{accountServiceProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountServiceProfile/142425743278741410"
                  },
                  "data": {
                    "type": "AccountServiceProfile",
                    "id": "142425743278741410",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "isSuspendProfileIndicator": true,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileServiceProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                        },
                        "data": {
                          "type": "BillingProfileServiceProfile",
                          "id": "142425741584242592"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Service Profile by accountServiceProfileId URL path parameter.",
        "operationId": "GetAccountServiceProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountServiceProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountServiceProfile/142425743278741410"
                  },
                  "data": {
                    "type": "AccountServiceProfile",
                    "id": "142425743278741410",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "isSuspendProfileIndicator": true,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileServiceProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                        },
                        "data": {
                          "type": "BillingProfileServiceProfile",
                          "id": "142425741584242592"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Service Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountServiceProfile",
                  "id": "${accountServiceProfileId}",
                  "attributes": {
                    "isDefaultProfileIndicator": false,
                    "isSuspendProfileIndicator": true,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileServiceProfile": {
                      "data": {
                        "type": "BillingProfileServiceProfile",
                        "id": "${billingProfileServiceProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountServiceProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountServiceProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Service Profile\nNote: This is only allowed if Account Service Profile is in DRAFT status\n",
        "operationId": "DeleteAccountServiceProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountServiceProfile"
      },
      "parameters": [
        {
          "name": "accountServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountServiceProfile/{accountServiceProfileId}/default": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Set Default Operation",
        "operationId": "Set Default Operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceProfileSetDefaultOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountServiceProfile/{accountServiceProfileId}/unsetDefaultSuspend": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Unset Default Suspend Operation",
        "operationId": "Unset Default Suspend Operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceProfileSetDefaultSuspendOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountServiceProfile/{accountServiceProfileId}/defaultSuspend": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Set Default Suspend Operation",
        "operationId": "Set Default Suspend Operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceProfileSetDefaultSuspendOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountServiceProfile/{accountServiceProfileId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountServiceProfile/142425743278741410"
                  },
                  "data": {
                    "type": "AccountServiceProfile",
                    "id": "142425743278741410",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "isSuspendProfileIndicator": true,
                      "status": "ACTIVE"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileServiceProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                        },
                        "data": {
                          "type": "BillingProfileServiceProfile",
                          "id": "142425741584242592"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountServiceProfile Resource",
        "operationId": "ActivateAccountServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountServiceProfileActivateOperation",
                  "id": "${accountServiceProfileId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountServiceProfile",
                        "id": "${accountServiceProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountServiceProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountServiceProfile/{accountServiceProfileId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountServiceProfile/142425743278741410"
                  },
                  "data": {
                    "type": "AccountServiceProfile",
                    "id": "142425743278741410",
                    "attributes": {
                      "isDefaultProfileIndicator": false,
                      "isSuspendProfileIndicator": true,
                      "status": "INACTIVE"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileServiceProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                        },
                        "data": {
                          "type": "BillingProfileServiceProfile",
                          "id": "142425741584242592"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountServiceProfile Resource",
        "operationId": "DeactivateAccountServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountServiceProfileActivateOperation",
                  "id": "${accountServiceProfileId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountServiceProfile",
                        "id": "${accountServiceProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountServiceProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountingGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 2,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountingGroup",
                      "id": "132277547525216120",
                      "attributes": {
                        "accountingGroupKey": "AT",
                        "creationTimestamp": "2019-07-02T12:11:52.464Z",
                        "invoiceCurrency": "USD",
                        "invoiceCurrencyVat": "{\"20\":20,\"10\":10}",
                        "invoiceLimit": 299,
                        "invoicePrefix": "AT",
                        "invoicePreset": 200,
                        "isActiveIndicator": true,
                        "lastUpdateTimestamp": "2019-07-05T15:20:41.398Z",
                        "name": "AT&T US Dollar Customers",
                        "pathBackpaper": "backpaper.pdf",
                        "shortname": "ATT",
                        "sortOrder": 1
                      },
                      "relationships": {}
                    },
                    {
                      "type": "AccountingGroup",
                      "id": "142425745224898468",
                      "attributes": {
                        "accountingGroupKey": "1310509",
                        "creationTimestamp": "2019-07-16T12:14:31.902Z",
                        "invoiceCurrency": "510",
                        "invoiceCurrencyVat": "1310511",
                        "invoiceLimit": 1310512,
                        "invoicePrefix": "12",
                        "invoicePreset": 1310514,
                        "isActiveIndicator": false,
                        "lastUpdateTimestamp": "2019-07-16T12:14:32.104Z",
                        "name": "name_1518034",
                        "pathBackpaper": "1310515",
                        "setup": "1310516",
                        "shortname": "1310517",
                        "sortOrder": 1310518
                      },
                      "relationships": {}
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountingGroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Accounting Groups using query parameter filter criteria.",
        "operationId": "GetAccountingGroup",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountingGroup"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/142425745224898468"
                  },
                  "data": {
                    "type": "AccountingGroup",
                    "id": "142425745224898468",
                    "attributes": {
                      "accountingGroupKey": "1310497",
                      "creationTimestamp": "2019-07-16T12:14:31.902Z",
                      "invoiceCurrency": "498",
                      "invoiceCurrencyVat": "1310499",
                      "invoiceLimit": 1310500,
                      "invoicePrefix": "11",
                      "invoicePreset": 1310502,
                      "isActiveIndicator": false,
                      "lastUpdateTimestamp": "2019-07-16T12:14:31.902Z",
                      "name": "name_1518033",
                      "pathBackpaper": "1310503",
                      "setup": "1310504",
                      "shortname": "1310505",
                      "sortOrder": 1310506
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountingGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Accounting Group.",
        "operationId": "CreateAccountingGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountingGroup",
                  "attributes": {
                    "accountingGroupKey": "1309405",
                    "creationTimestamp": "2014-01-07T05:13:17.000-09:42",
                    "invoiceCurrency": "406",
                    "invoiceCurrencyVat": "1309407",
                    "invoiceLimit": 1309408,
                    "invoicePrefix": "13",
                    "invoicePreset": 1309410,
                    "isActiveIndicator": false,
                    "lastUpdateTimestamp": "2016-08-09T06:48:17.000-07:04",
                    "name": "name_1517981",
                    "pathBackpaper": "1309411",
                    "setup": "1309412",
                    "shortname": "1309413",
                    "sortOrder": 1309414
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountingGroupRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountingGroup"
      },
      "x-annotation-common.entity": "AccountingGroup"
    },
    "/accountingGroup/{accountingGroupId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/142425745224898468"
                  },
                  "data": {
                    "type": "AccountingGroup",
                    "id": "142425745224898468",
                    "attributes": {
                      "accountingGroupKey": "1310509",
                      "creationTimestamp": "2019-07-16T12:14:31.902Z",
                      "invoiceCurrency": "510",
                      "invoiceCurrencyVat": "1310511",
                      "invoiceLimit": 1310512,
                      "invoicePrefix": "12",
                      "invoicePreset": 1310514,
                      "isActiveIndicator": false,
                      "lastUpdateTimestamp": "2019-07-16T12:14:32.104Z",
                      "name": "name_1518034",
                      "pathBackpaper": "1310515",
                      "setup": "1310516",
                      "shortname": "1310517",
                      "sortOrder": 1310518
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountingGroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Accounting Group by accountingGroupId URL path parameter.",
        "operationId": "GetAccountingGroupById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountingGroup"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/142425745224898468"
                  },
                  "data": {
                    "type": "AccountingGroup",
                    "id": "142425745224898468",
                    "attributes": {
                      "accountingGroupKey": "1310509",
                      "creationTimestamp": "2019-07-16T12:14:31.902Z",
                      "invoiceCurrency": "510",
                      "invoiceCurrencyVat": "1310511",
                      "invoiceLimit": 1310512,
                      "invoicePrefix": "12",
                      "invoicePreset": 1310514,
                      "isActiveIndicator": false,
                      "lastUpdateTimestamp": "2019-07-16T12:14:32.105Z",
                      "name": "name_1518034",
                      "pathBackpaper": "1310515",
                      "setup": "1310516",
                      "shortname": "1310517",
                      "sortOrder": 1310518
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountingGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Accounting Group.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountingGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountingGroup",
                  "id": "${accountingGroupId}",
                  "attributes": {
                    "accountingGroupKey": "1309417",
                    "creationTimestamp": "2026-07-22T18:01:05.000+11:17",
                    "invoiceCurrency": "418",
                    "invoiceCurrencyVat": "1309419",
                    "invoiceLimit": 1309420,
                    "invoicePrefix": "13",
                    "invoicePreset": 1309422,
                    "isActiveIndicator": true,
                    "lastUpdateTimestamp": "2015-01-08T06:29:09.000-07:26",
                    "name": "name_1517982",
                    "pathBackpaper": "1309423",
                    "setup": "1309424",
                    "shortname": "1309425",
                    "sortOrder": 1309426
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountingGroupRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountingGroup"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Accounting Group\nNote: This is only allowed if Accounting Group is in DRAFT status\n",
        "operationId": "DeleteAccountingGroup",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountingGroup"
      },
      "parameters": [
        {
          "name": "accountingGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountingGroup/{accountingGroupId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountingGroup Resource",
        "operationId": "ActivateAccountingGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountingGroupActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountingGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountingGroup/{accountingGroupId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountingGroup Resource",
        "operationId": "DeactivateAccountingGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountingGroupActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountingGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountApnGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 13,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountApnGroup",
                      "id": "134539391463856052",
                      "attributes": {
                        "isDefaultIndicator": true,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/134539391447078835"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "134539391447078835"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountApnGroup",
                      "id": "138852889522083268",
                      "attributes": {
                        "isDefaultIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/138852889513694659"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "138852889513694659"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountApnGroup",
                      "id": "138853036180116934",
                      "attributes": {
                        "isDefaultIndicator": true,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/138853036180116933"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "138853036180116933"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountApnGroup",
                      "id": "138853125225190856",
                      "attributes": {
                        "isDefaultIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/138853125216802247"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "138853125216802247"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountApnGroup",
                      "id": "139485563244779361",
                      "attributes": {
                        "isDefaultIndicator": false,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139485550804473688"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139485550804473688"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/139485561265067871"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "139485561265067871"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountApnGroup",
                      "id": "139486328269051766",
                      "attributes": {
                        "isDefaultIndicator": false,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139486305913411437"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139486305913411437"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/139486326893320052"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "139486326893320052"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountApnGroup",
                      "id": "139487413318719377",
                      "attributes": {
                        "isDefaultIndicator": false,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139487395669088136"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139487395669088136"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/139487408822425487"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "139487408822425487"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountApnGroup",
                      "id": "139582568201721787",
                      "attributes": {
                        "isDefaultIndicator": true,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139568882254878619"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139568882254878619"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/139582568184944570"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "139582568184944570"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountApnGroup",
                      "id": "139639531967092676",
                      "attributes": {
                        "isDefaultIndicator": false,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/139639531958704067"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "139639531958704067"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountApnGroup",
                      "id": "140220569772627947",
                      "attributes": {
                        "isDefaultIndicator": true,
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/140216478145189856"
                          },
                          "data": {
                            "type": "Account",
                            "id": "140216478145189856"
                          }
                        },
                        "billingProfileApnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/140220569764239338"
                          },
                          "data": {
                            "type": "BillingProfileApnGroup",
                            "id": "140220569764239338"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountApnGroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Apn Groups using query parameter filter criteria.",
        "operationId": "GetAccountApnGroup",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountApnGroup"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountApnGroup/142425985936005115"
                  },
                  "data": {
                    "type": "AccountApnGroup",
                    "id": "142425985936005115",
                    "attributes": {
                      "isDefaultIndicator": false,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileApnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                        },
                        "data": {
                          "type": "BillingProfileApnGroup",
                          "id": "142425734059661208"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Apn Group.",
        "operationId": "CreateAccountApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountApnGroup",
                  "attributes": {
                    "isDefaultIndicator": true,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileApnGroup": {
                      "data": {
                        "type": "BillingProfileApnGroup",
                        "id": "${billingProfileApnGroupId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountApnGroupRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountApnGroup"
      },
      "x-annotation-common.entity": "AccountApnGroup"
    },
    "/accountApnGroup/create": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountApnGroupOperationResultResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create with ApnGroup (and others elements).",
        "operationId": "Create with ApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountApnGroupOperation",
                  "id": "${accountApnGroupOperationId}",
                  "attributes": {
                    "isDefaultIndicator": true,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "apnGroup": {
                      "data": {
                        "type": "ApnGroup",
                        "id": "${apnGroupId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountApnGroupOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/accountApnGroup/{accountApnGroupId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountApnGroup/142425735863211930"
                  },
                  "data": {
                    "type": "AccountApnGroup",
                    "id": "142425735863211930",
                    "attributes": {
                      "isDefaultIndicator": false,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileApnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                        },
                        "data": {
                          "type": "BillingProfileApnGroup",
                          "id": "142425734059661208"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountApnGroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Apn Group by accountApnGroupId URL path parameter.",
        "operationId": "GetAccountApnGroupById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountApnGroup"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountApnGroup/142425735863211930"
                  },
                  "data": {
                    "type": "AccountApnGroup",
                    "id": "142425735863211930",
                    "attributes": {
                      "isDefaultIndicator": false,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileApnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                        },
                        "data": {
                          "type": "BillingProfileApnGroup",
                          "id": "142425734059661208"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Apn Group.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountApnGroup",
                  "id": "${accountApnGroupId}",
                  "attributes": {
                    "isDefaultIndicator": true,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileApnGroup": {
                      "data": {
                        "type": "BillingProfileApnGroup",
                        "id": "${billingProfileApnGroupId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountApnGroupRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountApnGroup"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Apn Group\nNote: This is only allowed if Account Apn Group is in DRAFT status\n",
        "operationId": "DeleteAccountApnGroup",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountApnGroup"
      },
      "parameters": [
        {
          "name": "accountApnGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountApnGroup/{accountApnGroupId}/default": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Set Default Operation",
        "operationId": "Set Default Operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ApnGroupSetDefaultOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountApnGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountApnGroup/{accountApnGroupId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountApnGroup/142425735863211930"
                  },
                  "data": {
                    "type": "AccountApnGroup",
                    "id": "142425735863211930",
                    "attributes": {
                      "isDefaultIndicator": false,
                      "status": "ACTIVE"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileApnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                        },
                        "data": {
                          "type": "BillingProfileApnGroup",
                          "id": "142425734059661208"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountApnGroup Resource",
        "operationId": "ActivateAccountApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountApnGroupActivateOperation",
                  "id": "${accountApnGroupId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountApnGroup",
                        "id": "${accountApnGroupId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountApnGroupActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountApnGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountApnGroup/{accountApnGroupId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountApnGroup/142425735863211930"
                  },
                  "data": {
                    "type": "AccountApnGroup",
                    "id": "142425735863211930",
                    "attributes": {
                      "isDefaultIndicator": false,
                      "status": "INACTIVE"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileApnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                        },
                        "data": {
                          "type": "BillingProfileApnGroup",
                          "id": "142425734059661208"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountApnGroup Resource",
        "operationId": "DeactivateAccountApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountApnGroupActivateOperation",
                  "id": "${accountApnGroupId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountApnGroup",
                        "id": "${accountApnGroupId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountApnGroupActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountApnGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSimSalesProduct": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountSimSalesProduct",
                      "id": "142425906806265823",
                      "attributes": {
                        "accountPrice": 1516,
                        "isDefaultIndicator": true,
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                          },
                          "data": {
                            "type": "Account",
                            "id": "142425726132426641"
                          }
                        },
                        "billingProfileSimSalesProduct": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSimSalesProduct/142425807418038204"
                          },
                          "data": {
                            "type": "BillingProfileSimSalesProduct",
                            "id": "142425807418038204"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Sim Sales Products using query parameter filter criteria.",
        "operationId": "GetAccountSimSalesProduct",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountSimSalesProduct"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountSimSalesProduct/142425906806265823"
                  },
                  "data": {
                    "type": "AccountSimSalesProduct",
                    "id": "142425906806265823",
                    "attributes": {
                      "accountPrice": 1515,
                      "isDefaultIndicator": true,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileSimSalesProduct": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSimSalesProduct/142425807418038204"
                        },
                        "data": {
                          "type": "BillingProfileSimSalesProduct",
                          "id": "142425807418038204"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Sim Sales Product.",
        "operationId": "CreateAccountSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSimSalesProduct",
                  "attributes": {
                    "accountPrice": 123,
                    "isDefaultIndicator": true,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileSimSalesProduct": {
                      "data": {
                        "type": "BillingProfileSimSalesProduct",
                        "id": "${billingProfileSimSalesProductId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSimSalesProductRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountSimSalesProduct"
      },
      "x-annotation-common.entity": "AccountSimSalesProduct"
    },
    "/accountSimSalesProduct/create": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductOperationResultResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create Account Sim Sales Product (and others elements).",
        "operationId": "Create Account Sim Sales Product",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSimSalesProductOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/accountSimSalesProduct/billingProfile/template": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Creater Billing Profile template (and other elements)",
        "operationId": "Creater Billing Profile template",
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfile"
      },
      "x-annotation-common.entity": "BillingProfile"
    },
    "/accountSimSalesProduct/{accountSimSalesProductId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountSimSalesProduct/142425906806265823"
                  },
                  "data": {
                    "type": "AccountSimSalesProduct",
                    "id": "142425906806265823",
                    "attributes": {
                      "accountPrice": 1516,
                      "isDefaultIndicator": true,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileSimSalesProduct": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSimSalesProduct/142425807418038204"
                        },
                        "data": {
                          "type": "BillingProfileSimSalesProduct",
                          "id": "142425807418038204"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Sim Sales Product by accountSimSalesProductId URL path parameter.",
        "operationId": "GetAccountSimSalesProductById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountSimSalesProduct"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountSimSalesProduct/142425906806265823"
                  },
                  "data": {
                    "type": "AccountSimSalesProduct",
                    "id": "142425906806265823",
                    "attributes": {
                      "accountPrice": 1516,
                      "isDefaultIndicator": true,
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "billingProfileSimSalesProduct": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSimSalesProduct/142425807418038204"
                        },
                        "data": {
                          "type": "BillingProfileSimSalesProduct",
                          "id": "142425807418038204"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Sim Sales Product.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSimSalesProduct",
                  "id": "${accountSimSalesProductId}",
                  "attributes": {
                    "accountPrice": 123,
                    "isDefaultIndicator": false,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileSimSalesProduct": {
                      "data": {
                        "type": "BillingProfileSimSalesProduct",
                        "id": "${billingProfileSimSalesProductId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSimSalesProductRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountSimSalesProduct"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Sim Sales Product\nNote: This is only allowed if Account Sim Sales Product is in DRAFT status\n",
        "operationId": "DeleteAccountSimSalesProduct",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountSimSalesProduct"
      },
      "parameters": [
        {
          "name": "accountSimSalesProductId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSimSalesProduct/{accountSimSalesProductId}/default": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Set Default Operation",
        "operationId": "Set Default Operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SimSalesProductSetDefaultOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountSimSalesProductId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSimSalesProduct/{accountSimSalesProductId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountSimSalesProduct Resource",
        "operationId": "ActivateAccountSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSimSalesProductActivateOperation",
                  "id": "${accountSimSalesProductId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountSimSalesProduct",
                        "id": "${accountSimSalesProductId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSimSalesProductActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountSimSalesProductId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSimSalesProduct/{accountSimSalesProductId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountSimSalesProduct Resource",
        "operationId": "DeactivateAccountSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSimSalesProductActivateOperation",
                  "id": "${accountSimSalesProductId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountSimSalesProduct",
                        "id": "${accountSimSalesProductId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSimSalesProductActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountSimSalesProductId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSubscriptionItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 12,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "138889693449164235",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": false,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-STATIC"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/138889693440775626"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "138889693440775626"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "138890703320126940",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": false,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-INDIVIDUAL"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/138890703320126939"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "138890703320126939"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "138896244129928674",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": false,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/138896244121540065"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "138896244121540065"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "138995900834911767",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": true,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/138995900826523158"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "138995900826523158"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "138995902151923226",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": false,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/138995902151923225"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "138995902151923225"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "139581968458192809",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": true,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139568882254878619"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139568882254878619"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/139581968433026984"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "139581968433026984"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "139582059927574445",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": false,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/139568882254878619"
                          },
                          "data": {
                            "type": "Account",
                            "id": "139568882254878619"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/139582059919185836"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "139582059919185836"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "140229522078307328",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": true,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/140216478145189856"
                          },
                          "data": {
                            "type": "Account",
                            "id": "140216478145189856"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/140229522061531135"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "140229522061531135"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "141536138262221876",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": false,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/141536138253833267"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "141536138253833267"
                          }
                        }
                      }
                    },
                    {
                      "type": "AccountSubscriptionItem",
                      "id": "141537146036032574",
                      "attributes": {
                        "isBasePriceplanIndicator": false,
                        "isDefaultIndicator": false,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "billingProfileSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/141537146027643965"
                          },
                          "data": {
                            "type": "BillingProfileSubscriptionItem",
                            "id": "141537146027643965"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Subscription Items using query parameter filter criteria.",
        "operationId": "GetAccountSubscriptionItem",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountSubscriptionItem"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Subscription Item.",
        "operationId": "CreateAccountSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSubscriptionItem",
                  "attributes": {
                    "isBasePriceplanIndicator": true,
                    "isDefaultIndicator": false,
                    "status": "DRAFT",
                    "subscriptionItemType": "PRICEPLAN-PREPAID-FLEX"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileSubscriptionItem": {
                      "data": {
                        "type": "BillingProfileSubscriptionItem",
                        "id": "${billingProfileSubscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSubscriptionItemRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountSubscriptionItem"
      },
      "x-annotation-common.entity": "AccountSubscriptionItem"
    },
    "/accountSubscriptionItem/create": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemOperationResultResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create SubscriptionItem (and others elements).",
        "operationId": "Create SubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSubscriptionItemOperation",
                  "id": "${accountSubscriptionItemOperationId}",
                  "attributes": {
                    "customName": "1670667",
                    "recuringFee": 1670668,
                    "onOffFee": 1670669,
                    "accountSubscriptionItemIsDefault": true,
                    "accountSubscriptionItemBasePricePlanIndicator": false,
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "subscriptionItem": {
                      "data": {
                        "type": "SubscriptionItem",
                        "id": "${subscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSubscriptionItemOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/accountSubscriptionItem/{accountSubscriptionItemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Subscription Item by accountSubscriptionItemId URL path parameter.",
        "operationId": "GetAccountSubscriptionItemById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountSubscriptionItem"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Subscription Item.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSubscriptionItem",
                  "id": "${accountSubscriptionItemId}",
                  "attributes": {
                    "isBasePriceplanIndicator": false,
                    "isDefaultIndicator": true,
                    "status": "DRAFT",
                    "subscriptionItemType": "PRICEPLAN-POSTPAID-STATIC"
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfileSubscriptionItem": {
                      "data": {
                        "type": "BillingProfileSubscriptionItem",
                        "id": "${billingProfileSubscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSubscriptionItemRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountSubscriptionItem"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Subscription Item\nNote: This is only allowed if Account Subscription Item is in DRAFT status\n",
        "operationId": "DeleteAccountSubscriptionItem",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountSubscriptionItem"
      },
      "parameters": [
        {
          "name": "accountSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSubscriptionItem/{accountSubscriptionItemId}/default": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Set Default Operation",
        "operationId": "Set Default Operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItemSetDefaultOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSubscriptionItem/{accountSubscriptionItemId}/unDefault": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Remove Default Operation",
        "operationId": "Remove Default Operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItemSetDefaultOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSubscriptionItem/{accountSubscriptionItemId}/counters/activeSubscriptions": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemCountersResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "GET_accountSubscriptionItem-accountSubscriptionItemId-counters-activeSubscriptions",
        "parameters": [
          {
            "name": "billingCycleTimestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "accountSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSubscriptionItem/{accountSubscriptionItemId}/counters/subscriptions": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemCountersResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "GET_accountSubscriptionItem-accountSubscriptionItemId-counters-subscriptions",
        "parameters": [
          {
            "name": "billingCycleTimestamp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "accountSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSubscriptionItem/{accountSubscriptionItemId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountSubscriptionItem Resource",
        "operationId": "ActivateAccountSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSubscriptionItemActivateOperation",
                  "id": "${accountSubscriptionItemId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountSubscriptionItem",
                        "id": "${accountSubscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSubscriptionItemActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSubscriptionItem/{accountSubscriptionItemId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountSubscriptionItem Resource",
        "operationId": "DeactivateAccountSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountSubscriptionItemActivateOperation",
                  "id": "${accountSubscriptionItemId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountSubscriptionItem",
                        "id": "${accountSubscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountSubscriptionItemActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountNote": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNoteArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Notes using query parameter filter criteria.",
        "operationId": "GetAccountNote",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountNote"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNoteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Note.",
        "operationId": "CreateAccountNote",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountNoteRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountNote"
      },
      "x-annotation-common.entity": "AccountNote"
    },
    "/accountNote/{accountNoteId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNoteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Note by accountNoteId URL path parameter.",
        "operationId": "GetAccountNoteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountNote"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNoteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Note.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountNote",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountNoteRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountNote"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Note\nNote: This is only allowed if Account Note is in DRAFT status\n",
        "operationId": "DeleteAccountNote",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountNote"
      },
      "parameters": [
        {
          "name": "accountNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountNote/{accountNoteId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNoteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountNote Resource",
        "operationId": "ActivateAccountNote",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountNoteActivateOperation",
                  "id": "${accountNoteId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountNote",
                        "id": "${accountNoteId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountNoteActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountNote/{accountNoteId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNoteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountNote Resource",
        "operationId": "DeactivateAccountNote",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountNoteActivateOperation",
                  "id": "${accountNoteId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountNote",
                        "id": "${accountNoteId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountNoteActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountNoteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/simSalesProduct": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "SimSalesProduct",
                      "id": "142425751281473447",
                      "attributes": {
                        "detailId": 1310525,
                        "status": "DRAFT"
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SimSalesProductArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Sim Sales Products using query parameter filter criteria.",
        "operationId": "GetSimSalesProduct",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSimSalesProduct"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/simSalesProduct/142425751281473447"
                  },
                  "data": {
                    "type": "SimSalesProduct",
                    "id": "142425751281473447",
                    "attributes": {
                      "detailId": 1310521,
                      "status": "DRAFT"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Sim Sales Product.",
        "operationId": "CreateSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "SimSalesProduct",
                  "attributes": {
                    "creationTimestamp": "2010-07-01T00:11:23.000-17:20",
                    "detailId": 1309429,
                    "lastUpdateTimestamp": "2011-09-03T02:05:49.000-14:51",
                    "status": "DRAFT"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/SimSalesProductRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifySimSalesProduct"
      },
      "x-annotation-common.entity": "SimSalesProduct"
    },
    "/simSalesProduct/{simSalesProductId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/simSalesProduct/142425751281473447"
                  },
                  "data": {
                    "type": "SimSalesProduct",
                    "id": "142425751281473447",
                    "attributes": {
                      "detailId": 1310525,
                      "status": "DRAFT"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SimSalesProductResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Sim Sales Product by simSalesProductId URL path parameter.",
        "operationId": "GetSimSalesProductById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSimSalesProduct"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/simSalesProduct/142425751281473447"
                  },
                  "data": {
                    "type": "SimSalesProduct",
                    "id": "142425751281473447",
                    "attributes": {
                      "detailId": 1310525,
                      "status": "DRAFT"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Sim Sales Product.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifySimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "SimSalesProduct",
                  "id": "${simSalesProductId}",
                  "attributes": {
                    "creationTimestamp": "2020-02-14T11:06:55.000+00:12",
                    "detailId": 1309433,
                    "lastUpdateTimestamp": "2013-02-05T03:05:29.000-11:54",
                    "status": "DRAFT"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/SimSalesProductRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifySimSalesProduct"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Sim Sales Product\nNote: This is only allowed if Sim Sales Product is in DRAFT status\n",
        "operationId": "DeleteSimSalesProduct",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifySimSalesProduct"
      },
      "parameters": [
        {
          "name": "simSalesProductId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contracts using query parameter filter criteria.",
        "operationId": "GetContract",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContract"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Contract.",
        "operationId": "CreateContract",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContract"
      },
      "x-annotation-common.entity": "Contract"
    },
    "/contract/{contractId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract by contractId URL path parameter.",
        "operationId": "GetContractById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContract"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Contract.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyContract",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContract"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Contract\nNote: This is only allowed if Contract is in DRAFT status\n",
        "operationId": "DeleteContract",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContract"
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/approved": {
      "patch": {
        "responses": {
          "200": {
            "description": "Status change request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change Contract Status for approved",
        "operationId": "Change Contract Status for approved",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeContractLifecycleStatusOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/draft": {
      "patch": {
        "responses": {
          "200": {
            "description": "Status change request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change Contract Status for draft",
        "operationId": "Change Contract Status for draft",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeContractLifecycleStatusOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/expired": {
      "patch": {
        "responses": {
          "200": {
            "description": "Status change request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change Contract Status for expired",
        "operationId": "Change Contract Status for expired",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeContractLifecycleStatusOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/forApproval": {
      "patch": {
        "responses": {
          "200": {
            "description": "Status change request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change Contract Status for forApproval",
        "operationId": "Change Contract Status for forApproval",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeContractLifecycleStatusOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/rejected": {
      "patch": {
        "responses": {
          "200": {
            "description": "Status change request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change Contract Status for rejected",
        "operationId": "Change Contract Status for rejected",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeContractLifecycleStatusOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/assignNetworkEntitlement": {
      "post": {
        "responses": {
          "200": {
            "description": "Assign Contract Network Entitlement requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Assign Contract Network Entitlement",
        "operationId": "Assign Contract Network Entitlement",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractAssignNetworkEntitlementOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/unassignNetworkEntitlement": {
      "post": {
        "responses": {
          "200": {
            "description": "Assign Contract Network Entitlement requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Assign Contract Network Entitlement",
        "operationId": "Assign Contract Network Entitlement",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractUnAssignNetworkEntitlementOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/copyNetworkEntitlement": {
      "post": {
        "responses": {
          "200": {
            "description": "Assign Contract Network Entitlement requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Assign Contract Network Entitlement",
        "operationId": "Assign Contract Network Entitlement",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractCopyNetworkEntitlementOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/difference": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractDifferenceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract difference by contractId URL path parameter.",
        "operationId": "Find Contract difference by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContract"
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contract/{contractId}/synchronize": {
      "post": {
        "responses": {
          "200": {
            "description": "Synchronized contract successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Synchronize contract",
        "operationId": "Synchronize contract",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "contractId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/resellerProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResellerProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Reseller Profiles using query parameter filter criteria.",
        "operationId": "GetResellerProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readResellerProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResellerProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Reseller Profile.",
        "operationId": "CreateResellerProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ResellerProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyResellerProfile"
      },
      "x-annotation-common.entity": "ResellerProfile"
    },
    "/resellerProfile/{resellerProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResellerProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Reseller Profile by resellerProfileId URL path parameter.",
        "operationId": "GetResellerProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readResellerProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResellerProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Reseller Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyResellerProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ResellerProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyResellerProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Reseller Profile\nNote: This is only allowed if Reseller Profile is in DRAFT status\n",
        "operationId": "DeleteResellerProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyResellerProfile"
      },
      "parameters": [
        {
          "name": "resellerProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/commitmentTier": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitmentTierArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CommitmentTiers using query parameter filter criteria.",
        "operationId": "GetCommitmentTier",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCommitmentTier"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitmentTierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new CommitmentTier.",
        "operationId": "CreateCommitmentTier",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CommitmentTierRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCommitmentTier"
      },
      "x-annotation-common.entity": "CommitmentTier"
    },
    "/commitmentTier/{commitmentTierId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitmentTierResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CommitmentTier by commitmentTierId URL path parameter.",
        "operationId": "GetCommitmentTierById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCommitmentTier"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitmentTierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify CommitmentTier.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyCommitmentTier",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CommitmentTierRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCommitmentTier"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing CommitmentTier\nNote: This is only allowed if CommitmentTier is in DRAFT status\n",
        "operationId": "DeleteCommitmentTier",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCommitmentTier"
      },
      "parameters": [
        {
          "name": "commitmentTierId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contractApnGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractApnGroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Apn Groups using query parameter filter criteria.",
        "operationId": "GetContractApnGroup",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContractApnGroup"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Contract Apn Group.",
        "operationId": "CreateContractApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractApnGroupRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContractApnGroup"
      },
      "x-annotation-common.entity": "ContractApnGroup"
    },
    "/contractApnGroup/{contractApnGroupId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractApnGroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Apn Group by contractApnGroupId URL path parameter.",
        "operationId": "GetContractApnGroupById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContractApnGroup"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Contract Apn Group.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyContractApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractApnGroupRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContractApnGroup"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Contract Apn Group\nNote: This is only allowed if Contract Apn Group is in DRAFT status\n",
        "operationId": "DeleteContractApnGroup",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContractApnGroup"
      },
      "parameters": [
        {
          "name": "contractApnGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contractRoamingProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractRoamingProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Roaming Profiles using query parameter filter criteria.",
        "operationId": "GetContractRoamingProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContractRoamingProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Contract Roaming Profile.",
        "operationId": "CreateContractRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRoamingProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContractRoamingProfile"
      },
      "x-annotation-common.entity": "ContractRoamingProfile"
    },
    "/contractRoamingProfile/{contractRoamingProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractRoamingProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Roaming Profile by contractRoamingProfileId URL path parameter.",
        "operationId": "GetContractRoamingProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContractRoamingProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Contract Roaming Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyContractRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRoamingProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContractRoamingProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Contract Roaming Profile\nNote: This is only allowed if Contract Roaming Profile is in DRAFT status\n",
        "operationId": "DeleteContractRoamingProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContractRoamingProfile"
      },
      "parameters": [
        {
          "name": "contractRoamingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contractServiceProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractServiceProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Service Profiles using query parameter filter criteria.",
        "operationId": "GetContractServiceProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContractServiceProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Contract Service Profile.",
        "operationId": "CreateContractServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractServiceProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContractServiceProfile"
      },
      "x-annotation-common.entity": "ContractServiceProfile"
    },
    "/contractServiceProfile/{contractServiceProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractServiceProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Service Profile by contractServiceProfileId URL path parameter.",
        "operationId": "GetContractServiceProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContractServiceProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Contract Service Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyContractServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractServiceProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContractServiceProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Contract Service Profile\nNote: This is only allowed if Contract Service Profile is in DRAFT status\n",
        "operationId": "DeleteContractServiceProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContractServiceProfile"
      },
      "parameters": [
        {
          "name": "contractServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contractSecurityProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSecurityProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Security Profiles using query parameter filter criteria.",
        "operationId": "GetContractSecurityProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContractSecurityProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Contract Security Profile.",
        "operationId": "CreateContractSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractSecurityProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContractSecurityProfile"
      },
      "x-annotation-common.entity": "ContractSecurityProfile"
    },
    "/contractSecurityProfile/{contractSecurityProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSecurityProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Security Profile by contractSecurityProfileId URL path parameter.",
        "operationId": "GetContractSecurityProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContractSecurityProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Contract Security Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyContractSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractSecurityProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContractSecurityProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Contract Security Profile\nNote: This is only allowed if Contract Security Profile is in DRAFT status\n",
        "operationId": "DeleteContractSecurityProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContractSecurityProfile"
      },
      "parameters": [
        {
          "name": "contractSecurityProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contractSimSalesProduct": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSimSalesProductArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Sim Sales Products using query parameter filter criteria.",
        "operationId": "GetContractSimSalesProduct",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContractSimSalesProduct"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Contract Sim Sales Product.",
        "operationId": "CreateContractSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractSimSalesProductRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContractSimSalesProduct"
      },
      "x-annotation-common.entity": "ContractSimSalesProduct"
    },
    "/contractSimSalesProduct/{contractSimSalesProductId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSimSalesProductResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Sim Sales Product by contractSimSalesProductId URL path parameter.",
        "operationId": "GetContractSimSalesProductById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContractSimSalesProduct"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Contract Sim Sales Product.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyContractSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractSimSalesProductRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContractSimSalesProduct"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Contract Sim Sales Product\nNote: This is only allowed if Contract Sim Sales Product is in DRAFT status\n",
        "operationId": "DeleteContractSimSalesProduct",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContractSimSalesProduct"
      },
      "parameters": [
        {
          "name": "contractSimSalesProductId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contractSubscriptionItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSubscriptionItemArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Subscription Items using query parameter filter criteria.",
        "operationId": "GetContractSubscriptionItem",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContractSubscriptionItem"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Contract Subscription Item.",
        "operationId": "CreateContractSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractSubscriptionItemRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyContractSubscriptionItem"
      },
      "x-annotation-common.entity": "ContractSubscriptionItem"
    },
    "/contractSubscriptionItem/{contractSubscriptionItemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSubscriptionItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Subscription Item by contractSubscriptionItemId URL path parameter.",
        "operationId": "GetContractSubscriptionItemById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContractSubscriptionItem"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Contract Subscription Item.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyContractSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractSubscriptionItemRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyContractSubscriptionItem"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Contract Subscription Item\nNote: This is only allowed if Contract Subscription Item is in DRAFT status\n",
        "operationId": "DeleteContractSubscriptionItem",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyContractSubscriptionItem"
      },
      "parameters": [
        {
          "name": "contractSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/discountTier": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountTierArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Discount Tiers using query parameter filter criteria.",
        "operationId": "GetDiscountTier",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readDiscountTier"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountTierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Discount Tier.",
        "operationId": "CreateDiscountTier",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountTierRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyDiscountTier"
      },
      "x-annotation-common.entity": "DiscountTier"
    },
    "/discountTier/{discountTierId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountTierResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Discount Tier by discountTierId URL path parameter.",
        "operationId": "GetDiscountTierById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readDiscountTier"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountTierResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Discount Tier.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyDiscountTier",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountTierRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyDiscountTier"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Discount Tier\nNote: This is only allowed if Discount Tier is in DRAFT status\n",
        "operationId": "DeleteDiscountTier",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyDiscountTier"
      },
      "parameters": [
        {
          "name": "discountTierId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/sftpProperties": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpPropertiesArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Sftp Properties using query parameter filter criteria.",
        "operationId": "GetSftpProperties",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSftpProperties"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpPropertiesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Sftp Properties.",
        "operationId": "CreateSftpProperties",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SftpPropertiesRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifySftpProperties"
      },
      "x-annotation-common.entity": "SftpProperties"
    },
    "/sftpProperties/{sftpPropertiesId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpPropertiesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Sftp Properties by sftpPropertiesId URL path parameter.",
        "operationId": "GetSftpPropertiesById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSftpProperties"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SftpPropertiesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Sftp Properties.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifySftpProperties",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SftpPropertiesRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifySftpProperties"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Sftp Properties\nNote: This is only allowed if Sftp Properties is in DRAFT status\n",
        "operationId": "DeleteSftpProperties",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifySftpProperties"
      },
      "parameters": [
        {
          "name": "sftpPropertiesId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountDiscount": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDiscountArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Discounts using query parameter filter criteria.",
        "operationId": "GetAccountDiscount",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountDiscount"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDiscountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Discount.",
        "operationId": "CreateAccountDiscount",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDiscountRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountDiscount"
      },
      "x-annotation-common.entity": "AccountDiscount"
    },
    "/accountDiscount/{accountDiscountId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDiscountResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Discount by accountDiscountId URL path parameter.",
        "operationId": "GetAccountDiscountById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountDiscount"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDiscountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Discount.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountDiscount",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDiscountRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountDiscount"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Discount\nNote: This is only allowed if Account Discount is in DRAFT status\n",
        "operationId": "DeleteAccountDiscount",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountDiscount"
      },
      "parameters": [
        {
          "name": "accountDiscountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountCommitment": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCommitmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Commitments using query parameter filter criteria.",
        "operationId": "GetAccountCommitment",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountCommitment"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCommitmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Commitment.",
        "operationId": "CreateAccountCommitment",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCommitmentRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountCommitment"
      },
      "x-annotation-common.entity": "AccountCommitment"
    },
    "/accountCommitment/{accountCommitmentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCommitmentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Commitment by accountCommitmentId URL path parameter.",
        "operationId": "GetAccountCommitmentById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountCommitment"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCommitmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Commitment.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountCommitment",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCommitmentRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountCommitment"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Commitment\nNote: This is only allowed if Account Commitment is in DRAFT status\n",
        "operationId": "DeleteAccountCommitment",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountCommitment"
      },
      "parameters": [
        {
          "name": "accountCommitmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/simCommitment": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SimCommitmentArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Sim Commitments using query parameter filter criteria.",
        "operationId": "GetSimCommitment",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSimCommitment"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SimCommitmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Sim Commitment.",
        "operationId": "CreateSimCommitment",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SimCommitmentRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifySimCommitment"
      },
      "x-annotation-common.entity": "SimCommitment"
    },
    "/simCommitment/{simCommitmentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SimCommitmentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Sim Commitment by simCommitmentId URL path parameter.",
        "operationId": "GetSimCommitmentById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSimCommitment"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SimCommitmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Sim Commitment.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifySimCommitment",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SimCommitmentRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifySimCommitment"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Sim Commitment\nNote: This is only allowed if Sim Commitment is in DRAFT status\n",
        "operationId": "DeleteSimCommitment",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifySimCommitment"
      },
      "parameters": [
        {
          "name": "simCommitmentId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/remoteStorage": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteStorageArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Remote Storages using query parameter filter criteria.",
        "operationId": "GetRemoteStorage",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readRemoteStorage"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteStorageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Remote Storage.",
        "operationId": "CreateRemoteStorage",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteStorageRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyRemoteStorage"
      },
      "x-annotation-common.entity": "RemoteStorage"
    },
    "/remoteStorage/{remoteStorageId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteStorageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Remote Storage by remoteStorageId URL path parameter.",
        "operationId": "GetRemoteStorageById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readRemoteStorage"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteStorageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Remote Storage.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyRemoteStorage",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteStorageRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyRemoteStorage"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Remote Storage\nNote: This is only allowed if Remote Storage is in DRAFT status\n",
        "operationId": "DeleteRemoteStorage",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyRemoteStorage"
      },
      "parameters": [
        {
          "name": "remoteStorageId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/remoteStorage/{remoteStorageId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteStorageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate RemoteStorage Resource",
        "operationId": "ActivateRemoteStorage",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteStorageActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "remoteStorageId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/remoteStorage/{remoteStorageId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteStorageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate RemoteStorage Resource",
        "operationId": "DeactivateRemoteStorage",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteStorageActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "remoteStorageId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contractChargeCodeDetail": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractChargeCodeDetailArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Charge Code Details using query parameter filter criteria.",
        "operationId": "GetContractChargeCodeDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContractChargeCodeDetail"
      },
      "x-annotation-common.entity": "ContractChargeCodeDetail"
    },
    "/contractChargeCodeDetail/{contractChargeCodeDetailId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractChargeCodeDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Charge Code Detail by contractChargeCodeDetailId URL path parameter.",
        "operationId": "GetContractChargeCodeDetailById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContractChargeCodeDetail"
      },
      "parameters": [
        {
          "name": "contractChargeCodeDetailId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contractChargeTypeDetail": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractChargeTypeDetailArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Charge Type Details using query parameter filter criteria.",
        "operationId": "GetContractChargeTypeDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readContractChargeTypeDetail"
      },
      "x-annotation-common.entity": "ContractChargeTypeDetail"
    },
    "/contractChargeTypeDetail/{contractChargeTypeDetailId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractChargeTypeDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Contract Charge Type Detail by contractChargeTypeDetailId URL path parameter.",
        "operationId": "GetContractChargeTypeDetailById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readContractChargeTypeDetail"
      },
      "parameters": [
        {
          "name": "contractChargeTypeDetailId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountReport": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountReport",
                      "id": "142425914884495330",
                      "attributes": {
                        "outputFormat": "CSV",
                        "sequenceNbr": 1310875
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                          },
                          "data": {
                            "type": "Account",
                            "id": "142425726132426641"
                          }
                        },
                        "report": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/report/142424202618607493"
                          },
                          "data": {
                            "type": "Report",
                            "id": "142424202618607493"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Reports using query parameter filter criteria.",
        "operationId": "GetAccountReport",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountReport"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReport/142425914884495330"
                  },
                  "data": {
                    "type": "AccountReport",
                    "id": "142425914884495330",
                    "attributes": {
                      "outputFormat": "CSV",
                      "sequenceNbr": 1310868
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "report": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/report/142424202618607493"
                        },
                        "data": {
                          "type": "Report",
                          "id": "142424202618607493"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Report.",
        "operationId": "CreateAccountReport",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReport",
                  "attributes": {
                    "outputFormat": "CSV",
                    "sequenceNbr": 1310311
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "report": {
                      "data": {
                        "type": "Report",
                        "id": "${reportId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountReport"
      },
      "x-annotation-common.entity": "AccountReport"
    },
    "/accountReport/{accountReportId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReport/142425914884495330"
                  },
                  "data": {
                    "type": "AccountReport",
                    "id": "142425914884495330",
                    "attributes": {
                      "outputFormat": "CSV",
                      "sequenceNbr": 1310875
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "report": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/report/142424202618607493"
                        },
                        "data": {
                          "type": "Report",
                          "id": "142424202618607493"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Report by accountReportId URL path parameter.",
        "operationId": "GetAccountReportById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountReport"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReport/142425914884495330"
                  },
                  "data": {
                    "type": "AccountReport",
                    "id": "142425914884495330",
                    "attributes": {
                      "outputFormat": "CSV",
                      "sequenceNbr": 1310875
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/142425726132426641"
                        },
                        "data": {
                          "type": "Account",
                          "id": "142425726132426641"
                        }
                      },
                      "report": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/report/142424202618607493"
                        },
                        "data": {
                          "type": "Report",
                          "id": "142424202618607493"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Report.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountReport",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReport",
                  "id": "${accountReportId}",
                  "attributes": {
                    "outputFormat": "PDF",
                    "sequenceNbr": 1310318
                  },
                  "relationships": {
                    "account": {
                      "data": {
                        "type": "Account",
                        "id": "${accountId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "report": {
                      "data": {
                        "type": "Report",
                        "id": "${reportId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountReport"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Report\nNote: This is only allowed if Account Report is in DRAFT status\n",
        "operationId": "DeleteAccountReport",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountReport"
      },
      "parameters": [
        {
          "name": "accountReportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountReportParameterValue": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountReportParameterValue",
                      "id": "142425782847805365",
                      "attributes": {
                        "value": "1310671"
                      },
                      "relationships": {}
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportParameterValueArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Report Parameter Values using query parameter filter criteria.",
        "operationId": "GetAccountReportParameterValue",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountReportParameterValue"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportParameterValue/142425782847805365"
                  },
                  "data": {
                    "type": "AccountReportParameterValue",
                    "id": "142425782847805365",
                    "attributes": {
                      "value": "1310667"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportParameterValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Report Parameter Value.",
        "operationId": "CreateAccountReportParameterValue",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReportParameterValue",
                  "attributes": {
                    "value": "1309437"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportParameterValueRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountReportParameterValue"
      },
      "x-annotation-common.entity": "AccountReportParameterValue"
    },
    "/accountReportParameterValue/{accountReportParameterValueId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportParameterValue/142425782847805365"
                  },
                  "data": {
                    "type": "AccountReportParameterValue",
                    "id": "142425782847805365",
                    "attributes": {
                      "value": "1310671"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportParameterValueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Report Parameter Value by accountReportParameterValueId URL path parameter.",
        "operationId": "GetAccountReportParameterValueById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountReportParameterValue"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportParameterValue/142425782847805365"
                  },
                  "data": {
                    "type": "AccountReportParameterValue",
                    "id": "142425782847805365",
                    "attributes": {
                      "value": "1310671"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportParameterValueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Report Parameter Value.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountReportParameterValue",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReportParameterValue",
                  "id": "${accountReportParameterValueId}",
                  "attributes": {
                    "value": "1309441"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportParameterValueRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountReportParameterValue"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Report Parameter Value\nNote: This is only allowed if Account Report Parameter Value is in DRAFT status\n",
        "operationId": "DeleteAccountReportParameterValue",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountReportParameterValue"
      },
      "parameters": [
        {
          "name": "accountReportParameterValueId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountReportResult": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountReportResult",
                      "id": "142425928406931432",
                      "attributes": {
                        "actualPeriodicityParameters": "{\"name\":\"name_1518051\"}",
                        "lastUpdateTimestamp": "2019-07-16T12:14:53.919Z",
                        "reportContent": {
                          "content": "fileContens="
                        },
                        "reportContentType": "1310917",
                        "reportFilesizeBytes": 1310918,
                        "reportRowcount": 1310919,
                        "status": "FAILED"
                      },
                      "relationships": {
                        "accountReportSchedule": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportSchedule/142425920286758885"
                          },
                          "data": {
                            "type": "AccountReportSchedule",
                            "id": "142425920286758885"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Report Results using query parameter filter criteria.",
        "operationId": "GetAccountReportResult",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountReportResult"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportResult/142425928406931432"
                  },
                  "data": {
                    "type": "AccountReportResult",
                    "id": "142425928406931432",
                    "attributes": {
                      "actualPeriodicityParameters": "{\"name\":\"name_1518050\"}",
                      "lastUpdateTimestamp": "2019-07-16T12:14:53.739Z",
                      "reportContent": {
                        "content": "fileContens="
                      },
                      "reportContentType": "1310912",
                      "reportFilesizeBytes": 1310913,
                      "reportRowcount": 1310914,
                      "status": "FAILED"
                    },
                    "relationships": {
                      "accountReportSchedule": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportSchedule/142425920286758885"
                        },
                        "data": {
                          "type": "AccountReportSchedule",
                          "id": "142425920286758885"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Report Result.",
        "operationId": "CreateAccountReportResult",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReportResult",
                  "attributes": {
                    "actualPeriodicityParameters": "{\"name\":\"name_1518028\"}",
                    "creationTimestamp": "2013-04-05T03:47:17.000-12:06",
                    "lastUpdateTimestamp": "2011-07-02T01:25:31.000-15:30",
                    "reportContent": {
                      "fileName": "file_name_1695907",
                      "content": "fileContent"
                    },
                    "reportContentType": "1310355",
                    "reportFilesizeBytes": 1310356,
                    "reportRowcount": 1310357,
                    "status": "FAILED"
                  },
                  "relationships": {
                    "accountReportSchedule": {
                      "data": {
                        "type": "AccountReportSchedule",
                        "id": "${accountReportScheduleId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportResultRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountReportResult"
      },
      "x-annotation-common.entity": "AccountReportResult"
    },
    "/accountReportResult/{accountReportResultId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportResult/142425928406931432"
                  },
                  "data": {
                    "type": "AccountReportResult",
                    "id": "142425928406931432",
                    "attributes": {
                      "actualPeriodicityParameters": "{\"name\":\"name_1518051\"}",
                      "lastUpdateTimestamp": "2019-07-16T12:14:53.919Z",
                      "reportContent": {
                        "content": "fileContens="
                      },
                      "reportContentType": "1310917",
                      "reportFilesizeBytes": 1310918,
                      "reportRowcount": 1310919,
                      "status": "FAILED"
                    },
                    "relationships": {
                      "accountReportSchedule": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportSchedule/142425920286758885"
                        },
                        "data": {
                          "type": "AccountReportSchedule",
                          "id": "142425920286758885"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Report Result by accountReportResultId URL path parameter.",
        "operationId": "GetAccountReportResultById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountReportResult"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportResult/142425928406931432"
                  },
                  "data": {
                    "type": "AccountReportResult",
                    "id": "142425928406931432",
                    "attributes": {
                      "actualPeriodicityParameters": "{\"name\":\"name_1518051\"}",
                      "lastUpdateTimestamp": "2019-07-16T12:14:53.920Z",
                      "reportContent": {
                        "content": "fileContens="
                      },
                      "reportContentType": "1310917",
                      "reportFilesizeBytes": 1310918,
                      "reportRowcount": 1310919,
                      "status": "FAILED"
                    },
                    "relationships": {
                      "accountReportSchedule": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportSchedule/142425920286758885"
                        },
                        "data": {
                          "type": "AccountReportSchedule",
                          "id": "142425920286758885"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Report Result.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountReportResult",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReportResult",
                  "id": "${accountReportResultId}",
                  "attributes": {
                    "actualPeriodicityParameters": "{\"name\":\"name_1518029\"}",
                    "creationTimestamp": "2020-04-15T12:16:53.000+01:07",
                    "lastUpdateTimestamp": "2019-09-13T10:07:50.000-01:11",
                    "reportContent": {
                      "fileName": "file_name_1695908",
                      "content": "fileContent"
                    },
                    "reportContentType": "1310360",
                    "reportFilesizeBytes": 1310361,
                    "reportRowcount": 1310362,
                    "status": "RUNNING"
                  },
                  "relationships": {
                    "accountReportSchedule": {
                      "data": {
                        "type": "AccountReportSchedule",
                        "id": "${accountReportScheduleId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportResultRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountReportResult"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Report Result\nNote: This is only allowed if Account Report Result is in DRAFT status\n",
        "operationId": "DeleteAccountReportResult",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountReportResult"
      },
      "parameters": [
        {
          "name": "accountReportResultId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountReportResult/{accountReportResultId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountReportResult Resource",
        "operationId": "ActivateAccountReportResult",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReportResultActivateOperation",
                  "id": "${accountReportResultId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountReportResult",
                        "id": "${accountReportResultId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportResultActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountReportResultId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountReportResult/{accountReportResultId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountReportResult Resource",
        "operationId": "DeactivateAccountReportResult",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReportResultActivateOperation",
                  "id": "${accountReportResultId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "AccountReportResult",
                        "id": "${accountReportResultId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportResultActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountReportResultId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountReportSchedule": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AccountReportSchedule",
                      "id": "142425920286758885",
                      "attributes": {
                        "executionPolicy": "1310887",
                        "lastUpdateTimestamp": "2019-07-16T12:14:52.976Z",
                        "periodicityParameters": "1310888"
                      },
                      "relationships": {
                        "accountReport": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountReport/142425914884495330"
                          },
                          "data": {
                            "type": "AccountReport",
                            "id": "142425914884495330"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportScheduleArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Report Schedules using query parameter filter criteria.",
        "operationId": "GetAccountReportSchedule",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountReportSchedule"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportSchedule/142425920286758885"
                  },
                  "data": {
                    "type": "AccountReportSchedule",
                    "id": "142425920286758885",
                    "attributes": {
                      "executionPolicy": "1310882",
                      "lastUpdateTimestamp": "2019-07-16T12:14:52.770Z",
                      "periodicityParameters": "1310883"
                    },
                    "relationships": {
                      "accountReport": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountReport/142425914884495330"
                        },
                        "data": {
                          "type": "AccountReport",
                          "id": "142425914884495330"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportScheduleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Report Schedule.",
        "operationId": "CreateAccountReportSchedule",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReportSchedule",
                  "attributes": {
                    "creationTimestamp": "2015-02-08T06:23:47.000-07:31",
                    "executionPolicy": "1310325",
                    "lastUpdateTimestamp": "2019-08-13T10:54:35.000-00:48",
                    "periodicityParameters": "1310326"
                  },
                  "relationships": {
                    "accountReport": {
                      "data": {
                        "type": "AccountReport",
                        "id": "${accountReportId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportScheduleRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountReportSchedule"
      },
      "x-annotation-common.entity": "AccountReportSchedule"
    },
    "/accountReportSchedule/{accountReportScheduleId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportSchedule/142425920286758885"
                  },
                  "data": {
                    "type": "AccountReportSchedule",
                    "id": "142425920286758885",
                    "attributes": {
                      "executionPolicy": "1310887",
                      "lastUpdateTimestamp": "2019-07-16T12:14:52.976Z",
                      "periodicityParameters": "1310888"
                    },
                    "relationships": {
                      "accountReport": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountReport/142425914884495330"
                        },
                        "data": {
                          "type": "AccountReport",
                          "id": "142425914884495330"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportScheduleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Report Schedule by accountReportScheduleId URL path parameter.",
        "operationId": "GetAccountReportScheduleById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountReportSchedule"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/accountReportSchedule/142425920286758885"
                  },
                  "data": {
                    "type": "AccountReportSchedule",
                    "id": "142425920286758885",
                    "attributes": {
                      "executionPolicy": "1310887",
                      "lastUpdateTimestamp": "2019-07-16T12:14:52.977Z",
                      "periodicityParameters": "1310888"
                    },
                    "relationships": {
                      "accountReport": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountReport/142425914884495330"
                        },
                        "data": {
                          "type": "AccountReport",
                          "id": "142425914884495330"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AccountReportScheduleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Report Schedule.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountReportSchedule",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AccountReportSchedule",
                  "id": "${accountReportScheduleId}",
                  "attributes": {
                    "creationTimestamp": "2015-06-08T06:45:58.000-08:28",
                    "executionPolicy": "1310330",
                    "lastUpdateTimestamp": "2013-03-06T04:45:03.000-11:17",
                    "periodicityParameters": "1310331"
                  },
                  "relationships": {
                    "accountReport": {
                      "data": {
                        "type": "AccountReport",
                        "id": "${accountReportId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AccountReportScheduleRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountReportSchedule"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Report Schedule\nNote: This is only allowed if Account Report Schedule is in DRAFT status\n",
        "operationId": "DeleteAccountReportSchedule",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountReportSchedule"
      },
      "parameters": [
        {
          "name": "accountReportScheduleId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/userReport": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find User Reports using query parameter filter criteria.",
        "operationId": "GetUserReport",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readUserReport"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new User Report.",
        "operationId": "CreateUserReport",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserReportRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyUserReport"
      },
      "x-annotation-common.entity": "UserReport"
    },
    "/userReport/{userReportId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find User Report by userReportId URL path parameter.",
        "operationId": "GetUserReportById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readUserReport"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify User Report.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyUserReport",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UserReportRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyUserReport"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing User Report\nNote: This is only allowed if User Report is in DRAFT status\n",
        "operationId": "DeleteUserReport",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyUserReport"
      },
      "parameters": [
        {
          "name": "userReportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountReportResultConversion": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultConversionArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Report Conversions using query parameter filter criteria.",
        "operationId": "GetAccountReportResultConversion",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountReportResultConversion"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultConversionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Account Report Conversion.",
        "operationId": "CreateAccountReportResultConversion",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountReportResultConversionRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountReportResultConversion"
      },
      "x-annotation-common.entity": "AccountReportResultConversion"
    },
    "/accountReportResultConversion/{accountReportResultConversionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultConversionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Account Report Conversion by accountReportResultConversionId URL path parameter.",
        "operationId": "GetAccountReportResultConversionById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountReportResultConversion"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultConversionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Account Report Conversion.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountReportResultConversion",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountReportResultConversionRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountReportResultConversion"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Account Report Conversion\nNote: This is only allowed if Account Report Conversion is in DRAFT status\n",
        "operationId": "DeleteAccountReportResultConversion",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountReportResultConversion"
      },
      "parameters": [
        {
          "name": "accountReportResultConversionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountReportResultConversion/{accountReportResultConversionId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultConversionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountReportResultConversion Resource",
        "operationId": "ActivateAccountReportResultConversion",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountReportResultConversionActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountReportResultConversionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountReportResultConversion/{accountReportResultConversionId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountReportResultConversionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountReportResultConversion Resource",
        "operationId": "DeactivateAccountReportResultConversion",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountReportResultConversionActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountReportResultConversionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingCycleDefinition": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleDefinitionArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Cycles using query parameter filter criteria.",
        "operationId": "GetBillingCycleDefinition",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingCycleDefinition"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleDefinitionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Cycle.",
        "operationId": "CreateBillingCycleDefinition",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleDefinitionRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingCycleDefinition"
      },
      "x-annotation-common.entity": "BillingCycleDefinition"
    },
    "/billingCycleDefinition/{billingCycleDefinitionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleDefinitionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Cycle by billingCycleDefinitionId URL path parameter.",
        "operationId": "GetBillingCycleDefinitionById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingCycleDefinition"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleDefinitionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Cycle.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingCycleDefinition",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleDefinitionRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingCycleDefinition"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Cycle\nNote: This is only allowed if Billing Cycle is in DRAFT status\n",
        "operationId": "DeleteBillingCycleDefinition",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingCycleDefinition"
      },
      "parameters": [
        {
          "name": "billingCycleDefinitionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingCycleDefinition/{billingCycleDefinitionId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleDefinitionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate BillingCycleDefinition Resource",
        "operationId": "ActivateBillingCycleDefinition",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleDefinitionActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingCycleDefinitionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingCycleDefinition/{billingCycleDefinitionId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleDefinitionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate BillingCycleDefinition Resource",
        "operationId": "DeactivateBillingCycleDefinition",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleDefinitionActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingCycleDefinitionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingCycleInstance": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleInstanceArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Cycle Instances using query parameter filter criteria.",
        "operationId": "GetBillingCycleInstance",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingCycleInstance"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleInstanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Cycle Instance.",
        "operationId": "CreateBillingCycleInstance",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleInstanceRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingCycleInstance"
      },
      "x-annotation-common.entity": "BillingCycleInstance"
    },
    "/billingCycleInstance/{billingCycleInstanceId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Cycle Instance by billingCycleInstanceId URL path parameter.",
        "operationId": "GetBillingCycleInstanceById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingCycleInstance"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleInstanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Cycle Instance.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingCycleInstance",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleInstanceRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingCycleInstance"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Cycle Instance\nNote: This is only allowed if Billing Cycle Instance is in DRAFT status\n",
        "operationId": "DeleteBillingCycleInstance",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingCycleInstance"
      },
      "parameters": [
        {
          "name": "billingCycleInstanceId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingCycleInstanceHistory": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleInstanceHistoryArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Cycle Instance Histories using query parameter filter criteria.",
        "operationId": "GetBillingCycleInstanceHistory",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingCycleInstanceHistory"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleInstanceHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Cycle Instance History.",
        "operationId": "CreateBillingCycleInstanceHistory",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleInstanceHistoryRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingCycleInstanceHistory"
      },
      "x-annotation-common.entity": "BillingCycleInstanceHistory"
    },
    "/billingCycleInstanceHistory/{billingCycleInstanceHistoryId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleInstanceHistoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Cycle Instance History by billingCycleInstanceHistoryId URL path parameter.",
        "operationId": "GetBillingCycleInstanceHistoryById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingCycleInstanceHistory"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCycleInstanceHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Cycle Instance History.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingCycleInstanceHistory",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCycleInstanceHistoryRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingCycleInstanceHistory"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Cycle Instance History\nNote: This is only allowed if Billing Cycle Instance History is in DRAFT status\n",
        "operationId": "DeleteBillingCycleInstanceHistory",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingCycleInstanceHistory"
      },
      "parameters": [
        {
          "name": "billingCycleInstanceHistoryId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billrunDetail": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillrunDetailArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find BillrunDetails using query parameter filter criteria.",
        "operationId": "GetBillrunDetail",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillrunDetail"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillrunDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new BillrunDetail.",
        "operationId": "CreateBillrunDetail",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillrunDetailRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillrunDetail"
      },
      "x-annotation-common.entity": "BillrunDetail"
    },
    "/billrunDetail/{billrunDetailId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillrunDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find BillrunDetail by billrunDetailId URL path parameter.",
        "operationId": "GetBillrunDetailById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillrunDetail"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillrunDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify BillrunDetail.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillrunDetail",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillrunDetailRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillrunDetail"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing BillrunDetail\nNote: This is only allowed if BillrunDetail is in DRAFT status\n",
        "operationId": "DeleteBillrunDetail",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillrunDetail"
      },
      "parameters": [
        {
          "name": "billrunDetailId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 65,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "BillingProfile",
                      "id": "132962406249797505",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-BILLING",
                        "defaultSubscriptionStatus": "SUSPENDED",
                        "expectedActivationsTotal": 1310678,
                        "externalCostCenter": 1310679,
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryEmail1": "1310680",
                        "invoiceDeliveryEmail2": "1310681",
                        "invoiceDeliveryEmail3": "1310682",
                        "invoiceDeliveryMethod": "BOTH",
                        "invoiceFormat": "RESELLER",
                        "invoiceLanguage": "ENGLISH",
                        "minRevenueObligationDate": "2016-09-10T00:00:00.000Z",
                        "minRevenueObligationValue": 1310683,
                        "nonStandardVatRate": 15,
                        "paymentAccountNumber": "1310685",
                        "paymentAccountOwner": "1310686",
                        "paymentBankNumber": "1310687",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 1310688,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "CURRENT-CYCLE",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132962406249797505"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132962406249797505"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfile",
                      "id": "132964854481819522",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-TESTING",
                        "defaultSubscriptionStatus": "IN-BILLING",
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryMethod": "ELECTRONIC",
                        "invoiceFormat": "STANDARD",
                        "invoiceLanguage": "ENGLISH",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 14,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "DISABLED",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132964854481819522"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132964854481819522"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfile",
                      "id": "132966301659305859",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-TESTING",
                        "defaultSubscriptionStatus": "IN-BILLING",
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryMethod": "ELECTRONIC",
                        "invoiceFormat": "STANDARD",
                        "invoiceLanguage": "ENGLISH",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 14,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "DISABLED",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132966301659305859"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132966301659305859"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfile",
                      "id": "132966661455091588",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-TESTING",
                        "defaultSubscriptionStatus": "IN-BILLING",
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryMethod": "ELECTRONIC",
                        "invoiceFormat": "STANDARD",
                        "invoiceLanguage": "ENGLISH",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 14,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "DISABLED",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132966661455091588"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132966661455091588"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfile",
                      "id": "132966858545436549",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-TESTING",
                        "defaultSubscriptionStatus": "IN-BILLING",
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryMethod": "ELECTRONIC",
                        "invoiceFormat": "STANDARD",
                        "invoiceLanguage": "ENGLISH",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 14,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "DISABLED",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132966858545436549"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132966858545436549"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfile",
                      "id": "132967094080771974",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-TESTING",
                        "defaultSubscriptionStatus": "IN-BILLING",
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryMethod": "ELECTRONIC",
                        "invoiceFormat": "STANDARD",
                        "invoiceLanguage": "ENGLISH",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 14,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "DISABLED",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132967094080771974"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132967094080771974"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfile",
                      "id": "132967339489499015",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-TESTING",
                        "defaultSubscriptionStatus": "IN-BILLING",
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryMethod": "ELECTRONIC",
                        "invoiceFormat": "STANDARD",
                        "invoiceLanguage": "ENGLISH",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 14,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "DISABLED",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132967339489499015"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132967339489499015"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfile",
                      "id": "132967604460459912",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-TESTING",
                        "defaultSubscriptionStatus": "IN-BILLING",
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryMethod": "ELECTRONIC",
                        "invoiceFormat": "STANDARD",
                        "invoiceLanguage": "ENGLISH",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 14,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "DISABLED",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132967604460459912"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132967604460459912"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfile",
                      "id": "132967790368790409",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-TESTING",
                        "defaultSubscriptionStatus": "IN-BILLING",
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryMethod": "ELECTRONIC",
                        "invoiceFormat": "STANDARD",
                        "invoiceLanguage": "ENGLISH",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 14,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "DISABLED",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132967790368790409"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132967790368790409"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfile",
                      "id": "132968035836237706",
                      "attributes": {
                        "defaultSimSubscriptionStatus": "IN-TESTING",
                        "defaultSubscriptionStatus": "IN-BILLING",
                        "generateInvoiceWithoutVatIndicator": false,
                        "invoiceDeliveryMethod": "ELECTRONIC",
                        "invoiceFormat": "STANDARD",
                        "invoiceLanguage": "ENGLISH",
                        "paymentMethod": "DIRECT-DEBIT",
                        "paymentTargetDays": 14,
                        "ratingType": "PRORATED",
                        "usageLimitOverride": "DISABLED",
                        "wholesaleStreamIndicator": false
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/132968035836237706"
                          },
                          "data": {
                            "type": "Account",
                            "id": "132968035836237706"
                          }
                        },
                        "accountingGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                          },
                          "data": {
                            "type": "AccountingGroup",
                            "id": "132277547525216120"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profiles using query parameter filter criteria.",
        "operationId": "GetBillingProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Profile.",
        "operationId": "CreateBillingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfile",
                  "attributes": {
                    "defaultSimSubscriptionStatus": "IN-BILLING",
                    "defaultSubscriptionStatus": "ASSIGNED",
                    "expectedActivationsTotal": 1309451,
                    "externalCostCenter": 1309452,
                    "generateInvoiceWithoutVatIndicator": false,
                    "invoiceDeliveryEmail1": "1309453",
                    "invoiceDeliveryEmail2": "1309454",
                    "invoiceDeliveryEmail3": "1309455",
                    "invoiceDeliveryMethod": "BOTH",
                    "invoiceFormat": "RESELLER",
                    "invoiceLanguage": "ENGLISH",
                    "minRevenueObligationDate": "2013-06-06T04:14:54.000-10:55",
                    "minRevenueObligationValue": 1309456,
                    "nonStandardVatRate": 1309457,
                    "paymentAccountNumber": "1309458",
                    "paymentAccountOwner": "1309459",
                    "paymentBankNumber": "1309460",
                    "paymentMethod": "DIRECT-DEBIT",
                    "paymentTargetDays": 1309461,
                    "ratingType": "PRORATED",
                    "usageLimitOverride": "CURRENT-CYCLE",
                    "wholesaleStreamIndicator": false
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingProfile"
      },
      "x-annotation-common.entity": "BillingProfile"
    },
    "/billingProfile/create": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Profile with Address.",
        "operationId": "Create Billing Profile with Address",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "CreateBillingProfileOperation",
                  "id": "${createBillingProfileOperationId}",
                  "relationships": {
                    "company": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "${billingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "address": {
                      "data": {
                        "type": "Address",
                        "id": "${addressId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/CreateBillingProfileOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/billingProfile/template": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Creater Billing Profile template (and other elements)",
        "operationId": "Creater Billing Profile template",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfile"
      },
      "x-annotation-common.entity": "BillingProfile"
    },
    "/billingProfile/timesliceModel": {
      "patch": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "assign and un assign timeslice model for biiling profile",
        "operationId": "assign and un assign timeslice model for biiling profile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUnassignTimesliceModelSetupOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/billingProfile/{billingProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                  },
                  "data": {
                    "type": "BillingProfile",
                    "id": "132962406249797505",
                    "attributes": {
                      "defaultSimSubscriptionStatus": "IN-BILLING",
                      "defaultSubscriptionStatus": "SUSPENDED",
                      "expectedActivationsTotal": 1310678,
                      "externalCostCenter": 1310679,
                      "generateInvoiceWithoutVatIndicator": false,
                      "invoiceDeliveryEmail1": "1310680",
                      "invoiceDeliveryEmail2": "1310681",
                      "invoiceDeliveryEmail3": "1310682",
                      "invoiceDeliveryMethod": "BOTH",
                      "invoiceFormat": "RESELLER",
                      "invoiceLanguage": "ENGLISH",
                      "minRevenueObligationDate": "2016-09-10T00:00:00.000Z",
                      "minRevenueObligationValue": 1310683,
                      "nonStandardVatRate": 15,
                      "paymentAccountNumber": "1310685",
                      "paymentAccountOwner": "1310686",
                      "paymentBankNumber": "1310687",
                      "paymentMethod": "DIRECT-DEBIT",
                      "paymentTargetDays": 1310688,
                      "ratingType": "PRORATED",
                      "usageLimitOverride": "CURRENT-CYCLE",
                      "wholesaleStreamIndicator": false
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/132962406249797505"
                        },
                        "data": {
                          "type": "Account",
                          "id": "132962406249797505"
                        }
                      },
                      "accountingGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                        },
                        "data": {
                          "type": "AccountingGroup",
                          "id": "132277547525216120"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile by billingProfileId URL path parameter.",
        "operationId": "GetBillingProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                  },
                  "data": {
                    "type": "BillingProfile",
                    "id": "132962406249797505",
                    "attributes": {
                      "defaultSimSubscriptionStatus": "IN-BILLING",
                      "defaultSubscriptionStatus": "SUSPENDED",
                      "expectedActivationsTotal": 1310678,
                      "externalCostCenter": 1310679,
                      "generateInvoiceWithoutVatIndicator": false,
                      "invoiceDeliveryEmail1": "1310680",
                      "invoiceDeliveryEmail2": "1310681",
                      "invoiceDeliveryEmail3": "1310682",
                      "invoiceDeliveryMethod": "BOTH",
                      "invoiceFormat": "RESELLER",
                      "invoiceLanguage": "ENGLISH",
                      "minRevenueObligationDate": "2016-09-10T12:59:39.000Z",
                      "minRevenueObligationValue": 1310683,
                      "nonStandardVatRate": 15,
                      "paymentAccountNumber": "1310685",
                      "paymentAccountOwner": "1310686",
                      "paymentBankNumber": "1310687",
                      "paymentMethod": "DIRECT-DEBIT",
                      "paymentTargetDays": 1310688,
                      "ratingType": "PRORATED",
                      "usageLimitOverride": "CURRENT-CYCLE",
                      "wholesaleStreamIndicator": false
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/132962406249797505"
                        },
                        "data": {
                          "type": "Account",
                          "id": "132962406249797505"
                        }
                      },
                      "accountingGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountingGroup/132277547525216120"
                        },
                        "data": {
                          "type": "AccountingGroup",
                          "id": "132277547525216120"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfile",
                  "id": "${billingProfileId}",
                  "attributes": {
                    "defaultSimSubscriptionStatus": "IN-TESTING",
                    "defaultSubscriptionStatus": "SUSPENDED",
                    "expectedActivationsTotal": 1309477,
                    "externalCostCenter": 1309478,
                    "generateInvoiceWithoutVatIndicator": true,
                    "invoiceDeliveryEmail1": "1309479",
                    "invoiceDeliveryEmail2": "1309480",
                    "invoiceDeliveryEmail3": "1309481",
                    "invoiceDeliveryMethod": "ELECTRONIC",
                    "invoiceFormat": "STANDARD",
                    "invoiceLanguage": "ENGLISH",
                    "minRevenueObligationDate": "2017-10-11T09:02:49.000-03:54",
                    "minRevenueObligationValue": 1309482,
                    "nonStandardVatRate": 1309483,
                    "paymentAccountNumber": "1309484",
                    "paymentAccountOwner": "1309485",
                    "paymentBankNumber": "1309486",
                    "paymentMethod": "PAY-SLIP",
                    "paymentTargetDays": 1309487,
                    "ratingType": "RETRORATED",
                    "usageLimitOverride": "DISABLED",
                    "wholesaleStreamIndicator": true
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Profile\nNote: This is only allowed if Billing Profile is in DRAFT status\n",
        "operationId": "DeleteBillingProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingProfile"
      },
      "parameters": [
        {
          "name": "billingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfile/{billingProfileId}/updatePrepaidAutoRenewalMode": {
      "patch": {
        "responses": {
          "200": {
            "description": "change PrepaidAutoRenewalMode change request accepted",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Change PrepaidAutoRenewalMode for Account",
        "operationId": "Change PrepaidAutoRenewalMode for Account",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillingProfilePrepaidAutoRenewalModeOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfile/{billingProfileId}/timesliceModelOperation": {
      "patch": {
        "responses": {
          "200": {
            "description": "assign TimesliceModel for BillingProfile",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "assign TimesliceModel for BillingProfile",
        "operationId": "assign TimesliceModel for BillingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.acl": "modifyAccountTimesliceModel"
      },
      "parameters": [
        {
          "name": "billingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfile/{billingProfileId}/unassignTimesliceModel": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "unassign TimesliceModel for BillingProfile",
        "operationId": "unassign TimesliceModel for BillingProfile",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.acl": "modifyAccountTimesliceModel"
      },
      "parameters": [
        {
          "name": "billingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileApnGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 12,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "134539391447078835",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/134538463801251761"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "134538463801251761"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/134418664085526431"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "134418664085526431"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "138852889513694659",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "133825915061802901"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "138853036180116933",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133827564497016731"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "133827564497016731"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "138853125216802247",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/134538463801251761"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "134538463801251761"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "139485561265067871",
                      "attributes": {
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "133825915061802901"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139485550804473688"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139485550804473688"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "139486326893320052",
                      "attributes": {
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "133825915061802901"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139486305913411437"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139486305913411437"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "139487408822425487",
                      "attributes": {
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "133825915061802901"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139487395669088136"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139487395669088136"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "139582568184944570",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133827564497016731"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "133827564497016731"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139568882254878619"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139568882254878619"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "139639531958704067",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133827564497016731"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "133827564497016731"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/134418664085526431"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "134418664085526431"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileApnGroup",
                      "id": "140220569764239338",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "apnGroup": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                          },
                          "data": {
                            "type": "ApnGroup",
                            "id": "133825915061802901"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/140216478145189856"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "140216478145189856"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileApnGroupArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Apn Groups using query parameter filter criteria.",
        "operationId": "GetBillingProfileApnGroup",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfileApnGroup"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                  },
                  "data": {
                    "type": "BillingProfileApnGroup",
                    "id": "142425734059661208",
                    "attributes": {
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "apnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                        },
                        "data": {
                          "type": "ApnGroup",
                          "id": "133825915061802901"
                        }
                      },
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Profile Apn Group.",
        "operationId": "CreateBillingProfileApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileApnGroup",
                  "attributes": {
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "apnGroup": {
                      "data": {
                        "type": "ApnGroup",
                        "id": "${apnGroupId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "{{accountId}}",
                        "attributes": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileApnGroupRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingProfileApnGroup"
      },
      "x-annotation-common.entity": "BillingProfileApnGroup"
    },
    "/billingProfileApnGroup/{billingProfileApnGroupId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                  },
                  "data": {
                    "type": "BillingProfileApnGroup",
                    "id": "142425734059661208",
                    "attributes": {
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "apnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                        },
                        "data": {
                          "type": "ApnGroup",
                          "id": "133825915061802901"
                        }
                      },
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileApnGroupResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Apn Group by billingProfileApnGroupId URL path parameter.",
        "operationId": "GetBillingProfileApnGroupById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingProfileApnGroup"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                  },
                  "data": {
                    "type": "BillingProfileApnGroup",
                    "id": "142425734059661208",
                    "attributes": {
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "apnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                        },
                        "data": {
                          "type": "ApnGroup",
                          "id": "133825915061802901"
                        }
                      },
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Profile Apn Group.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingProfileApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileApnGroup",
                  "id": "${billingProfileApnGroupId}",
                  "attributes": {
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "apnGroup": {
                      "data": {
                        "type": "ApnGroup",
                        "id": "${apnGroupId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "{{accountId}}",
                        "attributes": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileApnGroupRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingProfileApnGroup"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Profile Apn Group\nNote: This is only allowed if Billing Profile Apn Group is in DRAFT status\n",
        "operationId": "DeleteBillingProfileApnGroup",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingProfileApnGroup"
      },
      "parameters": [
        {
          "name": "billingProfileApnGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileApnGroup/{billingProfileApnGroupId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                  },
                  "data": {
                    "type": "BillingProfileApnGroup",
                    "id": "142425734059661208",
                    "attributes": {
                      "status": "ACTIVE"
                    },
                    "relationships": {
                      "apnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                        },
                        "data": {
                          "type": "ApnGroup",
                          "id": "133825915061802901"
                        }
                      },
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate BillingProfileApnGroup Resource",
        "operationId": "ActivateBillingProfileApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileApnGroupActivateOperation",
                  "id": "${billingProfileApnGroupId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileApnGroup",
                        "id": "${billingProfileApnGroupId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileApnGroupActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileApnGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileApnGroup/{billingProfileApnGroupId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileApnGroup/142425734059661208"
                  },
                  "data": {
                    "type": "BillingProfileApnGroup",
                    "id": "142425734059661208",
                    "attributes": {
                      "status": "INACTIVE"
                    },
                    "relationships": {
                      "apnGroup": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/apnGroup/133825915061802901"
                        },
                        "data": {
                          "type": "ApnGroup",
                          "id": "133825915061802901"
                        }
                      },
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileApnGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate BillingProfileApnGroup Resource",
        "operationId": "DeactivateBillingProfileApnGroup",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileApnGroupActivateOperation",
                  "id": "${billingProfileApnGroupId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileApnGroup",
                        "id": "${billingProfileApnGroupId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileApnGroupActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileApnGroupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileLogisticStatus": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 0,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileLogisticStatusArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Logistic Statuses using query parameter filter criteria.",
        "operationId": "GetBillingProfileLogisticStatus",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfileLogisticStatus"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileLogisticStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Profile Logistic Status.",
        "operationId": "CreateBillingProfileLogisticStatus",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileLogisticStatus",
                  "attributes": {
                    "logisticStatus": "1309948"
                  },
                  "relationships": {
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "${billingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileLogisticStatusRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingProfileLogisticStatus"
      },
      "x-annotation-common.entity": "BillingProfileLogisticStatus"
    },
    "/billingProfileLogisticStatus/{billingProfileLogisticStatusId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileLogisticStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Logistic Status by billingProfileLogisticStatusId URL path parameter.",
        "operationId": "GetBillingProfileLogisticStatusById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingProfileLogisticStatus"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileLogisticStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Profile Logistic Status.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingProfileLogisticStatus",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileLogisticStatus",
                  "id": "${billingProfileLogisticStatusId}",
                  "attributes": {
                    "logisticStatus": "1309952"
                  },
                  "relationships": {
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "${billingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileLogisticStatusRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingProfileLogisticStatus"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Profile Logistic Status\nNote: This is only allowed if Billing Profile Logistic Status is in DRAFT status\n",
        "operationId": "DeleteBillingProfileLogisticStatus",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingProfileLogisticStatus"
      },
      "parameters": [
        {
          "name": "billingProfileLogisticStatusId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileRoamingProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 9,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "BillingProfileRoamingProfile",
                      "id": "138987072722572805",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        },
                        "roamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/136561150497133674"
                          },
                          "data": {
                            "type": "RoamingProfile",
                            "id": "136561150497133674"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileRoamingProfile",
                      "id": "138987917161797127",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        },
                        "roamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                          },
                          "data": {
                            "type": "RoamingProfile",
                            "id": "133828751577323421"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileRoamingProfile",
                      "id": "138991871543219721",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/134418664085526431"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "134418664085526431"
                          }
                        },
                        "roamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                          },
                          "data": {
                            "type": "RoamingProfile",
                            "id": "133828751577323421"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileRoamingProfile",
                      "id": "139486330064213880",
                      "attributes": {
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139486305913411437"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139486305913411437"
                          }
                        },
                        "roamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                          },
                          "data": {
                            "type": "RoamingProfile",
                            "id": "133828751577323421"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileRoamingProfile",
                      "id": "139487420507756435",
                      "attributes": {
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139487395669088136"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139487395669088136"
                          }
                        },
                        "roamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                          },
                          "data": {
                            "type": "RoamingProfile",
                            "id": "133828751577323421"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileRoamingProfile",
                      "id": "139582297610393524",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139568882254878619"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139568882254878619"
                          }
                        },
                        "roamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                          },
                          "data": {
                            "type": "RoamingProfile",
                            "id": "133828751577323421"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileRoamingProfile",
                      "id": "140220822252951535",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/140216478145189856"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "140216478145189856"
                          }
                        },
                        "roamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                          },
                          "data": {
                            "type": "RoamingProfile",
                            "id": "133828751577323421"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileRoamingProfile",
                      "id": "141515081195197471",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/141511733637288977"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "141511733637288977"
                          }
                        },
                        "roamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                          },
                          "data": {
                            "type": "RoamingProfile",
                            "id": "133828751577323421"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileRoamingProfile",
                      "id": "142425738245576604",
                      "attributes": {
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "142425726132426641"
                          }
                        },
                        "roamingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                          },
                          "data": {
                            "type": "RoamingProfile",
                            "id": "133828751577323421"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileRoamingProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Roaming Profiles using query parameter filter criteria.",
        "operationId": "GetBillingProfileRoamingProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfileRoamingProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                  },
                  "data": {
                    "type": "BillingProfileRoamingProfile",
                    "id": "142425738245576604",
                    "attributes": {
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      },
                      "roamingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                        },
                        "data": {
                          "type": "RoamingProfile",
                          "id": "133828751577323421"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Profile Roaming Profile.",
        "operationId": "CreateBillingProfileRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileRoamingProfile",
                  "attributes": {
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "{{accountId}}",
                        "attributes": {}
                      }
                    },
                    "roamingProfile": {
                      "data": {
                        "type": "RoamingProfile",
                        "id": "${roamingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRoamingProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingProfileRoamingProfile"
      },
      "x-annotation-common.entity": "BillingProfileRoamingProfile"
    },
    "/billingProfileRoamingProfile/{billingProfileRoamingProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                  },
                  "data": {
                    "type": "BillingProfileRoamingProfile",
                    "id": "142425738245576604",
                    "attributes": {
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      },
                      "roamingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                        },
                        "data": {
                          "type": "RoamingProfile",
                          "id": "133828751577323421"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileRoamingProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Roaming Profile by billingProfileRoamingProfileId URL path parameter.",
        "operationId": "GetBillingProfileRoamingProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingProfileRoamingProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Profile Roaming Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingProfileRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileRoamingProfile",
                  "id": "${billingProfileRoamingProfileId}",
                  "attributes": {
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "{{accountId}}",
                        "attributes": {}
                      }
                    },
                    "roamingProfile": {
                      "data": {
                        "type": "RoamingProfile",
                        "id": "${roamingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRoamingProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingProfileRoamingProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Profile Roaming Profile\nNote: This is only allowed if Billing Profile Roaming Profile is in DRAFT status\n",
        "operationId": "DeleteBillingProfileRoamingProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingProfileRoamingProfile"
      },
      "parameters": [
        {
          "name": "billingProfileRoamingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileRoamingProfile/{billingProfileRoamingProfileId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                  },
                  "data": {
                    "type": "BillingProfileRoamingProfile",
                    "id": "142425738245576604",
                    "attributes": {
                      "status": "ACTIVE"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      },
                      "roamingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                        },
                        "data": {
                          "type": "RoamingProfile",
                          "id": "133828751577323421"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate BillingProfileRoamingProfile Resource",
        "operationId": "ActivateBillingProfileRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileRoamingProfileActivateOperation",
                  "id": "${billingProfileRoamingProfileId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileRoamingProfile",
                        "id": "${billingProfileRoamingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRoamingProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileRoamingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileRoamingProfile/{billingProfileRoamingProfileId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileRoamingProfile/142425738245576604"
                  },
                  "data": {
                    "type": "BillingProfileRoamingProfile",
                    "id": "142425738245576604",
                    "attributes": {
                      "status": "INACTIVE"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      },
                      "roamingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/roamingProfile/133828751577323421"
                        },
                        "data": {
                          "type": "RoamingProfile",
                          "id": "133828751577323421"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileRoamingProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate BillingProfileRoamingProfile Resource",
        "operationId": "DeactivateBillingProfileRoamingProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileRoamingProfileActivateOperation",
                  "id": "${billingProfileRoamingProfileId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileRoamingProfile",
                        "id": "${billingProfileRoamingProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileRoamingProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileRoamingProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileServiceProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 8,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "BillingProfileServiceProfile",
                      "id": "134474753313347498",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/134418664085526431"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "134418664085526431"
                          }
                        },
                        "serviceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                          },
                          "data": {
                            "type": "ServiceProfile",
                            "id": "133826563350206359"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileServiceProfile",
                      "id": "138852059024725441",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        },
                        "serviceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                          },
                          "data": {
                            "type": "ServiceProfile",
                            "id": "133826563350206359"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileServiceProfile",
                      "id": "139486334183020412",
                      "attributes": {
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139486305913411437"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139486305913411437"
                          }
                        },
                        "serviceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                          },
                          "data": {
                            "type": "ServiceProfile",
                            "id": "133826563350206359"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileServiceProfile",
                      "id": "139487425331206039",
                      "attributes": {
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139487395669088136"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139487395669088136"
                          }
                        },
                        "serviceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                          },
                          "data": {
                            "type": "ServiceProfile",
                            "id": "133826563350206359"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileServiceProfile",
                      "id": "139582193113503664",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139568882254878619"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139568882254878619"
                          }
                        },
                        "serviceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                          },
                          "data": {
                            "type": "ServiceProfile",
                            "id": "133826563350206359"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileServiceProfile",
                      "id": "140221918853732340",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/140216478145189856"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "140216478145189856"
                          }
                        },
                        "serviceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                          },
                          "data": {
                            "type": "ServiceProfile",
                            "id": "133826563350206359"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileServiceProfile",
                      "id": "141515300792177700",
                      "attributes": {
                        "status": "ACTIVE"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/141511733637288977"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "141511733637288977"
                          }
                        },
                        "serviceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                          },
                          "data": {
                            "type": "ServiceProfile",
                            "id": "133826563350206359"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileServiceProfile",
                      "id": "142425741584242592",
                      "attributes": {
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "142425726132426641"
                          }
                        },
                        "serviceProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                          },
                          "data": {
                            "type": "ServiceProfile",
                            "id": "133826563350206359"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileServiceProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Service Profiles using query parameter filter criteria.",
        "operationId": "GetBillingProfileServiceProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfileServiceProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                  },
                  "data": {
                    "type": "BillingProfileServiceProfile",
                    "id": "142425741584242592",
                    "attributes": {
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      },
                      "serviceProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                        },
                        "data": {
                          "type": "ServiceProfile",
                          "id": "133826563350206359"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Profile Service Profile.",
        "operationId": "CreateBillingProfileServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileServiceProfile",
                  "attributes": {
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "{{accountId}}",
                        "attributes": {}
                      }
                    },
                    "serviceProfile": {
                      "data": {
                        "type": "ServiceProfile",
                        "id": "${serviceProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileServiceProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingProfileServiceProfile"
      },
      "x-annotation-common.entity": "BillingProfileServiceProfile"
    },
    "/billingProfileServiceProfile/{billingProfileServiceProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                  },
                  "data": {
                    "type": "BillingProfileServiceProfile",
                    "id": "142425741584242592",
                    "attributes": {
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      },
                      "serviceProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                        },
                        "data": {
                          "type": "ServiceProfile",
                          "id": "133826563350206359"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileServiceProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Service Profile by billingProfileServiceProfileId URL path parameter.",
        "operationId": "GetBillingProfileServiceProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingProfileServiceProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Profile Service Profile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingProfileServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileServiceProfile",
                  "id": "${billingProfileServiceProfileId}",
                  "attributes": {
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "{{accountId}}",
                        "attributes": {}
                      }
                    },
                    "serviceProfile": {
                      "data": {
                        "type": "ServiceProfile",
                        "id": "${serviceProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileServiceProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingProfileServiceProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Profile Service Profile\nNote: This is only allowed if Billing Profile Service Profile is in DRAFT status\n",
        "operationId": "DeleteBillingProfileServiceProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingProfileServiceProfile"
      },
      "parameters": [
        {
          "name": "billingProfileServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileServiceProfile/{billingProfileServiceProfileId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                  },
                  "data": {
                    "type": "BillingProfileServiceProfile",
                    "id": "142425741584242592",
                    "attributes": {
                      "status": "ACTIVE"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      },
                      "serviceProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                        },
                        "data": {
                          "type": "ServiceProfile",
                          "id": "133826563350206359"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate BillingProfileServiceProfile Resource",
        "operationId": "ActivateBillingProfileServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileServiceProfileActivateOperation",
                  "id": "${billingProfileServiceProfileId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileServiceProfile",
                        "id": "${billingProfileServiceProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileServiceProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileServiceProfile/{billingProfileServiceProfileId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileServiceProfile/142425741584242592"
                  },
                  "data": {
                    "type": "BillingProfileServiceProfile",
                    "id": "142425741584242592",
                    "attributes": {
                      "status": "INACTIVE"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/142425726132426641"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "142425726132426641"
                        }
                      },
                      "serviceProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/serviceProfile/133826563350206359"
                        },
                        "data": {
                          "type": "ServiceProfile",
                          "id": "133826563350206359"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileServiceProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate BillingProfileServiceProfile Resource",
        "operationId": "DeactivateBillingProfileServiceProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileServiceProfileActivateOperation",
                  "id": "${billingProfileServiceProfileId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileServiceProfile",
                        "id": "${billingProfileServiceProfileId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileServiceProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileServiceProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileSimSalesProduct": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "BillingProfileSimSalesProduct",
                      "id": "142425807418038204",
                      "attributes": {
                        "customFeeOneOff": 15,
                        "status": "DRAFT"
                      },
                      "relationships": {}
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSimSalesProductArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Sim Sales Products using query parameter filter criteria.",
        "operationId": "GetBillingProfileSimSalesProduct",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfileSimSalesProduct"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSimSalesProduct/142425807418038204"
                  },
                  "data": {
                    "type": "BillingProfileSimSalesProduct",
                    "id": "142425807418038204",
                    "attributes": {
                      "customFeeOneOff": 15,
                      "status": "DRAFT"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Profile Sim Sales Product.",
        "operationId": "CreateBillingProfileSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileSimSalesProduct",
                  "attributes": {
                    "customFeeOneOff": 1309527,
                    "status": "DRAFT"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSimSalesProductRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingProfileSimSalesProduct"
      },
      "x-annotation-common.entity": "BillingProfileSimSalesProduct"
    },
    "/billingProfileSimSalesProduct/{billingProfileSimSalesProductId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSimSalesProduct/142425807418038204"
                  },
                  "data": {
                    "type": "BillingProfileSimSalesProduct",
                    "id": "142425807418038204",
                    "attributes": {
                      "customFeeOneOff": 15,
                      "status": "DRAFT"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSimSalesProductResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Sim Sales Product by billingProfileSimSalesProductId URL path parameter.",
        "operationId": "GetBillingProfileSimSalesProductById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingProfileSimSalesProduct"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSimSalesProduct/142425807418038204"
                  },
                  "data": {
                    "type": "BillingProfileSimSalesProduct",
                    "id": "142425807418038204",
                    "attributes": {
                      "customFeeOneOff": 15,
                      "status": "DRAFT"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Profile Sim Sales Product.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingProfileSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileSimSalesProduct",
                  "id": "${billingProfileSimSalesProductId}",
                  "attributes": {
                    "customFeeOneOff": 1309532,
                    "status": "DRAFT"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSimSalesProductRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingProfileSimSalesProduct"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Profile Sim Sales Product\nNote: This is only allowed if Billing Profile Sim Sales Product is in DRAFT status\n",
        "operationId": "DeleteBillingProfileSimSalesProduct",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingProfileSimSalesProduct"
      },
      "parameters": [
        {
          "name": "billingProfileSimSalesProductId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileSimSalesProduct/{billingProfileSimSalesProductId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate BillingProfileSimSalesProduct Resource",
        "operationId": "ActivateBillingProfileSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileSimSalesProductActivateOperation",
                  "id": "${billingProfileSimSalesProductId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileSimSalesProduct",
                        "id": "${billingProfileSimSalesProductId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSimSalesProductActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileSimSalesProductId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileSimSalesProduct/{billingProfileSimSalesProductId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSimSalesProduct/142425807418038204"
                  },
                  "data": {
                    "type": "BillingProfileSimSalesProduct",
                    "id": "142425807418038204",
                    "attributes": {
                      "customFeeOneOff": 15,
                      "status": "INACTIVE"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSimSalesProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate BillingProfileSimSalesProduct Resource",
        "operationId": "DeactivateBillingProfileSimSalesProduct",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileSimSalesProductActivateOperation",
                  "id": "${billingProfileSimSalesProductId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileSimSalesProduct",
                        "id": "${billingProfileSimSalesProductId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSimSalesProductActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileSimSalesProductId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileSubscriptionItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 15,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "138889693440775626",
                      "attributes": {
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-STATIC"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/138889693281392073"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "138889693281392073"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "138890703320126939",
                      "attributes": {
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-INDIVIDUAL"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/134418664085526431"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "134418664085526431"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/138890703236240858"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "138890703236240858"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "138896244121540065",
                      "attributes": {
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/138896244062819808"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "138896244062819808"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "138995900826523158",
                      "attributes": {
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/138995900767802901"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "138995900767802901"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "138995902151923225",
                      "attributes": {
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/138995902143534616"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "138995902143534616"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "139485555770529628",
                      "attributes": {
                        "status": "DRAFT",
                        "subscriptionItemCustomName": "1875655",
                        "subscriptionItemType": "ADDON-ACCOUNT"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132962406249797505"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/139485552910014298"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "139485552910014298"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "139486319226132337",
                      "attributes": {
                        "status": "DRAFT",
                        "subscriptionItemCustomName": "1821562",
                        "subscriptionItemType": "ADDON-ACCOUNT"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132962406249797505"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/139486310938187631"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "139486310938187631"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "139487399561402252",
                      "attributes": {
                        "status": "DRAFT",
                        "subscriptionItemCustomName": "1262499",
                        "subscriptionItemType": "ADDON-ACCOUNT"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "132962406249797505"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/139487398152116106"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "139487398152116106"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "139581968433026984",
                      "attributes": {
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139568882254878619"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139568882254878619"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/138995900767802901"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "138995900767802901"
                          }
                        }
                      }
                    },
                    {
                      "type": "BillingProfileSubscriptionItem",
                      "id": "139582059919185836",
                      "attributes": {
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/139568882254878619"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "139568882254878619"
                          }
                        },
                        "subscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/138995902143534616"
                          },
                          "data": {
                            "type": "SubscriptionItem",
                            "id": "138995902143534616"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSubscriptionItemArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Subscription Items using query parameter filter criteria.",
        "operationId": "GetBillingProfileSubscriptionItem",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfileSubscriptionItem"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/142425729898911637"
                  },
                  "data": {
                    "type": "BillingProfileSubscriptionItem",
                    "id": "142425729898911637",
                    "attributes": {
                      "status": "DRAFT",
                      "subscriptionItemCustomName": "1310467",
                      "subscriptionItemType": "ADDON-TOPOFF"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "132962406249797505"
                        }
                      },
                      "subscriptionItem": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/142425728170858387"
                        },
                        "data": {
                          "type": "SubscriptionItem",
                          "id": "142425728170858387"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Billing Profile Subscription Item.",
        "operationId": "CreateBillingProfileSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileSubscriptionItem",
                  "attributes": {
                    "creationTimestamp": "2013-04-06T04:41:36.000-11:13",
                    "lastUpdateTimestamp": "2023-02-18T15:44:43.000+05:57",
                    "status": "DRAFT",
                    "subscriptionItemCustomFeeOneOff": 1309956,
                    "subscriptionItemCustomFeeRecurring": 1309957,
                    "subscriptionItemCustomFeePercentage": 1309958,
                    "subscriptionItemCustomName": "1309959",
                    "subscriptionItemType": "POOL-POSTPAID-STATIC"
                  },
                  "relationships": {
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "{{accountId}}",
                        "attributes": {}
                      }
                    },
                    "subscriptionItem": {
                      "data": {
                        "type": "SubscriptionItem",
                        "id": "${subscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSubscriptionItemRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingProfileSubscriptionItem"
      },
      "x-annotation-common.entity": "BillingProfileSubscriptionItem"
    },
    "/billingProfileSubscriptionItem/{billingProfileSubscriptionItemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/142425729898911637"
                  },
                  "data": {
                    "type": "BillingProfileSubscriptionItem",
                    "id": "142425729898911637",
                    "attributes": {
                      "status": "DRAFT",
                      "subscriptionItemCustomName": "1310778",
                      "subscriptionItemType": "ADDON-ACCOUNT"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "132962406249797505"
                        }
                      },
                      "subscriptionItem": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/142425728170858387"
                        },
                        "data": {
                          "type": "SubscriptionItem",
                          "id": "142425728170858387"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSubscriptionItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Billing Profile Subscription Item by billingProfileSubscriptionItemId URL path parameter.",
        "operationId": "GetBillingProfileSubscriptionItemById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingProfileSubscriptionItem"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/142425729898911637"
                  },
                  "data": {
                    "type": "BillingProfileSubscriptionItem",
                    "id": "142425729898911637",
                    "attributes": {
                      "status": "DRAFT",
                      "subscriptionItemCustomName": "1310778",
                      "subscriptionItemType": "ADDON-SIM"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "132962406249797505"
                        }
                      },
                      "subscriptionItem": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/142425728170858387"
                        },
                        "data": {
                          "type": "SubscriptionItem",
                          "id": "142425728170858387"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Billing Profile Subscription Item.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingProfileSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileSubscriptionItem",
                  "id": "${billingProfileSubscriptionItemId}",
                  "attributes": {
                    "creationTimestamp": "2019-12-13T10:11:37.000-01:45",
                    "lastUpdateTimestamp": "2020-02-14T11:43:32.000+00:23",
                    "status": "DRAFT",
                    "subscriptionItemCustomFeeOneOff": 160,
                    "subscriptionItemCustomFeeRecurring": 160,
                    "subscriptionItemCustomFeePercentage": 1309966,
                    "subscriptionItemCustomName": "1309967",
                    "subscriptionItemType": "ADDON-TOPOFF"
                  },
                  "relationships": {
                    "billingProfile": {
                      "data": {
                        "type": "BillingProfile",
                        "id": "{{accountId}}",
                        "attributes": {}
                      }
                    },
                    "subscriptionItem": {
                      "data": {
                        "type": "SubscriptionItem",
                        "id": "${subscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSubscriptionItemRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingProfileSubscriptionItem"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Billing Profile Subscription Item\nNote: This is only allowed if Billing Profile Subscription Item is in DRAFT status\n",
        "operationId": "DeleteBillingProfileSubscriptionItem",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingProfileSubscriptionItem"
      },
      "parameters": [
        {
          "name": "billingProfileSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileSubscriptionItem/{billingProfileSubscriptionItemId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/142425729898911637"
                  },
                  "data": {
                    "type": "BillingProfileSubscriptionItem",
                    "id": "142425729898911637",
                    "attributes": {
                      "status": "ACTIVE",
                      "subscriptionItemCustomName": "1310778",
                      "subscriptionItemType": "ADDON-ACCOUNT"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "132962406249797505"
                        }
                      },
                      "subscriptionItem": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/142425728170858387"
                        },
                        "data": {
                          "type": "SubscriptionItem",
                          "id": "142425728170858387"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate BillingProfileSubscriptionItem Resource",
        "operationId": "ActivateBillingProfileSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileSubscriptionItemActivateOperation",
                  "id": "${billingProfileSubscriptionItemId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileSubscriptionItem",
                        "id": "${billingProfileSubscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSubscriptionItemActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileSubscriptionItem/{billingProfileSubscriptionItemId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfileSubscriptionItem/142425729898911637"
                  },
                  "data": {
                    "type": "BillingProfileSubscriptionItem",
                    "id": "142425729898911637",
                    "attributes": {
                      "status": "INACTIVE",
                      "subscriptionItemCustomName": "1310778",
                      "subscriptionItemType": "ADDON-ACCOUNT"
                    },
                    "relationships": {
                      "billingProfile": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/132962406249797505"
                        },
                        "data": {
                          "type": "BillingProfile",
                          "id": "132962406249797505"
                        }
                      },
                      "subscriptionItem": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/142425728170858387"
                        },
                        "data": {
                          "type": "SubscriptionItem",
                          "id": "142425728170858387"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate BillingProfileSubscriptionItem Resource",
        "operationId": "DeactivateBillingProfileSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "BillingProfileSubscriptionItemActivateOperation",
                  "id": "${billingProfileSubscriptionItemId}",
                  "relationships": {
                    "instance": {
                      "data": {
                        "type": "BillingProfileSubscriptionItem",
                        "id": "${billingProfileSubscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSubscriptionItemActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileSubscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/subscriptionItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 21,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "SubscriptionItem",
                      "id": "138889693281392073",
                      "attributes": {
                        "detailId": 242,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-STATIC"
                      },
                      "relationships": {
                        "priceplan": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/priceplan/138889693281392073"
                          },
                          "data": {
                            "type": "Priceplan",
                            "id": "138889693281392073"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        }
                      }
                    },
                    {
                      "type": "SubscriptionItem",
                      "id": "138890703236240858",
                      "attributes": {
                        "detailId": 241,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-INDIVIDUAL"
                      },
                      "relationships": {
                        "priceplan": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/priceplan/138890703236240858"
                          },
                          "data": {
                            "type": "Priceplan",
                            "id": "138890703236240858"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/134418664085526431"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "134418664085526431"
                          }
                        }
                      }
                    },
                    {
                      "type": "SubscriptionItem",
                      "id": "138896244062819808",
                      "attributes": {
                        "detailId": 243,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "priceplan": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/priceplan/138896244062819808"
                          },
                          "data": {
                            "type": "Priceplan",
                            "id": "138896244062819808"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        }
                      }
                    },
                    {
                      "type": "SubscriptionItem",
                      "id": "138995900767802901",
                      "attributes": {
                        "detailId": 244,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "priceplan": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/priceplan/138995900767802901"
                          },
                          "data": {
                            "type": "Priceplan",
                            "id": "138995900767802901"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        }
                      }
                    },
                    {
                      "type": "SubscriptionItem",
                      "id": "138995902143534616",
                      "attributes": {
                        "detailId": 245,
                        "status": "ACTIVE",
                        "subscriptionItemType": "PRICEPLAN-POSTPAID-FLEX"
                      },
                      "relationships": {
                        "priceplan": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/priceplan/138995902143534616"
                          },
                          "data": {
                            "type": "Priceplan",
                            "id": "138995902143534616"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        }
                      }
                    },
                    {
                      "type": "SubscriptionItem",
                      "id": "139373860934915799",
                      "attributes": {
                        "detailId": 1818953,
                        "status": "ACTIVE",
                        "subscriptionItemType": "ADDON-ACCOUNT"
                      },
                      "relationships": {
                        "accountAddon": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountAddon/139373860934915799"
                          },
                          "data": {
                            "type": "AccountAddon",
                            "id": "139373860934915799"
                          }
                        }
                      }
                    },
                    {
                      "type": "SubscriptionItem",
                      "id": "139383085308319458",
                      "attributes": {
                        "detailId": 1443610,
                        "status": "ACTIVE",
                        "subscriptionItemType": "ADDON-ACCOUNT"
                      },
                      "relationships": {
                        "accountAddon": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountAddon/139383085308319458"
                          },
                          "data": {
                            "type": "AccountAddon",
                            "id": "139383085308319458"
                          }
                        }
                      }
                    },
                    {
                      "type": "SubscriptionItem",
                      "id": "139468445518403309",
                      "attributes": {
                        "detailId": 1143124,
                        "status": "ACTIVE",
                        "subscriptionItemType": "ADDON-ACCOUNT"
                      },
                      "relationships": {
                        "accountAddon": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountAddon/139468445518403309"
                          },
                          "data": {
                            "type": "AccountAddon",
                            "id": "139468445518403309"
                          }
                        }
                      }
                    },
                    {
                      "type": "SubscriptionItem",
                      "id": "139468993403557626",
                      "attributes": {
                        "detailId": 1382273,
                        "status": "ACTIVE",
                        "subscriptionItemType": "ADDON-ACCOUNT"
                      },
                      "relationships": {
                        "accountAddon": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountAddon/139468993403557626"
                          },
                          "data": {
                            "type": "AccountAddon",
                            "id": "139468993403557626"
                          }
                        }
                      }
                    },
                    {
                      "type": "SubscriptionItem",
                      "id": "139471435000190730",
                      "attributes": {
                        "detailId": 1773114,
                        "status": "ACTIVE",
                        "subscriptionItemType": "ADDON-ACCOUNT"
                      },
                      "relationships": {
                        "accountAddon": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountAddon/139471435000190730"
                          },
                          "data": {
                            "type": "AccountAddon",
                            "id": "139471435000190730"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItemArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Subscription Items using query parameter filter criteria.",
        "operationId": "GetSubscriptionItem",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSubscriptionItem"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/142425728170858387"
                  },
                  "data": {
                    "type": "SubscriptionItem",
                    "id": "142425728170858387",
                    "attributes": {
                      "detailId": 1310455,
                      "status": "ACTIVE",
                      "subscriptionItemType": "ADDON-ACCOUNT"
                    },
                    "relationships": {
                      "accountAddon": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountAddon/142425728170858387"
                        },
                        "data": {
                          "type": "AccountAddon",
                          "id": "142425728170858387"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Subscription Item.",
        "operationId": "CreateSubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "SubscriptionItem",
                  "attributes": {
                    "creationTimestamp": "2011-12-03T02:52:51.000-14:27",
                    "detailId": 1309541,
                    "lastUpdateTimestamp": "2026-03-23T19:48:02.000+12:01",
                    "status": "DRAFT",
                    "subscriptionItemType": "POOL-POSTPAID-FLEX"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItemRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifySubscriptionItem"
      },
      "x-annotation-common.entity": "SubscriptionItem"
    },
    "/subscriptionItem/{subscriptionItemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/142425728170858387"
                  },
                  "data": {
                    "type": "SubscriptionItem",
                    "id": "142425728170858387",
                    "attributes": {
                      "detailId": 1310455,
                      "status": "ACTIVE",
                      "subscriptionItemType": "ADDON-ACCOUNT"
                    },
                    "relationships": {
                      "accountAddon": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountAddon/142425728170858387"
                        },
                        "data": {
                          "type": "AccountAddon",
                          "id": "142425728170858387"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Subscription Item by subscriptionItemId URL path parameter.",
        "operationId": "GetSubscriptionItemById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSubscriptionItem"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/subscriptionItem/142425728170858387"
                  },
                  "data": {
                    "type": "SubscriptionItem",
                    "id": "142425728170858387",
                    "attributes": {
                      "detailId": 1310455,
                      "status": "ACTIVE",
                      "subscriptionItemType": "ADDON-ACCOUNT"
                    },
                    "relationships": {
                      "accountAddon": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountAddon/142425728170858387"
                        },
                        "data": {
                          "type": "AccountAddon",
                          "id": "142425728170858387"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Subscription Item.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifySubscriptionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "SubscriptionItem",
                  "id": "${subscriptionItemId}",
                  "attributes": {
                    "creationTimestamp": "2012-11-04T02:41:42.000-13:58",
                    "detailId": 1309550,
                    "lastUpdateTimestamp": "2028-04-26T21:11:17.000+15:37",
                    "status": "DRAFT",
                    "subscriptionItemType": "PRICEPLAN-PREPAID-INDIVIDUAL"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItemRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifySubscriptionItem"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Subscription Item\nNote: This is only allowed if Subscription Item is in DRAFT status\n",
        "operationId": "DeleteSubscriptionItem",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifySubscriptionItem"
      },
      "parameters": [
        {
          "name": "subscriptionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/simSubscription": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 19,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "SimSubscription",
                      "id": "139041206054164158",
                      "attributes": {
                        "simSubscriptionStatus": "IN-BILLING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139041205215303357"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139041205215303357"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134567980125131824"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134567980125131824"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139041205215303357"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139041205215303357"
                          }
                        }
                      }
                    },
                    {
                      "type": "SimSubscription",
                      "id": "139042204399179457",
                      "attributes": {
                        "simSubscriptionStatus": "IN-BILLING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139042203811976896"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139042203811976896"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134567980141909055"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134567980141909055"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139042203811976896"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139042203811976896"
                          }
                        }
                      }
                    },
                    {
                      "type": "SimSubscription",
                      "id": "139058682578081475",
                      "attributes": {
                        "simSubscriptionStatus": "IN-TESTING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139058681965713090"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139058681965713090"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134551863050639308"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134551863050639308"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139058681965713090"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139058681965713090"
                          }
                        }
                      }
                    },
                    {
                      "type": "SimSubscription",
                      "id": "139058683903481541",
                      "attributes": {
                        "simSubscriptionStatus": "IN-TESTING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139058683333056196"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139058683333056196"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134567980150297668"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134567980150297668"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139058683333056196"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139058683333056196"
                          }
                        }
                      }
                    },
                    {
                      "type": "SimSubscription",
                      "id": "139058689330910919",
                      "attributes": {
                        "simSubscriptionStatus": "IN-TESTING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139058688760485574"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139058688760485574"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134567980141909050"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134567980141909050"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139058688760485574"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139058688760485574"
                          }
                        }
                      }
                    },
                    {
                      "type": "SimSubscription",
                      "id": "139058690597590729",
                      "attributes": {
                        "simSubscriptionStatus": "IN-TESTING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139058690060719816"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139058690060719816"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134567980133520437"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134567980133520437"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139058690060719816"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "139058690060719816"
                          }
                        }
                      }
                    },
                    {
                      "type": "SimSubscription",
                      "id": "141723871811212421",
                      "attributes": {
                        "simSubscriptionStatus": "IN-TESTING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/141723871232398467"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "141723871232398467"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134567980125131819"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134567980125131819"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/141723871232398467"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "141723871232398467"
                          }
                        }
                      }
                    },
                    {
                      "type": "SimSubscription",
                      "id": "142416436998968978",
                      "attributes": {
                        "simSubscriptionStatus": "IN-TESTING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/142416435983947408"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "142416435983947408"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134567980116743206"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134567980116743206"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/142416435983947408"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "142416435983947408"
                          }
                        }
                      }
                    },
                    {
                      "type": "SimSubscription",
                      "id": "142420963441514245",
                      "attributes": {
                        "simSubscriptionStatus": "IN-TESTING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/142420962812368643"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "142420962812368643"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134567980091577357"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134567980091577357"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/142420962812368643"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "142420962812368643"
                          }
                        }
                      }
                    },
                    {
                      "type": "SimSubscription",
                      "id": "142420964842411785",
                      "attributes": {
                        "simSubscriptionStatus": "IN-TESTING"
                      },
                      "relationships": {
                        "baseSubscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/142420964230043399"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "142420964230043399"
                          }
                        },
                        "sim": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134567980091577362"
                          },
                          "data": {
                            "type": "Sim",
                            "id": "134567980091577362"
                          }
                        },
                        "subscription": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/142420964230043399"
                          },
                          "data": {
                            "type": "Subscription",
                            "id": "142420964230043399"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SimSubscriptionArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Sim Subscriptions using query parameter filter criteria.",
        "operationId": "GetSimSubscription",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSimSubscription"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/simSubscription/142425934178293739"
                  },
                  "data": {
                    "type": "SimSubscription",
                    "id": "142425934178293739",
                    "attributes": {
                      "simSubscriptionStatus": "READY-FOR-BILLING"
                    },
                    "relationships": {
                      "sim": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134551863050639308"
                        },
                        "data": {
                          "type": "Sim",
                          "id": "134551863050639308"
                        }
                      },
                      "subscription": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139041205215303357"
                        },
                        "data": {
                          "type": "Subscription",
                          "id": "139041205215303357"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SimSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Sim Subscription.",
        "operationId": "CreateSimSubscription",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "SimSubscription",
                  "attributes": {
                    "creationTimestamp": "2016-10-09T07:05:39.000-06:46",
                    "lastUpdateTimestamp": "2021-11-15T12:14:10.000+01:56",
                    "simSubscriptionStatus": "IN-BILLING"
                  },
                  "relationships": {
                    "sim": {
                      "data": {
                        "type": "Sim",
                        "id": "${simId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "subscription": {
                      "data": {
                        "type": "Subscription",
                        "id": "${subscriptionId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/SimSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifySimSubscription"
      },
      "x-annotation-common.entity": "SimSubscription"
    },
    "/simSubscription/{simSubscriptionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/simSubscription/142425934178293739"
                  },
                  "data": {
                    "type": "SimSubscription",
                    "id": "142425934178293739",
                    "attributes": {
                      "simSubscriptionStatus": "IN-TESTING"
                    },
                    "relationships": {
                      "sim": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134551863050639308"
                        },
                        "data": {
                          "type": "Sim",
                          "id": "134551863050639308"
                        }
                      },
                      "subscription": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139041205215303357"
                        },
                        "data": {
                          "type": "Subscription",
                          "id": "139041205215303357"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SimSubscriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Sim Subscription by simSubscriptionId URL path parameter.",
        "operationId": "GetSimSubscriptionById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSimSubscription"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/simSubscription/142425934178293739"
                  },
                  "data": {
                    "type": "SimSubscription",
                    "id": "142425934178293739",
                    "attributes": {
                      "simSubscriptionStatus": "IN-TESTING"
                    },
                    "relationships": {
                      "sim": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/sim/134551863050639308"
                        },
                        "data": {
                          "type": "Sim",
                          "id": "134551863050639308"
                        }
                      },
                      "subscription": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139041205215303357"
                        },
                        "data": {
                          "type": "Subscription",
                          "id": "139041205215303357"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SimSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Sim Subscription.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifySimSubscription",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "SimSubscription",
                  "id": "${simSubscriptionId}",
                  "attributes": {
                    "creationTimestamp": "2010-05-02T01:53:25.000-16:22",
                    "lastUpdateTimestamp": "2021-12-17T13:20:19.000+03:27",
                    "simSubscriptionStatus": "IN-BILLING"
                  },
                  "relationships": {
                    "sim": {
                      "data": {
                        "type": "Sim",
                        "id": "${simId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "subscription": {
                      "data": {
                        "type": "Subscription",
                        "id": "${subscriptionId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/SimSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifySimSubscription"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Sim Subscription\nNote: This is only allowed if Sim Subscription is in DRAFT status\n",
        "operationId": "DeleteSimSubscription",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifySimSubscription"
      },
      "parameters": [
        {
          "name": "simSubscriptionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/imsiMsubNetworkPriceplan": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 0,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ImsiMsubNetworkPriceplanArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Imsi Msub Network Priceplans using query parameter filter criteria.",
        "operationId": "GetImsiMsubNetworkPriceplan",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readImsiMsubNetworkPriceplan"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsiMsubNetworkPriceplanResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Imsi Msub Network Priceplan.",
        "operationId": "CreateImsiMsubNetworkPriceplan",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "ImsiMsubNetworkPriceplan",
                  "attributes": {},
                  "relationships": {
                    "imsi": {
                      "data": {
                        "type": "Imsi",
                        "id": "${imsiId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "subscriptionItem": {
                      "data": {
                        "type": "SubscriptionItem",
                        "id": "${subscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ImsiMsubNetworkPriceplanRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyImsiMsubNetworkPriceplan"
      },
      "x-annotation-common.entity": "ImsiMsubNetworkPriceplan"
    },
    "/imsiMsubNetworkPriceplan/{imsiMsubNetworkPriceplanId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsiMsubNetworkPriceplanResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Imsi Msub Network Priceplan by imsiMsubNetworkPriceplanId URL path parameter.",
        "operationId": "GetImsiMsubNetworkPriceplanById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readImsiMsubNetworkPriceplan"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ImsiMsubNetworkPriceplanResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Imsi Msub Network Priceplan.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyImsiMsubNetworkPriceplan",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "ImsiMsubNetworkPriceplan",
                  "id": "${imsiMsubNetworkPriceplanId}",
                  "attributes": {},
                  "relationships": {
                    "imsi": {
                      "data": {
                        "type": "Imsi",
                        "id": "${imsiId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "subscriptionItem": {
                      "data": {
                        "type": "SubscriptionItem",
                        "id": "${subscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ImsiMsubNetworkPriceplanRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyImsiMsubNetworkPriceplan"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Imsi Msub Network Priceplan\nNote: This is only allowed if Imsi Msub Network Priceplan is in DRAFT status\n",
        "operationId": "DeleteImsiMsubNetworkPriceplan",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyImsiMsubNetworkPriceplan"
      },
      "parameters": [
        {
          "name": "imsiMsubNetworkPriceplanId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/subscription": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 18,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "Subscription",
                      "id": "139041205215303357",
                      "attributes": {
                        "billingStartDate": "2019-07-11T00:00:00.000Z",
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-11T20:10:03.290Z",
                        "lastUpdateTimestamp": "2019-07-11T20:34:02.875Z",
                        "serviceAssignmentTimestamp": "2019-07-11T19:56:37.000Z",
                        "serviceStartDate": "2019-07-11T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/138995902151923226"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "138995902151923226"
                          }
                        }
                      }
                    },
                    {
                      "type": "Subscription",
                      "id": "139042203811976896",
                      "attributes": {
                        "billingStartDate": "2019-07-11T00:00:00.000Z",
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-11T20:12:02.333Z",
                        "lastUpdateTimestamp": "2019-07-11T20:15:02.344Z",
                        "serviceAssignmentTimestamp": "2019-07-11T19:28:13.000Z",
                        "serviceStartDate": "2019-07-11T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/138995900834911767"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "138995900834911767"
                          }
                        }
                      }
                    },
                    {
                      "type": "Subscription",
                      "id": "139058681965713090",
                      "attributes": {
                        "billingStartDate": "2019-07-11T00:00:00.000Z",
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-11T20:44:46.681Z",
                        "lastUpdateTimestamp": "2019-07-11T20:45:02.166Z",
                        "serviceAssignmentTimestamp": "2019-07-11T19:28:13.000Z",
                        "serviceStartDate": "2019-07-11T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/138889693449164235"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "138889693449164235"
                          }
                        }
                      }
                    },
                    {
                      "type": "Subscription",
                      "id": "139058683333056196",
                      "attributes": {
                        "billingStartDate": "2019-07-11T00:00:00.000Z",
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-11T20:44:46.846Z",
                        "lastUpdateTimestamp": "2019-07-11T20:45:02.430Z",
                        "serviceAssignmentTimestamp": "2019-07-11T19:28:13.000Z",
                        "serviceStartDate": "2019-07-11T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/138889693449164235"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "138889693449164235"
                          }
                        }
                      }
                    },
                    {
                      "type": "Subscription",
                      "id": "139058688760485574",
                      "attributes": {
                        "billingStartDate": "2019-07-11T00:00:00.000Z",
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-11T20:44:47.492Z",
                        "lastUpdateTimestamp": "2019-07-11T20:45:02.670Z",
                        "serviceAssignmentTimestamp": "2019-07-11T19:51:18.000Z",
                        "serviceStartDate": "2019-07-11T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/138995900834911767"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "138995900834911767"
                          }
                        }
                      }
                    },
                    {
                      "type": "Subscription",
                      "id": "139058690060719816",
                      "attributes": {
                        "billingStartDate": "2019-07-11T00:00:00.000Z",
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-11T20:44:47.648Z",
                        "lastUpdateTimestamp": "2019-07-11T20:45:02.971Z",
                        "serviceAssignmentTimestamp": "2019-07-11T19:51:18.000Z",
                        "serviceStartDate": "2019-07-11T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/138995900834911767"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "138995900834911767"
                          }
                        }
                      }
                    },
                    {
                      "type": "Subscription",
                      "id": "141723871232398467",
                      "attributes": {
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-15T13:00:02.002Z",
                        "lastUpdateTimestamp": "2019-07-15T13:01:02.521Z",
                        "serviceAssignmentTimestamp": "2019-07-15T12:59:45.000Z",
                        "serviceStartDate": "2019-07-15T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/141536138262221876"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "141536138262221876"
                          }
                        }
                      }
                    },
                    {
                      "type": "Subscription",
                      "id": "142416435983947408",
                      "attributes": {
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-16T11:56:02.153Z",
                        "lastUpdateTimestamp": "2019-07-16T11:57:02.894Z",
                        "serviceAssignmentTimestamp": "2019-07-16T11:55:23.000Z",
                        "serviceStartDate": "2019-07-16T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/141536138262221876"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "141536138262221876"
                          }
                        }
                      }
                    },
                    {
                      "type": "Subscription",
                      "id": "142420962812368643",
                      "attributes": {
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-16T12:05:01.793Z",
                        "lastUpdateTimestamp": "2019-07-16T12:06:06.451Z",
                        "serviceAssignmentTimestamp": "2019-07-16T12:04:42.000Z",
                        "serviceStartDate": "2019-07-16T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/141536138262221876"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "141536138262221876"
                          }
                        }
                      }
                    },
                    {
                      "type": "Subscription",
                      "id": "142420964230043399",
                      "attributes": {
                        "chargeType": "MONTHLY",
                        "commitment": 12,
                        "creationTimestamp": "2019-07-16T12:05:01.963Z",
                        "lastUpdateTimestamp": "2019-07-16T12:06:06.566Z",
                        "serviceAssignmentTimestamp": "2019-07-16T12:04:42.000Z",
                        "serviceStartDate": "2019-07-16T00:00:00.000Z",
                        "subscriptionStatus": "ASSIGNED",
                        "subscriptionType": "SIM"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/134418664085526431"
                          },
                          "data": {
                            "type": "Account",
                            "id": "134418664085526431"
                          }
                        },
                        "accountSubscriptionItem": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/141536138262221876"
                          },
                          "data": {
                            "type": "AccountSubscriptionItem",
                            "id": "141536138262221876"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Subscriptions using query parameter filter criteria.",
        "operationId": "GetSubscription",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSubscription"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Subscription.",
        "operationId": "CreateSubscription",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Subscription",
                  "attributes": {
                    "billingStartDate": "2013-07-05T03:15:38.000-12:00",
                    "chargeType": "ANNUAL",
                    "comments": "1310335",
                    "commitment": 1310336,
                    "creationTimestamp": "2022-07-18T14:52:44.000+05:00",
                    "customerText": "1310337",
                    "invoiceBillingInformation": "1310338",
                    "lastUpdateTimestamp": "2014-12-06T05:27:19.000-10:04",
                    "serviceAssignmentTimestamp": "2029-11-27T22:05:10.000+16:58",
                    "serviceStartDate": "2012-07-04T02:43:16.000-13:51",
                    "subscriptionResumeTimestamp": "2026-10-22T18:32:34.000+11:02",
                    "subscriptionStatus": "IN-BILLING",
                    "subscriptionSuspendTimestamp": "2019-05-13T10:09:15.000-01:14",
                    "subscriptionTerminationDate": "2025-06-22T18:04:05.000+10:18",
                    "subscriptionType": "ACCOUNT"
                  },
                  "relationships": {
                    "accountSubscriptionItem": {
                      "data": {
                        "type": "AccountSubscriptionItem",
                        "id": "${accountSubscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifySubscription"
      },
      "x-annotation-common.entity": "Subscription"
    },
    "/subscription/{subscriptionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/subscription/139041205215303357"
                  },
                  "data": {
                    "type": "Subscription",
                    "id": "139041205215303357",
                    "attributes": {
                      "billingStartDate": "2019-07-11T00:00:00.000Z",
                      "chargeType": "MONTHLY",
                      "commitment": 12,
                      "creationTimestamp": "2019-07-11T20:10:03.290Z",
                      "lastUpdateTimestamp": "2019-07-11T20:34:02.875Z",
                      "serviceAssignmentTimestamp": "2019-07-11T19:56:37.000Z",
                      "serviceStartDate": "2019-07-11T00:00:00.000Z",
                      "subscriptionStatus": "ASSIGNED",
                      "subscriptionType": "SIM"
                    },
                    "relationships": {
                      "account": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                        },
                        "data": {
                          "type": "Account",
                          "id": "138790290642179508"
                        }
                      },
                      "accountSubscriptionItem": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/accountSubscriptionItem/138995902151923226"
                        },
                        "data": {
                          "type": "AccountSubscriptionItem",
                          "id": "138995902151923226"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Subscription by subscriptionId URL path parameter.",
        "operationId": "GetSubscriptionById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSubscription"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Subscription.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifySubscription",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Subscription",
                  "id": "${subscriptionId}",
                  "attributes": {
                    "billingStartDate": "2015-03-08T06:28:03.000-07:48",
                    "chargeType": "QUARTERLY",
                    "comments": "1310345",
                    "commitment": 1310346,
                    "creationTimestamp": "2015-11-08T06:35:49.000-07:33",
                    "customerText": "1310347",
                    "invoiceBillingInformation": "1310348",
                    "lastUpdateTimestamp": "2015-06-08T06:47:12.000-08:34",
                    "serviceAssignmentTimestamp": "2013-09-05T03:47:47.000-11:52",
                    "serviceStartDate": "2014-09-06T04:43:23.000-10:25",
                    "subscriptionResumeTimestamp": "2022-05-18T14:42:07.000+05:14",
                    "subscriptionStatus": "ASSIGNED",
                    "subscriptionSuspendTimestamp": "2021-03-16T13:56:24.000+02:57",
                    "subscriptionTerminationDate": "2017-02-11T09:15:37.000-03:45",
                    "subscriptionType": "DEVICE"
                  },
                  "relationships": {
                    "accountSubscriptionItem": {
                      "data": {
                        "type": "AccountSubscriptionItem",
                        "id": "${accountSubscriptionItemId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifySubscription"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Subscription\nNote: This is only allowed if Subscription is in DRAFT status\n",
        "operationId": "DeleteSubscription",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifySubscription"
      },
      "parameters": [
        {
          "name": "subscriptionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/subscriptionItemDetail": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItemDetailArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SubscriptionItemDetails using query parameter filter criteria.",
        "operationId": "GetSubscriptionItemDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSubscriptionItemDetail"
      },
      "x-annotation-common.entity": "SubscriptionItemDetail"
    },
    "/subscriptionItemDetail/{subscriptionItemDetailId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionItemDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SubscriptionItemDetail by subscriptionItemDetailId URL path parameter.",
        "operationId": "GetSubscriptionItemDetailById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSubscriptionItemDetail"
      },
      "parameters": [
        {
          "name": "subscriptionItemDetailId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/simSalesProductDetail": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SimSalesProductDetailArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SimSalesProductDetails using query parameter filter criteria.",
        "operationId": "GetSimSalesProductDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSimSalesProductDetail"
      },
      "x-annotation-common.entity": "SimSalesProductDetail"
    },
    "/simSalesProductDetail/{simSalesProductDetailId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SimSalesProductDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SimSalesProductDetail by simSalesProductDetailId URL path parameter.",
        "operationId": "GetSimSalesProductDetailById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSimSalesProductDetail"
      },
      "parameters": [
        {
          "name": "simSalesProductDetailId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/simAddon": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SimAddonArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SimAddons using query parameter filter criteria.",
        "operationId": "GetSimAddon",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSimAddon"
      },
      "x-annotation-common.entity": "SimAddon"
    },
    "/simAddon/{simAddonId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SimAddonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SimAddon by simAddonId URL path parameter.",
        "operationId": "GetSimAddonById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSimAddon"
      },
      "parameters": [
        {
          "name": "simAddonId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSimSalesProductDetail": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductDetailArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccountSimSalesProductDetails using query parameter filter criteria.",
        "operationId": "GetAccountSimSalesProductDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountSimSalesProductDetail"
      },
      "x-annotation-common.entity": "AccountSimSalesProductDetail"
    },
    "/accountSimSalesProductDetail/{accountSimSalesProductDetailId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSimSalesProductDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccountSimSalesProductDetail by accountSimSalesProductDetailId URL path parameter.",
        "operationId": "GetAccountSimSalesProductDetailById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountSimSalesProductDetail"
      },
      "parameters": [
        {
          "name": "accountSimSalesProductDetailId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/chargeTypeTaxItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeTypeTaxItemArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ChargeTypeTaxItems using query parameter filter criteria.",
        "operationId": "GetChargeTypeTaxItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readChargeTypeTaxItem"
      },
      "x-annotation-common.entity": "ChargeTypeTaxItem"
    },
    "/chargeTypeTaxItem/{chargeTypeTaxItemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeTypeTaxItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ChargeTypeTaxItem by chargeTypeTaxItemId URL path parameter.",
        "operationId": "GetChargeTypeTaxItemById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readChargeTypeTaxItem"
      },
      "parameters": [
        {
          "name": "chargeTypeTaxItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/charges": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargesArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Charges using query parameter filter criteria.",
        "operationId": "GetCharges",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCharges"
      },
      "x-annotation-common.entity": "Charges"
    },
    "/charges/{chargesId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Charges by chargesId URL path parameter.",
        "operationId": "GetChargesById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCharges"
      },
      "parameters": [
        {
          "name": "chargesId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/taxItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxItemArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find TaxItems using query parameter filter criteria.",
        "operationId": "GetTaxItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readTaxItem"
      },
      "x-annotation-common.entity": "TaxItem"
    },
    "/taxItem/{taxItemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find TaxItem by taxItemId URL path parameter.",
        "operationId": "GetTaxItemById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readTaxItem"
      },
      "parameters": [
        {
          "name": "taxItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/taxProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find TaxProfiles using query parameter filter criteria.",
        "operationId": "GetTaxProfile",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readTaxProfile"
      },
      "x-annotation-common.entity": "TaxProfile"
    },
    "/taxProfile/{taxProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find TaxProfile by taxProfileId URL path parameter.",
        "operationId": "GetTaxProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readTaxProfile"
      },
      "parameters": [
        {
          "name": "taxProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/currencyDetail": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyDetailArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CurrencyDetails using query parameter filter criteria.",
        "operationId": "GetCurrencyDetail",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCurrencyDetail"
      },
      "x-annotation-common.entity": "CurrencyDetail"
    },
    "/currencyDetail/{currencyDetailId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CurrencyDetail by currencyDetailId URL path parameter.",
        "operationId": "GetCurrencyDetailById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCurrencyDetail"
      },
      "parameters": [
        {
          "name": "currencyDetailId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/chargeCorrection": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ChargeCorrections using query parameter filter criteria.",
        "operationId": "GetChargeCorrection",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readChargeCorrection"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new ChargeCorrection.",
        "operationId": "CreateChargeCorrection",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeCorrectionRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyChargeCorrection"
      },
      "x-annotation-common.entity": "ChargeCorrection"
    },
    "/chargeCorrection/{chargeCorrectionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ChargeCorrection by chargeCorrectionId URL path parameter.",
        "operationId": "GetChargeCorrectionById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readChargeCorrection"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify ChargeCorrection.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyChargeCorrection",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeCorrectionRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyChargeCorrection"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing ChargeCorrection\nNote: This is only allowed if ChargeCorrection is in DRAFT status\n",
        "operationId": "DeleteChargeCorrection",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyChargeCorrection"
      },
      "parameters": [
        {
          "name": "chargeCorrectionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/chargeCorrection/{chargeCorrectionId}/relationships/chargeCorrectionItems": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "list of charge correction items by charge correction id",
        "operationId": "list of charge correction items by charge correction id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "chargeCorrectionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/chargeCorrection/{chargeCorrectionId}/stats": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionItemStatsArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Charge correction item stats",
        "operationId": "Charge correction item stats",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "chargeCorrectionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/chargeCorrection/{chargeCorrectionId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate ChargeCorrection Resource",
        "operationId": "ActivateChargeCorrection",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeCorrectionActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "chargeCorrectionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/chargeCorrection/{chargeCorrectionId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate ChargeCorrection Resource",
        "operationId": "DeactivateChargeCorrection",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeCorrectionActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "chargeCorrectionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/chargeCorrectionItem": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionItemArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ChargeCorrectionItems using query parameter filter criteria.",
        "operationId": "GetChargeCorrectionItem",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readChargeCorrectionItem"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new ChargeCorrectionItem.",
        "operationId": "CreateChargeCorrectionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeCorrectionItemRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyChargeCorrectionItem"
      },
      "x-annotation-common.entity": "ChargeCorrectionItem"
    },
    "/chargeCorrectionItem/{chargeCorrectionItemId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find ChargeCorrectionItem by chargeCorrectionItemId URL path parameter.",
        "operationId": "GetChargeCorrectionItemById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readChargeCorrectionItem"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeCorrectionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify ChargeCorrectionItem.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyChargeCorrectionItem",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ChargeCorrectionItemRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyChargeCorrectionItem"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing ChargeCorrectionItem\nNote: This is only allowed if ChargeCorrectionItem is in DRAFT status\n",
        "operationId": "DeleteChargeCorrectionItem",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyChargeCorrectionItem"
      },
      "parameters": [
        {
          "name": "chargeCorrectionItemId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/subscriptionChain": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionChainArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SubscriptionChains using query parameter filter criteria.",
        "operationId": "GetSubscriptionChain",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSubscriptionChain"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionChainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new SubscriptionChain.",
        "operationId": "CreateSubscriptionChain",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionChainRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifySubscriptionChain"
      },
      "x-annotation-common.entity": "SubscriptionChain"
    },
    "/subscriptionChain/{subscriptionChainId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionChainResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SubscriptionChain by subscriptionChainId URL path parameter.",
        "operationId": "GetSubscriptionChainById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSubscriptionChain"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionChainResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify SubscriptionChain.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifySubscriptionChain",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionChainRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifySubscriptionChain"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing SubscriptionChain\nNote: This is only allowed if SubscriptionChain is in DRAFT status\n",
        "operationId": "DeleteSubscriptionChain",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifySubscriptionChain"
      },
      "parameters": [
        {
          "name": "subscriptionChainId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/subscriptionSupplement": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionSupplementArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SubscriptionSupplements using query parameter filter criteria.",
        "operationId": "GetSubscriptionSupplement",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readSubscriptionSupplement"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionSupplementResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new SubscriptionSupplement.",
        "operationId": "CreateSubscriptionSupplement",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionSupplementRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifySubscriptionSupplement"
      },
      "x-annotation-common.entity": "SubscriptionSupplement"
    },
    "/subscriptionSupplement/{subscriptionSupplementId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionSupplementResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find SubscriptionSupplement by subscriptionSupplementId URL path parameter.",
        "operationId": "GetSubscriptionSupplementById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readSubscriptionSupplement"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionSupplementResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify SubscriptionSupplement.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifySubscriptionSupplement",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionSupplementRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifySubscriptionSupplement"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing SubscriptionSupplement\nNote: This is only allowed if SubscriptionSupplement is in DRAFT status\n",
        "operationId": "DeleteSubscriptionSupplement",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifySubscriptionSupplement"
      },
      "parameters": [
        {
          "name": "subscriptionSupplementId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/offerType": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OfferTypes using query parameter filter criteria.",
        "operationId": "GetOfferType",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readOfferType"
      },
      "x-annotation-common.entity": "OfferType"
    },
    "/offerType/{offerTypeId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OfferType by offerTypeId URL path parameter.",
        "operationId": "GetOfferTypeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readOfferType"
      },
      "parameters": [
        {
          "name": "offerTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/offerTypeChargeTrigger": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferTypeChargeTriggerArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OfferTypeChargeTriggers using query parameter filter criteria.",
        "operationId": "GetOfferTypeChargeTrigger",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readOfferTypeChargeTrigger"
      },
      "x-annotation-common.entity": "OfferTypeChargeTrigger"
    },
    "/offerTypeChargeTrigger/{offerTypeChargeTriggerId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferTypeChargeTriggerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find OfferTypeChargeTrigger by offerTypeChargeTriggerId URL path parameter.",
        "operationId": "GetOfferTypeChargeTriggerById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readOfferTypeChargeTrigger"
      },
      "parameters": [
        {
          "name": "offerTypeChargeTriggerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/address": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 21,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "Address",
                      "id": "132202833339488102",
                      "attributes": {
                        "addressObjectType": "COMPANY",
                        "city": "Bothell\t\t\t\t",
                        "postCode": "98011\t\t\t\t",
                        "state": "WA\t\t\t",
                        "street1": "20205 North Creek Parkway\t\t\t\t",
                        "street2": "Suite 000\t\t\t\t\t"
                      },
                      "relationships": {
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/1000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "1000"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/132202833196881765"
                          },
                          "data": {
                            "type": "Company",
                            "id": "132202833196881765"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    },
                    {
                      "type": "Address",
                      "id": "134420237855496096",
                      "attributes": {
                        "addressObjectType": "BILLING-PROFILE",
                        "city": "Bothell\t\t\t\t\t",
                        "postCode": "98011\t\t\t\t\t",
                        "state": "WA\t\t\t\t\t",
                        "street1": "20205 North Creek Parkway\t\t\t\t\t",
                        "street2": "Suite 000\t\t\t\t\t"
                      },
                      "relationships": {
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/2000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "2000"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/134418664085526431"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "134418664085526431"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    },
                    {
                      "type": "Address",
                      "id": "138792454936597941",
                      "attributes": {
                        "addressObjectType": "BILLING-PROFILE",
                        "city": "Miami"
                      },
                      "relationships": {
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/2000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "2000"
                          }
                        },
                        "billingProfile": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/billingProfile/138790290642179508"
                          },
                          "data": {
                            "type": "BillingProfile",
                            "id": "138790290642179508"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    },
                    {
                      "type": "Address",
                      "id": "138834347972105654",
                      "attributes": {
                        "addressObjectType": "ACCOUNT",
                        "city": "Miami"
                      },
                      "relationships": {
                        "account": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/account/138790290642179508"
                          },
                          "data": {
                            "type": "Account",
                            "id": "138790290642179508"
                          }
                        },
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/3000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "3000"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    },
                    {
                      "type": "Address",
                      "id": "139468983848933110",
                      "attributes": {
                        "addressObjectType": "COMPANY",
                        "city": "1382223",
                        "department": "1382224",
                        "poBox": "1382225",
                        "postCode": "1382226",
                        "state": "1382227",
                        "street1": "1382228",
                        "street2": "1382229"
                      },
                      "relationships": {
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/1000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "1000"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/139468976517289715"
                          },
                          "data": {
                            "type": "Company",
                            "id": "139468976517289715"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    },
                    {
                      "type": "Address",
                      "id": "139471429027501830",
                      "attributes": {
                        "addressObjectType": "COMPANY",
                        "city": "1773064",
                        "department": "1773065",
                        "poBox": "1773066",
                        "postCode": "1773067",
                        "state": "1773068",
                        "street1": "1773069",
                        "street2": "1773070"
                      },
                      "relationships": {
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/1000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "1000"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/139471421637138179"
                          },
                          "data": {
                            "type": "Company",
                            "id": "139471421637138179"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    },
                    {
                      "type": "Address",
                      "id": "139473122041534230",
                      "attributes": {
                        "addressObjectType": "COMPANY",
                        "city": "1788482",
                        "department": "1788483",
                        "poBox": "1788484",
                        "postCode": "1788485",
                        "state": "1788486",
                        "street1": "1788487",
                        "street2": "1788488"
                      },
                      "relationships": {
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/1000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "1000"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/139473114877662995"
                          },
                          "data": {
                            "type": "Company",
                            "id": "139473114877662995"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    },
                    {
                      "type": "Address",
                      "id": "139473888995186470",
                      "attributes": {
                        "addressObjectType": "COMPANY",
                        "city": "1182235",
                        "department": "1182236",
                        "poBox": "1182237",
                        "postCode": "1182238",
                        "state": "1182239",
                        "street1": "1182240",
                        "street2": "1182241"
                      },
                      "relationships": {
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/1000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "1000"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/139473879826437923"
                          },
                          "data": {
                            "type": "Company",
                            "id": "139473879826437923"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    },
                    {
                      "type": "Address",
                      "id": "139481885695809334",
                      "attributes": {
                        "addressObjectType": "COMPANY",
                        "city": "1748452",
                        "department": "1748453",
                        "poBox": "1748454",
                        "postCode": "1748455",
                        "state": "1748456",
                        "street1": "1748457",
                        "street2": "1748458"
                      },
                      "relationships": {
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/1000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "1000"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/139481877793740595"
                          },
                          "data": {
                            "type": "Company",
                            "id": "139481877793740595"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    },
                    {
                      "type": "Address",
                      "id": "139482386713810758",
                      "attributes": {
                        "addressObjectType": "COMPANY",
                        "city": "1666513",
                        "department": "1666514",
                        "poBox": "1666515",
                        "postCode": "1666516",
                        "state": "1666517",
                        "street1": "1666518",
                        "street2": "1666519"
                      },
                      "relationships": {
                        "addressType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/1000"
                          },
                          "data": {
                            "type": "AddressType",
                            "id": "1000"
                          }
                        },
                        "company": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/company/139482376815253315"
                          },
                          "data": {
                            "type": "Company",
                            "id": "139482376815253315"
                          }
                        },
                        "country": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                          },
                          "data": {
                            "type": "Country",
                            "id": "132188576564646922"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Addresses using query parameter filter criteria.",
        "operationId": "GetAddress",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAddress"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/address/142425720839214991"
                  },
                  "data": {
                    "type": "Address",
                    "id": "142425720839214991",
                    "attributes": {
                      "addressObjectType": "COMPANY",
                      "city": "1310405",
                      "department": "1310406",
                      "poBox": "1310407",
                      "postCode": "1310408",
                      "state": "1310409",
                      "street1": "1310410",
                      "street2": "1310411"
                    },
                    "relationships": {
                      "addressType": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/1000"
                        },
                        "data": {
                          "type": "AddressType",
                          "id": "1000"
                        }
                      },
                      "company": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/company/142425713364965260"
                        },
                        "data": {
                          "type": "Company",
                          "id": "142425713364965260"
                        }
                      },
                      "country": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                        },
                        "data": {
                          "type": "Country",
                          "id": "132188576564646922"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Address.",
        "operationId": "CreateAddress",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Address",
                  "attributes": {
                    "addressObjectType": "COMPANY",
                    "city": "1309982",
                    "creationTimestamp": "2024-06-21T17:04:16.000+08:44",
                    "department": "1309983",
                    "lastUpdateTimestamp": "2024-03-20T16:17:28.000+08:10",
                    "poBox": "1309984",
                    "postCode": "1309985",
                    "state": "1309986",
                    "street1": "1309987",
                    "street2": "1309988"
                  },
                  "relationships": {
                    "addressType": {
                      "data": {
                        "type": "AddressType",
                        "id": "${addressTypeId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "company": {
                      "data": {
                        "type": "Company",
                        "id": "83683714839612267",
                        "attributes": {}
                      }
                    },
                    "country": {
                      "data": {
                        "type": "Country",
                        "id": "${countryId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AddressRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAddress"
      },
      "x-annotation-common.entity": "Address"
    },
    "/address/{addressId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/address/142425720839214991"
                  },
                  "data": {
                    "type": "Address",
                    "id": "142425720839214991",
                    "attributes": {
                      "addressObjectType": "COMPANY",
                      "city": "1310405",
                      "department": "1310406",
                      "poBox": "1310407",
                      "postCode": "1310408",
                      "state": "1310409",
                      "street1": "1310410",
                      "street2": "1310411"
                    },
                    "relationships": {
                      "addressType": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/1000"
                        },
                        "data": {
                          "type": "AddressType",
                          "id": "1000"
                        }
                      },
                      "company": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/company/142425713364965260"
                        },
                        "data": {
                          "type": "Company",
                          "id": "142425713364965260"
                        }
                      },
                      "country": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/country/132188576564646922"
                        },
                        "data": {
                          "type": "Country",
                          "id": "132188576564646922"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Address by addressId URL path parameter.",
        "operationId": "GetAddressById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAddress"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Address.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAddress",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Address",
                  "id": "${addressId}",
                  "attributes": {
                    "addressObjectType": "COMPANY",
                    "city": "1309997",
                    "creationTimestamp": "2019-09-13T10:15:10.000-01:23",
                    "department": "1309998",
                    "lastUpdateTimestamp": "2019-10-13T10:09:37.000-01:15",
                    "poBox": "1309999",
                    "postCode": "1310000",
                    "state": "1310001",
                    "street1": "1310002",
                    "street2": "1310003"
                  },
                  "relationships": {
                    "addressType": {
                      "data": {
                        "type": "AddressType",
                        "id": "${addressTypeId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "company": {
                      "data": {
                        "type": "Company",
                        "id": "83683714839612267",
                        "attributes": {}
                      }
                    },
                    "country": {
                      "data": {
                        "type": "Country",
                        "id": "${countryId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AddressRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAddress"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Address\nNote: This is only allowed if Address is in DRAFT status\n",
        "operationId": "DeleteAddress",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAddress"
      },
      "parameters": [
        {
          "name": "addressId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/addressType": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 4,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "AddressType",
                      "id": "1000",
                      "attributes": {
                        "addressObjectType": "COMPANY",
                        "isMainAddressIndicator": true,
                        "isMandatoryIndicator": true,
                        "isUniqueIndicator": true,
                        "name": "Company Main Address",
                        "sortOrder": 1
                      }
                    },
                    {
                      "type": "AddressType",
                      "id": "2000",
                      "attributes": {
                        "addressObjectType": "BILLING-PROFILE",
                        "isMainAddressIndicator": true,
                        "isMandatoryIndicator": true,
                        "isUniqueIndicator": true,
                        "name": "Primary Billing Address",
                        "sortOrder": 1
                      }
                    },
                    {
                      "type": "AddressType",
                      "id": "3000",
                      "attributes": {
                        "addressObjectType": "ACCOUNT",
                        "isMainAddressIndicator": true,
                        "isMandatoryIndicator": true,
                        "isUniqueIndicator": true,
                        "name": "Primary Shipping Address",
                        "sortOrder": 1
                      }
                    },
                    {
                      "type": "AddressType",
                      "id": "142425756650182570",
                      "attributes": {
                        "addressObjectType": "ACCOUNT-PERSON",
                        "isMainAddressIndicator": false,
                        "isMandatoryIndicator": false,
                        "isUniqueIndicator": true,
                        "name": "name_1518036",
                        "sortOrder": 1310532
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Address Types using query parameter filter criteria.",
        "operationId": "GetAddressType",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAddressType"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/142425756650182570"
                  },
                  "data": {
                    "type": "AddressType",
                    "id": "142425756650182570",
                    "attributes": {
                      "addressObjectType": "COMPANY",
                      "isMainAddressIndicator": true,
                      "isMandatoryIndicator": false,
                      "isUniqueIndicator": true,
                      "name": "name_1518035",
                      "sortOrder": 1310529
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Address Type.",
        "operationId": "CreateAddressType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AddressType",
                  "attributes": {
                    "addressObjectType": "ACCOUNT",
                    "creationTimestamp": "2011-05-03T02:27:29.000-14:42",
                    "isMainAddressIndicator": false,
                    "isMandatoryIndicator": false,
                    "isUniqueIndicator": false,
                    "lastUpdateTimestamp": "2019-03-14T11:00:55.000-00:03",
                    "name": "name_1517987",
                    "sortOrder": 1309563
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AddressTypeRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAddressType"
      },
      "x-annotation-common.entity": "AddressType"
    },
    "/addressType/{addressTypeId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/142425756650182570"
                  },
                  "data": {
                    "type": "AddressType",
                    "id": "142425756650182570",
                    "attributes": {
                      "addressObjectType": "ACCOUNT-PERSON",
                      "isMainAddressIndicator": false,
                      "isMandatoryIndicator": false,
                      "isUniqueIndicator": true,
                      "name": "name_1518036",
                      "sortOrder": 1310532
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Address Type by addressTypeId URL path parameter.",
        "operationId": "GetAddressTypeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAddressType"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/addressType/142425756650182570"
                  },
                  "data": {
                    "type": "AddressType",
                    "id": "142425756650182570",
                    "attributes": {
                      "addressObjectType": "ACCOUNT-PERSON",
                      "isMainAddressIndicator": false,
                      "isMandatoryIndicator": false,
                      "isUniqueIndicator": true,
                      "name": "name_1518036",
                      "sortOrder": 1310532
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/AddressTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Address Type.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAddressType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "AddressType",
                  "id": "${addressTypeId}",
                  "attributes": {
                    "addressObjectType": "ACCOUNT-PERSON",
                    "creationTimestamp": "2014-05-07T05:11:39.000-09:08",
                    "isMainAddressIndicator": false,
                    "isMandatoryIndicator": false,
                    "isUniqueIndicator": true,
                    "lastUpdateTimestamp": "2028-07-26T21:26:30.000+15:28",
                    "name": "name_1517988",
                    "sortOrder": 1309566
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/AddressTypeRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAddressType"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Address Type\nNote: This is only allowed if Address Type is in DRAFT status\n",
        "operationId": "DeleteAddressType",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAddressType"
      },
      "parameters": [
        {
          "name": "addressTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/applicationType": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "ApplicationType",
                      "id": "142425819464079297",
                      "attributes": {
                        "name": "name_1518043"
                      },
                      "relationships": {}
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Application Types using query parameter filter criteria.",
        "operationId": "GetApplicationType",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readApplicationType"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/applicationType/142425819464079297"
                  },
                  "data": {
                    "type": "ApplicationType",
                    "id": "142425819464079297",
                    "attributes": {
                      "name": "name_1518042"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Application Type.",
        "operationId": "CreateApplicationType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "ApplicationType",
                  "attributes": {
                    "name": "name_1517989"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyApplicationType"
      },
      "x-annotation-common.entity": "ApplicationType"
    },
    "/applicationType/{applicationTypeId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/applicationType/142425819464079297"
                  },
                  "data": {
                    "type": "ApplicationType",
                    "id": "142425819464079297",
                    "attributes": {
                      "name": "name_1518043"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Application Type by applicationTypeId URL path parameter.",
        "operationId": "GetApplicationTypeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readApplicationType"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/applicationType/142425819464079297"
                  },
                  "data": {
                    "type": "ApplicationType",
                    "id": "142425819464079297",
                    "attributes": {
                      "name": "name_1518043"
                    },
                    "relationships": {}
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Application Type.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyApplicationType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "ApplicationType",
                  "id": "${applicationTypeId}",
                  "attributes": {
                    "name": "name_1517990"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyApplicationType"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Application Type\nNote: This is only allowed if Application Type is in DRAFT status\n",
        "operationId": "DeleteApplicationType",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyApplicationType"
      },
      "parameters": [
        {
          "name": "applicationTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/applicationType/{applicationTypeId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate ApplicationType Resource",
        "operationId": "ActivateApplicationType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "applicationTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/applicationType/{applicationTypeId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate ApplicationType Resource",
        "operationId": "DeactivateApplicationType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "applicationTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/company": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 17,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "Company",
                      "id": "132202833196881765",
                      "attributes": {
                        "companyName": "IOT_OLYMPUS_TEST\t",
                        "phone1": "2062250245\t\t\t\t\t",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/131782433115739142"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "131782433115739142"
                          }
                        }
                      }
                    },
                    {
                      "type": "Company",
                      "id": "139373847496365778",
                      "attributes": {
                        "companyDepartmentName": "1818889",
                        "companyName": "1818890",
                        "companyRegistrationNumber": "1818891",
                        "companyTaxNumber": "1818892",
                        "companyVatNumber": "1818893",
                        "email": "1818894",
                        "fax": "1818895",
                        "homepage": "1818896",
                        "phone1": "1818897",
                        "phone2": "1818898",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/139373842094102223"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "139373842094102223"
                          }
                        }
                      }
                    },
                    {
                      "type": "Company",
                      "id": "139383073161615069",
                      "attributes": {
                        "companyDepartmentName": "1443546",
                        "companyName": "1443547",
                        "companyRegistrationNumber": "1443548",
                        "companyTaxNumber": "1443549",
                        "companyVatNumber": "1443550",
                        "email": "1443551",
                        "fax": "1443552",
                        "homepage": "1443553",
                        "phone1": "1443554",
                        "phone2": "1443555",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/139383067121817306"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "139383067121817306"
                          }
                        }
                      }
                    },
                    {
                      "type": "Company",
                      "id": "139468430511183592",
                      "attributes": {
                        "companyDepartmentName": "1143060",
                        "companyName": "1143061",
                        "companyRegistrationNumber": "1143062",
                        "companyTaxNumber": "1143063",
                        "companyVatNumber": "1143064",
                        "email": "1143065",
                        "fax": "1143066",
                        "homepage": "1143067",
                        "phone1": "1143068",
                        "phone2": "1143069",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/139468425352189669"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "139468425352189669"
                          }
                        }
                      }
                    },
                    {
                      "type": "Company",
                      "id": "139468976517289715",
                      "attributes": {
                        "companyDepartmentName": "1382209",
                        "companyName": "1382210",
                        "companyRegistrationNumber": "1382211",
                        "companyTaxNumber": "1382212",
                        "companyVatNumber": "1382213",
                        "email": "1382214",
                        "fax": "1382215",
                        "homepage": "1382216",
                        "phone1": "1382217",
                        "phone2": "1382218",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/139468971568010992"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "139468971568010992"
                          }
                        }
                      }
                    },
                    {
                      "type": "Company",
                      "id": "139471421637138179",
                      "attributes": {
                        "companyDepartmentName": "1773050",
                        "companyName": "1773051",
                        "companyRegistrationNumber": "1773052",
                        "companyTaxNumber": "1773053",
                        "companyVatNumber": "1773054",
                        "email": "1773055",
                        "fax": "1773056",
                        "homepage": "1773057",
                        "phone1": "1773058",
                        "phone2": "1773059",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/139471415404402432"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "139471415404402432"
                          }
                        }
                      }
                    },
                    {
                      "type": "Company",
                      "id": "139473114877662995",
                      "attributes": {
                        "companyDepartmentName": "1788468",
                        "companyName": "1788469",
                        "companyRegistrationNumber": "1788470",
                        "companyTaxNumber": "1788471",
                        "companyVatNumber": "1788472",
                        "email": "1788473",
                        "fax": "1788474",
                        "homepage": "1788475",
                        "phone1": "1788476",
                        "phone2": "1788477",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/139473108108056336"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "139473108108056336"
                          }
                        }
                      }
                    },
                    {
                      "type": "Company",
                      "id": "139473879826437923",
                      "attributes": {
                        "companyDepartmentName": "1182221",
                        "companyName": "1182222",
                        "companyRegistrationNumber": "1182223",
                        "companyTaxNumber": "1182224",
                        "companyVatNumber": "1182225",
                        "email": "1182226",
                        "fax": "1182227",
                        "homepage": "1182228",
                        "phone1": "1182229",
                        "phone2": "1182230",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/139473872595457824"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "139473872595457824"
                          }
                        }
                      }
                    },
                    {
                      "type": "Company",
                      "id": "139481877793740595",
                      "attributes": {
                        "companyDepartmentName": "1748438",
                        "companyName": "1748439",
                        "companyRegistrationNumber": "1748440",
                        "companyTaxNumber": "1748441",
                        "companyVatNumber": "1748442",
                        "email": "1748443",
                        "fax": "1748444",
                        "homepage": "1748445",
                        "phone1": "1748446",
                        "phone2": "1748447",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/139481864397133616"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "139481864397133616"
                          }
                        }
                      }
                    },
                    {
                      "type": "Company",
                      "id": "139482376815253315",
                      "attributes": {
                        "companyDepartmentName": "1666499",
                        "companyName": "1666500",
                        "companyRegistrationNumber": "1666501",
                        "companyTaxNumber": "1666502",
                        "companyVatNumber": "1666503",
                        "email": "1666504",
                        "fax": "1666505",
                        "homepage": "1666506",
                        "phone1": "1666507",
                        "phone2": "1666508",
                        "status": "DRAFT"
                      },
                      "relationships": {
                        "companyType": {
                          "links": {
                            "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/139482370037258048"
                          },
                          "data": {
                            "type": "CompanyType",
                            "id": "139482370037258048"
                          }
                        }
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/CompanyArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Companies using query parameter filter criteria.",
        "operationId": "GetCompany",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCompany"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/company/142425767874140080"
                  },
                  "data": {
                    "type": "Company",
                    "id": "142425767874140080",
                    "attributes": {
                      "companyDepartmentName": "1310539",
                      "companyName": "1310540",
                      "companyRegistrationNumber": "1310541",
                      "companyTaxNumber": "1310542",
                      "companyVatNumber": "1310543",
                      "email": "1310544",
                      "fax": "1310545",
                      "homepage": "1310546",
                      "phone1": "1310547",
                      "phone2": "1310548",
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "companyType": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/142425761985337261"
                        },
                        "data": {
                          "type": "CompanyType",
                          "id": "142425761985337261"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Company.",
        "operationId": "CreateCompany",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Company",
                  "attributes": {
                    "companyDepartmentName": "1310012",
                    "companyName": "1310013",
                    "companyRegistrationNumber": "1310014",
                    "companyTaxNumber": "1310015",
                    "companyVatNumber": "1310016",
                    "creationTimestamp": "2025-02-21T17:12:57.000+09:23",
                    "email": "1310017",
                    "fax": "1310018",
                    "homepage": "1310019",
                    "lastUpdateTimestamp": "2026-03-23T19:06:47.000+11:47",
                    "phone1": "1310020",
                    "phone2": "1310021",
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "companyType": {
                      "data": {
                        "type": "CompanyType",
                        "id": "${companyTypeId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCompany"
      },
      "x-annotation-common.entity": "Company"
    },
    "/company/create": {
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Company with Main Address.",
        "operationId": "Create Company with Main Address",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "CompanyOperation",
                  "id": "${companyOperationId}",
                  "attributes": {
                    "isMainAddress": false
                  },
                  "relationships": {
                    "company": {
                      "data": {
                        "type": "Company",
                        "id": "${companyId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "address": {
                      "data": {
                        "type": "Address",
                        "id": "${addressId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/CompanySetupOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/company/availableForAccountContextGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find read Available Companies for Company-based Account-Groups.",
        "operationId": "Find read Available Companies for Company-based Account-Groups.",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      }
    },
    "/company/validate": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateExternalCompanyResultResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Validate Company in External Service",
        "operationId": "Validate Company in External Service",
        "parameters": [
          {
            "name": "taxId",
            "in": "query",
            "required": true,
            "description": "Company Tax Id from external service",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "x-annotation-common.entity": "ValidateExternalCompanyResult"
    },
    "/company/{companyId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/company/142425767874140080"
                  },
                  "data": {
                    "type": "Company",
                    "id": "142425767874140080",
                    "attributes": {
                      "companyDepartmentName": "1310553",
                      "companyName": "1310554",
                      "companyRegistrationNumber": "1310555",
                      "companyTaxNumber": "1310556",
                      "companyVatNumber": "1310557",
                      "email": "1310558",
                      "fax": "1310559",
                      "homepage": "1310560",
                      "phone1": "1310561",
                      "phone2": "1310562",
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "companyType": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/142425761985337261"
                        },
                        "data": {
                          "type": "CompanyType",
                          "id": "142425761985337261"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Company by companyId URL path parameter.",
        "operationId": "GetCompanyById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCompany"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/company/142425767874140080"
                  },
                  "data": {
                    "type": "Company",
                    "id": "142425767874140080",
                    "attributes": {
                      "companyDepartmentName": "1310553",
                      "companyName": "1310554",
                      "companyRegistrationNumber": "1310555",
                      "companyTaxNumber": "1310556",
                      "companyVatNumber": "1310557",
                      "email": "1310558",
                      "fax": "1310559",
                      "homepage": "1310560",
                      "phone1": "1310561",
                      "phone2": "1310562",
                      "status": "DRAFT"
                    },
                    "relationships": {
                      "companyType": {
                        "links": {
                          "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/142425761985337261"
                        },
                        "data": {
                          "type": "CompanyType",
                          "id": "142425761985337261"
                        }
                      }
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Company.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyCompany",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Company",
                  "id": "${companyId}",
                  "attributes": {
                    "companyDepartmentName": "1310026",
                    "companyName": "1310027",
                    "companyRegistrationNumber": "1310028",
                    "companyTaxNumber": "1310029",
                    "companyVatNumber": "1310030",
                    "creationTimestamp": "2019-07-13T10:27:46.000-01:00",
                    "email": "1310031",
                    "fax": "1310032",
                    "homepage": "1310033",
                    "lastUpdateTimestamp": "2013-08-05T03:16:17.000-12:15",
                    "phone1": "1310034",
                    "phone2": "1310035",
                    "status": "DRAFT"
                  },
                  "relationships": {
                    "addresses": {
                      "data": [
                        {
                          "type": "Address",
                          "id": "{{addressId}}",
                          "attributes": {}
                        }
                      ]
                    },
                    "companyType": {
                      "data": {
                        "type": "CompanyType",
                        "id": "${companyTypeId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCompany"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Company\nNote: This is only allowed if Company is in DRAFT status\n",
        "operationId": "DeleteCompany",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCompany"
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/company/{companyId}/update": {
      "patch": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Update new Company with Main Address.",
        "operationId": "Update Company with Main Address",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "CompanyOperation",
                  "id": "${companyOperationId}",
                  "attributes": {
                    "isMainAddress": false
                  },
                  "relationships": {
                    "company": {
                      "data": {
                        "type": "Company",
                        "id": "${companyId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    },
                    "address": {
                      "data": {
                        "type": "Address",
                        "id": "${addressId}",
                        "attributes": {},
                        "relationships": {}
                      }
                    }
                  }
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/CompanyOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/company/{companyId}/customerDetails": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find customerDetails by companyId URL path parameter.",
        "operationId": "Find customerDetails by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/company/{companyId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate Company Resource",
        "operationId": "ActivateCompany",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/company/{companyId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate Company Resource",
        "operationId": "DeactivateCompany",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "companyId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/companyType": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 17,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "CompanyType",
                      "id": "131728656392262661",
                      "attributes": {
                        "name": "Government"
                      }
                    },
                    {
                      "type": "CompanyType",
                      "id": "131782433115739142",
                      "attributes": {
                        "name": "CSP"
                      }
                    },
                    {
                      "type": "CompanyType",
                      "id": "139373842094102223",
                      "attributes": {
                        "name": "name_1898445"
                      }
                    },
                    {
                      "type": "CompanyType",
                      "id": "139383067121817306",
                      "attributes": {
                        "name": "name_1013132"
                      }
                    },
                    {
                      "type": "CompanyType",
                      "id": "139468425352189669",
                      "attributes": {
                        "name": "name_1212139"
                      }
                    },
                    {
                      "type": "CompanyType",
                      "id": "139468971568010992",
                      "attributes": {
                        "name": "name_1866819"
                      }
                    },
                    {
                      "type": "CompanyType",
                      "id": "139471415404402432",
                      "attributes": {
                        "name": "name_1585371"
                      }
                    },
                    {
                      "type": "CompanyType",
                      "id": "139473108108056336",
                      "attributes": {
                        "name": "name_1265186"
                      }
                    },
                    {
                      "type": "CompanyType",
                      "id": "139473872595457824",
                      "attributes": {
                        "name": "name_1240630"
                      }
                    },
                    {
                      "type": "CompanyType",
                      "id": "139481864397133616",
                      "attributes": {
                        "name": "name_1116677"
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/CompanyTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Company Types using query parameter filter criteria.",
        "operationId": "GetCompanyType",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCompanyType"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/142425761985337261"
                  },
                  "data": {
                    "type": "CompanyType",
                    "id": "142425761985337261",
                    "attributes": {
                      "name": "name_1518037"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/CompanyTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Company Type.",
        "operationId": "CreateCompanyType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "CompanyType",
                  "attributes": {
                    "name": "name_1517991"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/CompanyTypeRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyCompanyType"
      },
      "x-annotation-common.entity": "CompanyType"
    },
    "/companyType/{companyTypeId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/142425761985337261"
                  },
                  "data": {
                    "type": "CompanyType",
                    "id": "142425761985337261",
                    "attributes": {
                      "name": "name_1518038"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/CompanyTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Company Type by companyTypeId URL path parameter.",
        "operationId": "GetCompanyTypeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCompanyType"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/companyType/142425761985337261"
                  },
                  "data": {
                    "type": "CompanyType",
                    "id": "142425761985337261",
                    "attributes": {
                      "name": "name_1518038"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/CompanyTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Company Type.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyCompanyType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "CompanyType",
                  "id": "${companyTypeId}",
                  "attributes": {
                    "name": "name_1517992"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/CompanyTypeRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyCompanyType"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Company Type\nNote: This is only allowed if Company Type is in DRAFT status\n",
        "operationId": "DeleteCompanyType",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyCompanyType"
      },
      "parameters": [
        {
          "name": "companyTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/companyType/{companyTypeId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate CompanyType Resource",
        "operationId": "ActivateCompanyType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyTypeActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "companyTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/companyType/{companyTypeId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate CompanyType Resource",
        "operationId": "DeactivateCompanyType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyTypeActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "companyTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/deviceType": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "DeviceType",
                      "id": "142425824606296004",
                      "attributes": {
                        "name": "name_1518045"
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Device Types using query parameter filter criteria.",
        "operationId": "GetDeviceType",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readDeviceType"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/deviceType/142425824606296004"
                  },
                  "data": {
                    "type": "DeviceType",
                    "id": "142425824606296004",
                    "attributes": {
                      "name": "name_1518044"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Device Type.",
        "operationId": "CreateDeviceType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "DeviceType",
                  "attributes": {
                    "name": "name_1517993"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/DeviceTypeRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyDeviceType"
      },
      "x-annotation-common.entity": "DeviceType"
    },
    "/deviceType/{deviceTypeId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/deviceType/142425824606296004"
                  },
                  "data": {
                    "type": "DeviceType",
                    "id": "142425824606296004",
                    "attributes": {
                      "name": "name_1518045"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Device Type by deviceTypeId URL path parameter.",
        "operationId": "GetDeviceTypeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readDeviceType"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/deviceType/142425824606296004"
                  },
                  "data": {
                    "type": "DeviceType",
                    "id": "142425824606296004",
                    "attributes": {
                      "name": "name_1518045"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Device Type.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyDeviceType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "DeviceType",
                  "id": "${deviceTypeId}",
                  "attributes": {
                    "name": "name_1517994"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/DeviceTypeRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyDeviceType"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Device Type\nNote: This is only allowed if Device Type is in DRAFT status\n",
        "operationId": "DeleteDeviceType",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyDeviceType"
      },
      "parameters": [
        {
          "name": "deviceTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/deviceType/{deviceTypeId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate DeviceType Resource",
        "operationId": "ActivateDeviceType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceTypeActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "deviceTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/deviceType/{deviceTypeId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate DeviceType Resource",
        "operationId": "DeactivateDeviceType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceTypeActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "deviceTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/person": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "Person",
                      "id": "142425830209886151",
                      "attributes": {
                        "creationTimestamp": "2019-07-16T12:14:42.032Z",
                        "firstname": "1310751",
                        "isCspEmployee": true,
                        "lastUpdateTimestamp": "2019-07-16T12:14:42.207Z",
                        "lastname": "1310752",
                        "nickname": "1310753",
                        "sex": "DIVERSE"
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/PersonArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find People using query parameter filter criteria.",
        "operationId": "GetPerson",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readPerson"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/person/142425830209886151"
                  },
                  "data": {
                    "type": "Person",
                    "id": "142425830209886151",
                    "attributes": {
                      "creationTimestamp": "2019-07-16T12:14:42.032Z",
                      "firstname": "1310745",
                      "isCspEmployee": false,
                      "lastUpdateTimestamp": "2019-07-16T12:14:42.032Z",
                      "lastname": "1310746",
                      "nickname": "1310747",
                      "sex": "DIVERSE"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Person.",
        "operationId": "CreatePerson",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Person",
                  "attributes": {
                    "creationTimestamp": "2010-04-02T01:43:42.000-16:15",
                    "firstname": "1309581",
                    "isCspEmployee": true,
                    "lastUpdateTimestamp": "2026-05-23T19:27:27.000+11:54",
                    "lastname": "1309582",
                    "nickname": "1309583",
                    "sex": "DIVERSE"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/PersonRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyPerson"
      },
      "x-annotation-common.entity": "Person"
    },
    "/person/{personId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/person/142425830209886151"
                  },
                  "data": {
                    "type": "Person",
                    "id": "142425830209886151",
                    "attributes": {
                      "creationTimestamp": "2019-07-16T12:14:42.032Z",
                      "firstname": "1310751",
                      "isCspEmployee": true,
                      "lastUpdateTimestamp": "2019-07-16T12:14:42.207Z",
                      "lastname": "1310752",
                      "nickname": "1310753",
                      "sex": "DIVERSE"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Person by personId URL path parameter.",
        "operationId": "GetPersonById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readPerson"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/person/142425830209886151"
                  },
                  "data": {
                    "type": "Person",
                    "id": "142425830209886151",
                    "attributes": {
                      "creationTimestamp": "2019-07-16T12:14:42.032Z",
                      "firstname": "1310751",
                      "isCspEmployee": true,
                      "lastUpdateTimestamp": "2019-07-16T12:14:42.208Z",
                      "lastname": "1310752",
                      "nickname": "1310753",
                      "sex": "DIVERSE"
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Person.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyPerson",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "Person",
                  "id": "${personId}",
                  "attributes": {
                    "creationTimestamp": "2027-08-25T20:44:48.000+14:17",
                    "firstname": "1309587",
                    "isCspEmployee": true,
                    "lastUpdateTimestamp": "2027-02-24T19:27:09.000+13:16",
                    "lastname": "1309588",
                    "nickname": "1309589",
                    "sex": "FEMALE"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/PersonRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyPerson"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Person\nNote: This is only allowed if Person is in DRAFT status\n",
        "operationId": "DeletePerson",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyPerson"
      },
      "parameters": [
        {
          "name": "personId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/personType": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "meta": {
                    "count": 1,
                    "pageOffset": 0,
                    "pageLimit": 10
                  },
                  "data": [
                    {
                      "type": "PersonType",
                      "id": "142425835209496522",
                      "attributes": {
                        "creationTimestamp": "2019-07-16T12:14:42.629Z",
                        "isCspRole": true,
                        "isUniqueIndicator": false,
                        "lastUpdateTimestamp": "2019-07-16T12:14:42.836Z",
                        "name": "name_1518047",
                        "receiveEmailNotificationIndicator": false
                      }
                    }
                  ],
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/PersonTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Person Types using query parameter filter criteria.",
        "operationId": "GetPersonType",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readPersonType"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/personType/142425835209496522"
                  },
                  "data": {
                    "type": "PersonType",
                    "id": "142425835209496522",
                    "attributes": {
                      "creationTimestamp": "2019-07-16T12:14:42.629Z",
                      "isCspRole": false,
                      "isUniqueIndicator": true,
                      "lastUpdateTimestamp": "2019-07-16T12:14:42.629Z",
                      "name": "name_1518046",
                      "receiveEmailNotificationIndicator": true
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/PersonTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Person Type.",
        "operationId": "CreatePersonType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "PersonType",
                  "attributes": {
                    "creationTimestamp": "2026-12-22T18:01:23.000+11:17",
                    "isCspRole": false,
                    "isUniqueIndicator": false,
                    "lastUpdateTimestamp": "2010-07-01T00:51:31.000-16:44",
                    "name": "name_1517995",
                    "receiveEmailNotificationIndicator": false
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/PersonTypeRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyPersonType"
      },
      "x-annotation-common.entity": "PersonType"
    },
    "/personType/{personTypeId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/personType/142425835209496522"
                  },
                  "data": {
                    "type": "PersonType",
                    "id": "142425835209496522",
                    "attributes": {
                      "creationTimestamp": "2019-07-16T12:14:42.629Z",
                      "isCspRole": true,
                      "isUniqueIndicator": false,
                      "lastUpdateTimestamp": "2019-07-16T12:14:42.836Z",
                      "name": "name_1518047",
                      "receiveEmailNotificationIndicator": false
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/PersonTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Person Type by personTypeId URL path parameter.",
        "operationId": "GetPersonTypeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readPersonType"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "example": {
                  "links": {
                    "self": "http://att-rm.nokiawing.com/services/am/v1/personType/142425835209496522"
                  },
                  "data": {
                    "type": "PersonType",
                    "id": "142425835209496522",
                    "attributes": {
                      "creationTimestamp": "2019-07-16T12:14:42.629Z",
                      "isCspRole": true,
                      "isUniqueIndicator": false,
                      "lastUpdateTimestamp": "2019-07-16T12:14:42.837Z",
                      "name": "name_1518047",
                      "receiveEmailNotificationIndicator": false
                    }
                  },
                  "strict": false
                },
                "schema": {
                  "$ref": "#/components/schemas/PersonTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Person Type.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyPersonType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "PersonType",
                  "id": "${personTypeId}",
                  "attributes": {
                    "creationTimestamp": "2024-07-20T16:07:47.000+07:28",
                    "isCspRole": true,
                    "isUniqueIndicator": false,
                    "lastUpdateTimestamp": "2024-04-20T16:28:12.000+07:48",
                    "name": "name_1517996",
                    "receiveEmailNotificationIndicator": false
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/PersonTypeRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyPersonType"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Person Type\nNote: This is only allowed if Person Type is in DRAFT status\n",
        "operationId": "DeletePersonType",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyPersonType"
      },
      "parameters": [
        {
          "name": "personTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/personType/{personTypeId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate PersonType Resource",
        "operationId": "ActivatePersonType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonTypeActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "personTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/personType/{personTypeId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate PersonType Resource",
        "operationId": "DeactivatePersonType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonTypeActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "personTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/terminationReasonType": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminationReasonTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Termination Reason Types using query parameter filter criteria.",
        "operationId": "GetTerminationReasonType",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readTerminationReasonType"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminationReasonTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Termination Reason Type.",
        "operationId": "CreateTerminationReasonType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "TerminationReasonType",
                  "attributes": {
                    "name": "name_1517985"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/TerminationReasonTypeRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyTerminationReasonType"
      },
      "x-annotation-common.entity": "TerminationReasonType"
    },
    "/terminationReasonType/{terminationReasonTypeId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminationReasonTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Termination Reason Type by terminationReasonTypeId URL path parameter.",
        "operationId": "GetTerminationReasonTypeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readTerminationReasonType"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminationReasonTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Termination Reason Type.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyTerminationReasonType",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "example": {
                "data": {
                  "type": "TerminationReasonType",
                  "id": "${terminationReasonTypeId}",
                  "attributes": {
                    "name": "name_1517986"
                  },
                  "relationships": {}
                },
                "strict": false
              },
              "schema": {
                "$ref": "#/components/schemas/TerminationReasonTypeRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyTerminationReasonType"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Termination Reason Type\nNote: This is only allowed if Termination Reason Type is in DRAFT status\n",
        "operationId": "DeleteTerminationReasonType",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyTerminationReasonType"
      },
      "parameters": [
        {
          "name": "terminationReasonTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSecurityProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSecurityProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccountSecurityProfiles using query parameter filter criteria.",
        "operationId": "GetAccountSecurityProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readAccountSecurityProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new AccountSecurityProfile.",
        "operationId": "CreateAccountSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSecurityProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyAccountSecurityProfile"
      },
      "x-annotation-common.entity": "AccountSecurityProfile"
    },
    "/accountSecurityProfile/{accountSecurityProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSecurityProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find AccountSecurityProfile by accountSecurityProfileId URL path parameter.",
        "operationId": "GetAccountSecurityProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readAccountSecurityProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify AccountSecurityProfile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyAccountSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSecurityProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyAccountSecurityProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing AccountSecurityProfile\nNote: This is only allowed if AccountSecurityProfile is in DRAFT status\n",
        "operationId": "DeleteAccountSecurityProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyAccountSecurityProfile"
      },
      "parameters": [
        {
          "name": "accountSecurityProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSecurityProfile/{accountSecurityProfileId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate AccountSecurityProfile Resource",
        "operationId": "ActivateAccountSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSecurityProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountSecurityProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountSecurityProfile/{accountSecurityProfileId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate AccountSecurityProfile Resource",
        "operationId": "DeactivateAccountSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSecurityProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "accountSecurityProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileSecurityProfile": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSecurityProfileArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find BillingProfileSecurityProfiles using query parameter filter criteria.",
        "operationId": "GetBillingProfileSecurityProfile",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readBillingProfileSecurityProfile"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new BillingProfileSecurityProfile.",
        "operationId": "CreateBillingProfileSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSecurityProfileRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyBillingProfileSecurityProfile"
      },
      "x-annotation-common.entity": "BillingProfileSecurityProfile"
    },
    "/billingProfileSecurityProfile/{billingProfileSecurityProfileId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSecurityProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find BillingProfileSecurityProfile by billingProfileSecurityProfileId URL path parameter.",
        "operationId": "GetBillingProfileSecurityProfileById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readBillingProfileSecurityProfile"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify BillingProfileSecurityProfile.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyBillingProfileSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSecurityProfileRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyBillingProfileSecurityProfile"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing BillingProfileSecurityProfile\nNote: This is only allowed if BillingProfileSecurityProfile is in DRAFT status\n",
        "operationId": "DeleteBillingProfileSecurityProfile",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyBillingProfileSecurityProfile"
      },
      "parameters": [
        {
          "name": "billingProfileSecurityProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileSecurityProfile/{billingProfileSecurityProfileId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate BillingProfileSecurityProfile Resource",
        "operationId": "ActivateBillingProfileSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSecurityProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileSecurityProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/billingProfileSecurityProfile/{billingProfileSecurityProfileId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileSecurityProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate BillingProfileSecurityProfile Resource",
        "operationId": "DeactivateBillingProfileSecurityProfile",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileSecurityProfileActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "billingProfileSecurityProfileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/resourceCounter/{resourceType}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCounterArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Get counters",
        "operationId": "Get counters",
        "parameters": [
          {
            "name": "resourceId",
            "in": "query",
            "required": true,
            "description": "A string of resource IDs (e.g. account IDs), separated by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "counterKey",
            "in": "query",
            "required": true,
            "description": "A string of requested counters, separated by comma",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "resourceType",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customerDetails": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailsArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CustomerDetails using query parameter filter criteria.",
        "operationId": "GetCustomerDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCustomerDetails"
      },
      "x-annotation-common.entity": "CustomerDetails"
    },
    "/customerDetails/{customerDetailsId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CustomerDetails by customerDetailsId URL path parameter.",
        "operationId": "GetCustomerDetailsById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCustomerDetails"
      },
      "parameters": [
        {
          "name": "customerDetailsId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/project": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Projects using query parameter filter criteria.",
        "operationId": "GetProject",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Add count information to result. If not set will be added as default.\n",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readProject"
      },
      "post": {
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Create new Project.",
        "operationId": "CreateProject",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 20,
        "x-annotation-common.acl": "modifyProject"
      },
      "x-annotation-common.entity": "Project"
    },
    "/project/{projectId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Project by projectId URL path parameter.",
        "operationId": "GetProjectById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readProject"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Modify Project.\nYou must provide modified id and all modfied attributes in request body.\n",
        "operationId": "ModifyProject",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "override",
            "in": "query",
            "description": "Change update method. If is set as false or not specified will update only given attributes (no validation for required attributes),\nIf it is true, it will overwrite all the attributes. For the missing ones it will set a blank(null) value, validation for required attributes.\nRelationship behavior does not change.\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "x-annotation-common.oid": 40,
        "x-annotation-common.acl": "modifyProject"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Delete existing Project\nNote: This is only allowed if Project is in DRAFT status\n",
        "operationId": "DeleteProject",
        "x-annotation-common.oid": 50,
        "x-annotation-common.acl": "modifyProject"
      },
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/project/{projectId}/activate": {
      "post": {
        "responses": {
          "200": {
            "description": "Activation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Activate Project Resource",
        "operationId": "ActivateProject",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/project/{projectId}/deactivate": {
      "post": {
        "responses": {
          "200": {
            "description": "Deactivation requested successfully",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Deactivate Project Resource",
        "operationId": "DeactivateProject",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectActivateOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/accountStatus/countriesList": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountLocationsArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "list of countries and number of accounts of certain status per country using query parameter filter criteria.",
        "operationId": "list of countries and number of accounts of certain status per country",
        "parameters": [
          {
            "name": "accountStatus",
            "in": "query",
            "description": "some info",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      }
    },
    "/accountStatus/cityList": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountLocationsArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "list of countries and number of accounts of certain status per city using query parameter filter criteria.",
        "operationId": "list of countries and number of accounts of certain status per city",
        "parameters": [
          {
            "name": "accountStatus",
            "in": "query",
            "required": true,
            "description": "some info",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryName",
            "in": "query",
            "required": true,
            "description": "some info",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      }
    },
    "/ccChargeType": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CcChargeTypeArrayResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CcChargeTypes using query parameter filter criteria.",
        "operationId": "GetCcChargeType",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10,
        "x-annotation-common.acl": "readCcChargeType"
      },
      "x-annotation-common.entity": "CcChargeType"
    },
    "/ccChargeType/{ccChargeTypeId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CcChargeTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find CcChargeType by ccChargeTypeId URL path parameter.",
        "operationId": "GetCcChargeTypeById",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 30,
        "x-annotation-common.acl": "readCcChargeType"
      },
      "parameters": [
        {
          "name": "ccChargeTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/heartbeat": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/HeartbeatResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Endpoint to periodic signal generated by hardware or software to indicate normal operation",
        "operationId": "Endpoint to periodic signal generated by hardware or software to indicate normal operation",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ],
        "x-annotation-common.oid": 10
      }
    },
    "/pendingChanges/{cmpObjectId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/CmpObjectPendingChangeArrayResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to Resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Find Pending Changes",
        "operationId": "Find Pending Changes",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_common.filtered_filter"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageOffset"
          },
          {
            "$ref": "#/components/parameters/trait_common.paged_pageLimit"
          },
          {
            "$ref": "#/components/parameters/trait_common.sorted_sort"
          },
          {
            "$ref": "#/components/parameters/trait_common.included_include"
          }
        ]
      },
      "parameters": [
        {
          "name": "cmpObjectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/pendingChanges/{cmpObjectId}/cancel": {
      "post": {
        "responses": {
          "201": {
            "description": "Operation executed successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Execute pending operation",
        "operationId": "Execute pending operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CmpObjectPendingChangeRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "cmpObjectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/pendingChanges/{cmpObjectId}/remove": {
      "post": {
        "responses": {
          "201": {
            "description": "Operation executed successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Execute pending operation",
        "operationId": "Execute pending operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CmpObjectPendingChangeRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "cmpObjectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/pendingChanges/{cmpObjectId}/resume": {
      "post": {
        "responses": {
          "201": {
            "description": "Operation executed successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Execute pending operation",
        "operationId": "Execute pending operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/CmpObjectPendingChangeRequest"
              }
            }
          },
          "required": true
        }
      },
      "parameters": [
        {
          "name": "cmpObjectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/login/external": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginExternalDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "Login external request - async",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginExternalOperationRequest"
              }
            }
          },
          "required": true
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginExternalCheckedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "Login external pull method - async",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginExternalCheckOperationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/login/external/callback": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Only supported Media Type is application/vnd.api+json",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - please refer to detail message in ErrorObject",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "operationId": "Login external - callback",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginExternalCallbackRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/billingCustomerFileDetail": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingCustomerFileDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Endpoint to periodic signal generated by hardware or software to indicate normal operation",
        "operationId": "Endpoint to periodic signal generated by hardware or software to indicate normal operation",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingCustomerFileDetailOperationRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 10
      }
    },
    "/supplementalPricePlanAssignment": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplementalPricePlanAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "BM API for Enterprise Portal to purchase assigned subscriptionItems",
        "operationId": "BM API for Enterprise Portal to purchase assigned subscriptionItems",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementalPricePlanAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 10
      },
      "patch": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplementalPricePlanAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameter",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission to resource denied",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          },
          "502": {
            "description": "Received error from an inbound service. Please refer to details in ErrorResponse",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/common.ErrorResponse"
                }
              }
            }
          }
        },
        "description": "BM API for Enterprise Portal to purchase assigned subscriptionItems",
        "operationId": "BM API for Enterprise Portal to purchase assigned subscriptionItems",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplementalPricePlanAssignmentRequest"
              }
            }
          },
          "required": true
        },
        "x-annotation-common.oid": 10
      }
    }
  },
  "components": {
    "schemas": {
      "AccountRequest": {
        "title": "AccountRequest",
        "description": "Account based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Account"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountResponse": {
        "title": "AccountResponse",
        "description": "Account based response. Returns single lib.Account object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Account"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountArrayResponse": {
        "title": "AccountsResponse",
        "description": "List of Accounts response. Returns list of lib.Account objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Account"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ReportRelationshipRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lib.Report"
              },
              {
                "$ref": "#/components/schemas/common.Resource"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ReportRelationshipArrayRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/lib.Report"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common.Resource"
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ApplicationTypeRelationshipRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lib.ApplicationType"
              },
              {
                "$ref": "#/components/schemas/common.Resource"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ApplicationTypeRelationshipArrayRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/lib.ApplicationType"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common.Resource"
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "DeviceTypeRelationshipRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lib.DeviceType"
              },
              {
                "$ref": "#/components/schemas/common.Resource"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "DeviceTypeRelationshipArrayRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/lib.DeviceType"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common.Resource"
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ApnGroupRelationshipRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lib.ApnGroup"
              },
              {
                "$ref": "#/components/schemas/common.Resource"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ApnGroupRelationshipArrayRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/lib.ApnGroup"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common.Resource"
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ApnRelationshipRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/lib.Apn"
              },
              {
                "$ref": "#/components/schemas/common.Resource"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ApnRelationshipArrayRequest": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/lib.Apn"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/common.Resource"
                }
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "uuid": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingAccountRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingAccount"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingAccountResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingAccount"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChangeAccountStatusOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountStatus": {
                    "$ref": "#/components/schemas/lib.AccountStatus"
                  },
                  "scheduledStatusChangeTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isPilotMsisdnBillableIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isTerminateBillingImmediatelyEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "simBillingStatus": {
                    "$ref": "#/components/schemas/lib.SimBillingStatus"
                  },
                  "buCode": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountApnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountRoamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountRoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountServiceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSimSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ChangeAccountStatusOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ChangeAccountStatusOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChangeBillableAccountStatusOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "isBillableIndicator": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ChangeBillableAccountStatusOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ChangeBillableAccountStatusOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSetupOperation": {
        "title": "Setup Account",
        "description": "Setup Account (and others elements).",
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "pilotMsisdn": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "project": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Project"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountShippingAddresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/lib.Address"
                            }
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileAddresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/lib.Address"
                            }
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "company": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Company"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "companyCustomAttributeValues": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "accountCustomAttributeValues": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountSetupOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountSetupOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSetupOperationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountSetupOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ValidateExternalAccountOperation": {
        "title": "Validate Account in External System",
        "description": "Validate Account in External System",
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ValidateExternalAccountOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValidateExternalAccountOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ValidateExternalAccountResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "type": "string"
                  },
                  "accountName": {
                    "type": "string"
                  },
                  "accountStatus": {
                    "type": "string"
                  },
                  "operationStatus": {
                    "enum": [
                      "OK",
                      "NOK"
                    ],
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ValidateExternalAccountResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValidateExternalAccountResult"
          }
        },
        "required": [
          "data"
        ]
      },
      "ConfigurableFeatureResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ConfigurableFeature"
          }
        },
        "required": [
          "data"
        ]
      },
      "CmpObjectPendingChangeArrayResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/core.CmpObjectPendingChange"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CmpObjectPendingChangeRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/core.CmpObjectPendingChange"
          }
        },
        "required": [
          "data"
        ]
      },
      "UsageLimitOverrideOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "usageLimitOverride": {
                    "$ref": "#/components/schemas/lib.UsageLimitOverride"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/common.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "UsageLimitOverrideOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UsageLimitOverrideOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "NetworkInterfaces": {
        "type": "object",
        "properties": {
          "OK": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "NOK": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "OK",
          "NOK"
        ]
      },
      "AccountValidationDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "defaultApnGroup": {
                    "$ref": "#/components/schemas/NetworkInterfaces"
                  },
                  "defaultPricePlan": {
                    "$ref": "#/components/schemas/NetworkInterfaces"
                  },
                  "defaultRoamingProfile": {
                    "$ref": "#/components/schemas/NetworkInterfaces"
                  },
                  "defaultServiceProfile": {
                    "$ref": "#/components/schemas/NetworkInterfaces"
                  },
                  "defaultSimSalesProduct": {
                    "$ref": "#/components/schemas/NetworkInterfaces"
                  },
                  "timezone": {
                    "type": "boolean"
                  },
                  "contract": {
                    "type": "boolean"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountValidation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "isValid": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "details": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/AccountValidationDetails"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountValidationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountValidation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountValidationArrayResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountValidation"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountEmmProfileRequest": {
        "title": "AccountEmmProfileRequest",
        "description": "AccountEmmProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountEmmProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountEmmProfileResponse": {
        "title": "AccountEmmProfileResponse",
        "description": "AccountEmmProfile based response. Returns single lib.AccountEmmProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountEmmProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountEmmProfileArrayResponse": {
        "title": "AccountEmmProfilesResponse",
        "description": "List of AccountEmmProfiles response. Returns list of lib.AccountEmmProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountEmmProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountPersonRequest": {
        "title": "AccountPersonRequest",
        "description": "AccountPerson based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountPerson"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountPersonResponse": {
        "title": "AccountPersonResponse",
        "description": "AccountPerson based response. Returns single lib.AccountPerson object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountPerson"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountPersonArrayResponse": {
        "title": "AccountPeopleResponse",
        "description": "List of AccountPeople response. Returns list of lib.AccountPerson objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountPerson"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountRoamingProfileRequest": {
        "title": "AccountRoamingProfileRequest",
        "description": "AccountRoamingProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountRoamingProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountRoamingProfileResponse": {
        "title": "AccountRoamingProfileResponse",
        "description": "AccountRoamingProfile based response. Returns single lib.AccountRoamingProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountRoamingProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountRoamingProfileArrayResponse": {
        "title": "AccountRoamingProfilesResponse",
        "description": "List of AccountRoamingProfiles response. Returns list of lib.AccountRoamingProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountRoamingProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountRoamingProfileActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountRoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountRoamingProfileActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountRoamingProfileActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountRoamingProfileOperationRequest": {
        "title": "Create Account Roaming Profil",
        "description": "Create Account Roaming Profile (and others elements)",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountRoamingProfileOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountRoamingProfileOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountRoamingProfileIsDefault": {
                    "type": "boolean"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountRoamingProfileOperationResultResponse": {
        "title": "Return result for operation AccountRoamingProfileOperation",
        "description": "Return result for operation AccountRoamingProfileOperation",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountRoamingProfileOperationResult"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountRoamingProfileOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Account"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.RoamingProfile"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileRoamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.BillingProfileRoamingProfile"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountRoamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.AccountRoamingProfile"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "RoamingProfileSetDefaultOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountRoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "RoamingProfileSetDefaultOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RoamingProfileSetDefaultOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountServiceProfileRequest": {
        "title": "AccountServiceProfileRequest",
        "description": "AccountServiceProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountServiceProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountServiceProfileResponse": {
        "title": "AccountServiceProfileResponse",
        "description": "AccountServiceProfile based response. Returns single lib.AccountServiceProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountServiceProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountServiceProfileArrayResponse": {
        "title": "AccountServiceProfilesResponse",
        "description": "List of AccountServiceProfiles response. Returns list of lib.AccountServiceProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountServiceProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountServiceProfileActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountServiceProfileActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountServiceProfileActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountServiceProfileOperationRequest": {
        "title": "Create with ServiceProfile",
        "description": "Create with ServiceProfile (and others elements).",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountServiceProfileOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountServiceProfileOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "isDefaultProfileIndicator": {
                    "type": "boolean"
                  },
                  "isSuspendProfileIndicator": {
                    "type": "boolean"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountServiceProfileOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Account"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileServiceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountServiceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountServiceProfileOperationResultResponse": {
        "title": "Create with ServiceProfile",
        "description": "Create with ServiceProfile (and others elements).",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountServiceProfileOperationResult"
          }
        },
        "required": [
          "data"
        ]
      },
      "ServiceProfileSetDefaultOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ServiceProfileSetDefaultOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceProfileSetDefaultOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ServiceProfileSetDefaultSuspendOperation": {
        "$ref": "#/components/schemas/ServiceProfileSetDefaultOperation"
      },
      "ServiceProfileSetDefaultSuspendOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ServiceProfileSetDefaultSuspendOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountingGroupRequest": {
        "title": "AccountingGroupRequest",
        "description": "AccountingGroup based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountingGroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountingGroupResponse": {
        "title": "AccountingGroupResponse",
        "description": "AccountingGroup based response. Returns single lib.AccountingGroup object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountingGroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountingGroupArrayResponse": {
        "title": "AccountingGroupsResponse",
        "description": "List of AccountingGroups response. Returns list of lib.AccountingGroup objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountingGroup"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountingGroupActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountingGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountingGroupActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountingGroupActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountApnGroupRequest": {
        "title": "AccountApnGroupRequest",
        "description": "AccountApnGroup based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountApnGroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountApnGroupResponse": {
        "title": "AccountApnGroupResponse",
        "description": "AccountApnGroup based response. Returns single lib.AccountApnGroup object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountApnGroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountApnGroupArrayResponse": {
        "title": "AccountApnGroupsResponse",
        "description": "List of AccountApnGroups response. Returns list of lib.AccountApnGroup objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountApnGroup"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountApnGroupActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountApnGroupActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountApnGroupActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountApnGroupOperationRequest": {
        "title": "Create with ApnGroup",
        "description": "Create with ApnGroup (and others elements).",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountApnGroupOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountApnGroupOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "isDefaultIndicator": {
                    "type": "boolean"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountApnGroupOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Account"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileApnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountApnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountApnGroupOperationResultResponse": {
        "title": "Create with ApnGroup",
        "description": "Create with ApnGroup (and others elements).",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountApnGroupOperationResult"
          }
        },
        "required": [
          "data"
        ]
      },
      "ApnGroupSetDefaultOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ApnGroupSetDefaultOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApnGroupSetDefaultOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSimSalesProductRequest": {
        "title": "AccountSimSalesProductRequest",
        "description": "AccountSimSalesProduct based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSimSalesProductResponse": {
        "title": "AccountSimSalesProductResponse",
        "description": "AccountSimSalesProduct based response. Returns single lib.AccountSimSalesProduct object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSimSalesProductArrayResponse": {
        "title": "AccountSimSalesProductsResponse",
        "description": "List of AccountSimSalesProducts response. Returns list of lib.AccountSimSalesProduct objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSimSalesProductActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountSimSalesProductActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountSimSalesProductActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSimSalesProductOperationRequest": {
        "title": "Create with SimSalesProduct",
        "description": "Create with SimSalesProduct (and others elements).",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountSimSalesProductOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSimSalesProductOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "isDefaultIndicator": {
                    "type": "boolean"
                  },
                  "accountPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "customFeeOneOff": {
                    "format": "float",
                    "type": "number"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountSimSalesProductOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Account"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSimSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSimSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountSimSalesProductOperationResultResponse": {
        "title": "Create with SimSalesProduct",
        "description": "Create with SimSalesProduct (and others elements).",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountSimSalesProductOperationResult"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimSalesProductSetDefaultOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "SimSalesProductSetDefaultOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SimSalesProductSetDefaultOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSubscriptionItemRequest": {
        "title": "AccountSubscriptionItemRequest",
        "description": "AccountSubscriptionItem based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSubscriptionItemResponse": {
        "title": "AccountSubscriptionItemResponse",
        "description": "AccountSubscriptionItem based response. Returns single lib.AccountSubscriptionItem object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSubscriptionItemArrayResponse": {
        "title": "AccountSubscriptionItemsResponse",
        "description": "List of AccountSubscriptionItems response. Returns list of lib.AccountSubscriptionItem objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSubscriptionItemActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountSubscriptionItemActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountSubscriptionItemActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSubscriptionItemOperationRequest": {
        "title": "Create SubscriptionItem",
        "description": "Create SubscriptionItem (and others elements).",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountSubscriptionItemOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSubscriptionItemOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "billingProfileSubscriptionItem": {
                    "type": "object",
                    "properties": {
                      "customName": {
                        "type": "string"
                      },
                      "recuringFee": {
                        "format": "float",
                        "type": "number"
                      },
                      "onOffFee": {
                        "format": "float",
                        "type": "number"
                      },
                      "status": {
                        "$ref": "#/components/schemas/lib.Status"
                      },
                      "feePercentage": {
                        "format": "double",
                        "type": "number"
                      },
                      "type": {
                        "$ref": "#/components/schemas/lib.SubscriptionItemType"
                      },
                      "priceplanPrepaidStaticMaxSubs": {
                        "format": "int64",
                        "type": "number"
                      },
                      "addonSimCostCap": {
                        "format": "double",
                        "type": "number"
                      }
                    }
                  },
                  "accountSubscriptionItem": {
                    "type": "object",
                    "properties": {
                      "accountSubscriptionItemIsDefault": {
                        "type": "boolean"
                      },
                      "accountSubscriptionItemBasePricePlanIndicator": {
                        "type": "boolean"
                      },
                      "type": {
                        "$ref": "#/components/schemas/lib.SubscriptionItemType"
                      },
                      "status": {
                        "$ref": "#/components/schemas/lib.Status"
                      },
                      "offerId": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountSubscriptionItemOperationResultResponse": {
        "title": "Return result for operation AccountSubscriptionItemOperation",
        "description": "Return result for operation AccountSubscriptionItemOperation",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountSubscriptionItemOperationResult"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSubscriptionItemOperationResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Account"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.SubscriptionItem"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.BillingProfileSubscriptionItem"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "SubscriptionItemSetDefaultOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "SubscriptionItemSetDefaultOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionItemSetDefaultOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSubscriptionItemCountersResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "queryParameters": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "counters": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/lib.CmpObjectCounter"
                            }
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountNoteRequest": {
        "title": "AccountNoteRequest",
        "description": "AccountNote based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountNote"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountNoteResponse": {
        "title": "AccountNoteResponse",
        "description": "AccountNote based response. Returns single lib.AccountNote object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountNote"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountNoteArrayResponse": {
        "title": "AccountNotesResponse",
        "description": "List of AccountNotes response. Returns list of lib.AccountNote objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountNote"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountNoteActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountNote"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountNoteActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountNoteActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimSalesProductRequest": {
        "title": "SimSalesProductRequest",
        "description": "SimSalesProduct based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SimSalesProduct"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimSalesProductResponse": {
        "title": "SimSalesProductResponse",
        "description": "SimSalesProduct based response. Returns single lib.SimSalesProduct object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SimSalesProduct"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimSalesProductArrayResponse": {
        "title": "SimSalesProductsResponse",
        "description": "List of SimSalesProducts response. Returns list of lib.SimSalesProduct objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SimSalesProduct"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractRequest": {
        "title": "ContractRequest",
        "description": "Contract based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Contract"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractResponse": {
        "title": "ContractResponse",
        "description": "Contract based response. Returns single lib.Contract object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Contract"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractArrayResponse": {
        "title": "ContractsResponse",
        "description": "List of Contracts response. Returns list of lib.Contract objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Contract"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ChangeContractLifecycleStatusOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ChangeContractLifecycleStatusOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ChangeContractLifecycleStatusOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractNetworkEntitlementType": {
        "enum": [
          "APN-GROUPS",
          "ROAMING-PROFILES",
          "SERVICE-PROFILES",
          "SECURITY-PROFILES"
        ],
        "type": "string"
      },
      "ContractAssignNetworkEntitlementOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "entitlementType": {
                    "$ref": "#/components/schemas/ContractNetworkEntitlementType"
                  },
                  "isDefaultResource": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ContractAssignNetworkEntitlementOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContractAssignNetworkEntitlementOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractUnAssignNetworkEntitlementOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "entitlementType": {
                    "$ref": "#/components/schemas/ContractNetworkEntitlementType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ContractUnAssignNetworkEntitlementOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContractUnAssignNetworkEntitlementOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractCopyNetworkEntitlementOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "from": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "to": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ContractCopyNetworkEntitlementOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContractCopyNetworkEntitlementOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractDifference": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "before": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "after": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ContractDifferenceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContractDifference"
          }
        },
        "required": [
          "data"
        ]
      },
      "ResellerProfileRequest": {
        "title": "ResellerProfileRequest",
        "description": "ResellerProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ResellerProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "ResellerProfileResponse": {
        "title": "ResellerProfileResponse",
        "description": "ResellerProfile based response. Returns single lib.ResellerProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ResellerProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "ResellerProfileArrayResponse": {
        "title": "ResellerProfilesResponse",
        "description": "List of ResellerProfiles response. Returns list of lib.ResellerProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ResellerProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ResellerProfileSetupOperation": {
        "title": "Setup ResellerProfile",
        "description": "Setup ResellerProfile (and others elements).",
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "resellerProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ResellerProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountingGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountingGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/common.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ResellerProfileSetupOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResellerProfileSetupOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ResellerProfileSetupOperationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResellerProfileSetupOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "CommitmentTierRequest": {
        "title": "CommitmentTierRequest",
        "description": "CommitmentTier based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CommitmentTier"
          }
        },
        "required": [
          "data"
        ]
      },
      "CommitmentTierResponse": {
        "title": "CommitmentTierResponse",
        "description": "CommitmentTier based response. Returns single lib.CommitmentTier object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CommitmentTier"
          }
        },
        "required": [
          "data"
        ]
      },
      "CommitmentTierArrayResponse": {
        "title": "CommitmentTiersResponse",
        "description": "List of CommitmentTiers response. Returns list of lib.CommitmentTier objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.CommitmentTier"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractApnGroupRequest": {
        "title": "ContractApnGroupRequest",
        "description": "ContractApnGroup based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractApnGroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractApnGroupResponse": {
        "title": "ContractApnGroupResponse",
        "description": "ContractApnGroup based response. Returns single lib.ContractApnGroup object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractApnGroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractApnGroupArrayResponse": {
        "title": "ContractApnGroupsResponse",
        "description": "List of ContractApnGroups response. Returns list of lib.ContractApnGroup objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContractApnGroup"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractRoamingProfileRequest": {
        "title": "ContractRoamingProfileRequest",
        "description": "ContractRoamingProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractRoamingProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractRoamingProfileResponse": {
        "title": "ContractRoamingProfileResponse",
        "description": "ContractRoamingProfile based response. Returns single lib.ContractRoamingProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractRoamingProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractRoamingProfileArrayResponse": {
        "title": "ContractRoamingProfilesResponse",
        "description": "List of ContractRoamingProfiles response. Returns list of lib.ContractRoamingProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContractRoamingProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractServiceProfileRequest": {
        "title": "ContractServiceProfileRequest",
        "description": "ContractServiceProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractServiceProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractServiceProfileResponse": {
        "title": "ContractServiceProfileResponse",
        "description": "ContractServiceProfile based response. Returns single lib.ContractServiceProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractServiceProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractServiceProfileArrayResponse": {
        "title": "ContractServiceProfilesResponse",
        "description": "List of ContractServiceProfiles response. Returns list of lib.ContractServiceProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContractServiceProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractSecurityProfileRequest": {
        "title": "ContractSecurityProfileRequest",
        "description": "ContractSecurityProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractSecurityProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractSecurityProfileResponse": {
        "title": "ContractSecurityProfileResponse",
        "description": "ContractSecurityProfile based response. Returns single lib.ContractSecurityProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractSecurityProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractSecurityProfileArrayResponse": {
        "title": "ContractSecurityProfilesResponse",
        "description": "List of ContractSecurityProfiles response. Returns list of lib.ContractSecurityProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContractSecurityProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractSimSalesProductRequest": {
        "title": "ContractSimSalesProductRequest",
        "description": "ContractSimSalesProduct based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractSimSalesProduct"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractSimSalesProductResponse": {
        "title": "ContractSimSalesProductResponse",
        "description": "ContractSimSalesProduct based response. Returns single lib.ContractSimSalesProduct object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractSimSalesProduct"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractSimSalesProductArrayResponse": {
        "title": "ContractSimSalesProductsResponse",
        "description": "List of ContractSimSalesProducts response. Returns list of lib.ContractSimSalesProduct objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContractSimSalesProduct"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractSubscriptionItemRequest": {
        "title": "ContractSubscriptionItemRequest",
        "description": "ContractSubscriptionItem based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractSubscriptionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractSubscriptionItemResponse": {
        "title": "ContractSubscriptionItemResponse",
        "description": "ContractSubscriptionItem based response. Returns single lib.ContractSubscriptionItem object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractSubscriptionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractSubscriptionItemArrayResponse": {
        "title": "ContractSubscriptionItemsResponse",
        "description": "List of ContractSubscriptionItems response. Returns list of lib.ContractSubscriptionItem objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContractSubscriptionItem"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "DiscountTierRequest": {
        "title": "DiscountTierRequest",
        "description": "DiscountTier based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.DiscountTier"
          }
        },
        "required": [
          "data"
        ]
      },
      "DiscountTierResponse": {
        "title": "DiscountTierResponse",
        "description": "DiscountTier based response. Returns single lib.DiscountTier object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.DiscountTier"
          }
        },
        "required": [
          "data"
        ]
      },
      "DiscountTierArrayResponse": {
        "title": "DiscountTiersResponse",
        "description": "List of DiscountTiers response. Returns list of lib.DiscountTier objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.DiscountTier"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SftpPropertiesRequest": {
        "title": "SftpPropertiesRequest",
        "description": "SftpProperties based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SftpProperties"
          }
        },
        "required": [
          "data"
        ]
      },
      "SftpPropertiesResponse": {
        "title": "SftpPropertiesResponse",
        "description": "SftpProperties based response. Returns single lib.SftpProperties object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SftpProperties"
          }
        },
        "required": [
          "data"
        ]
      },
      "SftpPropertiesArrayResponse": {
        "title": "SftpPropertiesResponse",
        "description": "List of SftpProperties response. Returns list of lib.SftpProperties objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SftpProperties"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountDiscountRequest": {
        "title": "AccountDiscountRequest",
        "description": "AccountDiscount based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountDiscount"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountDiscountResponse": {
        "title": "AccountDiscountResponse",
        "description": "AccountDiscount based response. Returns single lib.AccountDiscount object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountDiscount"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountDiscountArrayResponse": {
        "title": "AccountDiscountsResponse",
        "description": "List of AccountDiscounts response. Returns list of lib.AccountDiscount objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountDiscount"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountCommitmentRequest": {
        "title": "AccountCommitmentRequest",
        "description": "AccountCommitment based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountCommitment"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountCommitmentResponse": {
        "title": "AccountCommitmentResponse",
        "description": "AccountCommitment based response. Returns single lib.AccountCommitment object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountCommitment"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountCommitmentArrayResponse": {
        "title": "AccountCommitmentsResponse",
        "description": "List of AccountCommitments response. Returns list of lib.AccountCommitment objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountCommitment"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SimCommitmentRequest": {
        "title": "SimCommitmentRequest",
        "description": "SimCommitment based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SimCommitment"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimCommitmentResponse": {
        "title": "SimCommitmentResponse",
        "description": "SimCommitment based response. Returns single lib.SimCommitment object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SimCommitment"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimCommitmentArrayResponse": {
        "title": "SimCommitmentsResponse",
        "description": "List of SimCommitments response. Returns list of lib.SimCommitment objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SimCommitment"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "RemoteStorageRequest": {
        "title": "RemoteStorageRequest",
        "description": "RemoteStorage based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.RemoteStorage"
          }
        },
        "required": [
          "data"
        ]
      },
      "RemoteStorageResponse": {
        "title": "RemoteStorageResponse",
        "description": "RemoteStorage based response. Returns single lib.RemoteStorage object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.RemoteStorage"
          }
        },
        "required": [
          "data"
        ]
      },
      "RemoteStorageArrayResponse": {
        "title": "RemoteStoragesResponse",
        "description": "List of RemoteStorages response. Returns list of lib.RemoteStorage objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.RemoteStorage"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "RemoteStorageActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RemoteStorage"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "RemoteStorageActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RemoteStorageActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractChargeCodeDetailResponse": {
        "title": "ContractChargeCodeDetailResponse",
        "description": "ContractChargeCodeDetail based response. Returns single lib.ContractChargeCodeDetail object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractChargeCodeDetail"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractChargeCodeDetailArrayResponse": {
        "title": "ContractChargeCodeDetailsResponse",
        "description": "List of ContractChargeCodeDetails response. Returns list of lib.ContractChargeCodeDetail objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContractChargeCodeDetail"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractChargeTypeDetailResponse": {
        "title": "ContractChargeTypeDetailResponse",
        "description": "ContractChargeTypeDetail based response. Returns single lib.ContractChargeTypeDetail object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ContractChargeTypeDetail"
          }
        },
        "required": [
          "data"
        ]
      },
      "ContractChargeTypeDetailArrayResponse": {
        "title": "ContractChargeTypeDetailsResponse",
        "description": "List of ContractChargeTypeDetails response. Returns list of lib.ContractChargeTypeDetail objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ContractChargeTypeDetail"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportRequest": {
        "title": "AccountReportRequest",
        "description": "AccountReport based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReport"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportResponse": {
        "title": "AccountReportResponse",
        "description": "AccountReport based response. Returns single lib.AccountReport object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReport"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportArrayResponse": {
        "title": "AccountReportsResponse",
        "description": "List of AccountReports response. Returns list of lib.AccountReport objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountReport"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportParameterValueRequest": {
        "title": "AccountReportParameterValueRequest",
        "description": "AccountReportParameterValue based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReportParameterValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportParameterValueResponse": {
        "title": "AccountReportParameterValueResponse",
        "description": "AccountReportParameterValue based response. Returns single lib.AccountReportParameterValue object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReportParameterValue"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportParameterValueArrayResponse": {
        "title": "AccountReportParameterValuesResponse",
        "description": "List of AccountReportParameterValues response. Returns list of lib.AccountReportParameterValue objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountReportParameterValue"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportResultRequest": {
        "title": "AccountReportResultRequest",
        "description": "AccountReportResult based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReportResult"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportResultResponse": {
        "title": "AccountReportResultResponse",
        "description": "AccountReportResult based response. Returns single lib.AccountReportResult object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReportResult"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportResultArrayResponse": {
        "title": "AccountReportResultsResponse",
        "description": "List of AccountReportResults response. Returns list of lib.AccountReportResult objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountReportResult"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportResultActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountReportResult"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountReportResultActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountReportResultActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportScheduleRequest": {
        "title": "AccountReportScheduleRequest",
        "description": "AccountReportSchedule based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReportSchedule"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportScheduleResponse": {
        "title": "AccountReportScheduleResponse",
        "description": "AccountReportSchedule based response. Returns single lib.AccountReportSchedule object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReportSchedule"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportScheduleArrayResponse": {
        "title": "AccountReportSchedulesResponse",
        "description": "List of AccountReportSchedules response. Returns list of lib.AccountReportSchedule objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountReportSchedule"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserReportRequest": {
        "title": "UserReportRequest",
        "description": "UserReport based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserReport"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserReportResponse": {
        "title": "UserReportResponse",
        "description": "UserReport based response. Returns single lib.UserReport object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.UserReport"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserReportArrayResponse": {
        "title": "UserReportsResponse",
        "description": "List of UserReports response. Returns list of lib.UserReport objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.UserReport"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportResultConversionRequest": {
        "title": "AccountReportResultConversionRequest",
        "description": "AccountReportResultConversion based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReportResultConversion"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportResultConversionResponse": {
        "title": "AccountReportResultConversionResponse",
        "description": "AccountReportResultConversion based response. Returns single lib.AccountReportResultConversion object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountReportResultConversion"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportResultConversionArrayResponse": {
        "title": "AccountReportResultConversionsResponse",
        "description": "List of AccountReportResultConversions response. Returns list of lib.AccountReportResultConversion objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountReportResultConversion"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountReportResultConversionActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountReportResultConversion"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountReportResultConversionActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountReportResultConversionActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleDefinitionRequest": {
        "title": "BillingCycleDefinitionRequest",
        "description": "BillingCycleDefinition based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingCycleDefinition"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleDefinitionResponse": {
        "title": "BillingCycleDefinitionResponse",
        "description": "BillingCycleDefinition based response. Returns single lib.BillingCycleDefinition object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingCycleDefinition"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleDefinitionArrayResponse": {
        "title": "BillingCycleDefinitionsResponse",
        "description": "List of BillingCycleDefinitions response. Returns list of lib.BillingCycleDefinition objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingCycleDefinition"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleDefinitionActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingCycleDefinition"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingCycleDefinitionActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingCycleDefinitionActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleInstanceRequest": {
        "title": "BillingCycleInstanceRequest",
        "description": "BillingCycleInstance based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingCycleInstance"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleInstanceResponse": {
        "title": "BillingCycleInstanceResponse",
        "description": "BillingCycleInstance based response. Returns single lib.BillingCycleInstance object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingCycleInstance"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleInstanceArrayResponse": {
        "title": "BillingCycleInstancesResponse",
        "description": "List of BillingCycleInstances response. Returns list of lib.BillingCycleInstance objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingCycleInstance"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleInstanceHistoryRequest": {
        "title": "BillingCycleInstanceHistoryRequest",
        "description": "BillingCycleInstanceHistory based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingCycleInstanceHistory"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleInstanceHistoryResponse": {
        "title": "BillingCycleInstanceHistoryResponse",
        "description": "BillingCycleInstanceHistory based response. Returns single lib.BillingCycleInstanceHistory object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingCycleInstanceHistory"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCycleInstanceHistoryArrayResponse": {
        "title": "BillingCycleInstanceHistoriesResponse",
        "description": "List of BillingCycleInstanceHistories response. Returns list of lib.BillingCycleInstanceHistory objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingCycleInstanceHistory"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillrunDetailRequest": {
        "title": "BillrunDetailRequest",
        "description": "BillrunDetail based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillrunDetail"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillrunDetailResponse": {
        "title": "BillrunDetailResponse",
        "description": "BillrunDetail based response. Returns single lib.BillrunDetail object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillrunDetail"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillrunDetailArrayResponse": {
        "title": "BillrunDetailsResponse",
        "description": "List of BillrunDetails response. Returns list of lib.BillrunDetail objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillrunDetail"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileRequest": {
        "title": "BillingProfileRequest",
        "description": "BillingProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileResponse": {
        "title": "BillingProfileResponse",
        "description": "BillingProfile based response. Returns single lib.BillingProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileArrayResponse": {
        "title": "BillingProfilesResponse",
        "description": "List of BillingProfiles response. Returns list of lib.BillingProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CreateBillingProfileOperationRequest": {
        "title": "Create Billing Profile with Address",
        "description": "Create new Billing Profile with Address",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateBillingProfileOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "CreateBillingProfileOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "company": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.BillingProfile"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "address": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Address"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "UpdateBillingProfilePrepaidAutoRenewalModeOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "prepaidPriceplanRenewalMode": {
                    "$ref": "#/components/schemas/lib.PrepaidRenewalMode"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "UpdateBillingProfilePrepaidAutoRenewalModeOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UpdateBillingProfilePrepaidAutoRenewalModeOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AssignUnassignTimesliceModelSetupOperation": {
        "title": "Setup Assign Unassign TimesliceModel",
        "description": "Setup Assign Unassign TimesliceModel (and others elements).",
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "timesliceModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TimesliceModel"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AssignUnassignTimesliceModelSetupOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AssignUnassignTimesliceModelSetupOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AssignUnassignTimesliceModelSetupOperationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AssignUnassignTimesliceModelSetupOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileApnGroupRequest": {
        "title": "BillingProfileApnGroupRequest",
        "description": "BillingProfileApnGroup based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileApnGroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileApnGroupResponse": {
        "title": "BillingProfileApnGroupResponse",
        "description": "BillingProfileApnGroup based response. Returns single lib.BillingProfileApnGroup object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileApnGroup"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileApnGroupArrayResponse": {
        "title": "BillingProfileApnGroupsResponse",
        "description": "List of BillingProfileApnGroups response. Returns list of lib.BillingProfileApnGroup objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingProfileApnGroup"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileApnGroupActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingProfileApnGroupActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingProfileApnGroupActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileLogisticStatusRequest": {
        "title": "BillingProfileLogisticStatusRequest",
        "description": "BillingProfileLogisticStatus based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileLogisticStatus"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileLogisticStatusResponse": {
        "title": "BillingProfileLogisticStatusResponse",
        "description": "BillingProfileLogisticStatus based response. Returns single lib.BillingProfileLogisticStatus object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileLogisticStatus"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileLogisticStatusArrayResponse": {
        "title": "BillingProfileLogisticStatusesResponse",
        "description": "List of BillingProfileLogisticStatuses response. Returns list of lib.BillingProfileLogisticStatus objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingProfileLogisticStatus"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileRoamingProfileRequest": {
        "title": "BillingProfileRoamingProfileRequest",
        "description": "BillingProfileRoamingProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileRoamingProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileRoamingProfileResponse": {
        "title": "BillingProfileRoamingProfileResponse",
        "description": "BillingProfileRoamingProfile based response. Returns single lib.BillingProfileRoamingProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileRoamingProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileRoamingProfileArrayResponse": {
        "title": "BillingProfileRoamingProfilesResponse",
        "description": "List of BillingProfileRoamingProfiles response. Returns list of lib.BillingProfileRoamingProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingProfileRoamingProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileRoamingProfileActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileRoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingProfileRoamingProfileActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingProfileRoamingProfileActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileServiceProfileRequest": {
        "title": "BillingProfileServiceProfileRequest",
        "description": "BillingProfileServiceProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileServiceProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileServiceProfileResponse": {
        "title": "BillingProfileServiceProfileResponse",
        "description": "BillingProfileServiceProfile based response. Returns single lib.BillingProfileServiceProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileServiceProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileServiceProfileArrayResponse": {
        "title": "BillingProfileServiceProfilesResponse",
        "description": "List of BillingProfileServiceProfiles response. Returns list of lib.BillingProfileServiceProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingProfileServiceProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileServiceProfileActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingProfileServiceProfileActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingProfileServiceProfileActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSimSalesProductRequest": {
        "title": "BillingProfileSimSalesProductRequest",
        "description": "BillingProfileSimSalesProduct based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSimSalesProductResponse": {
        "title": "BillingProfileSimSalesProductResponse",
        "description": "BillingProfileSimSalesProduct based response. Returns single lib.BillingProfileSimSalesProduct object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSimSalesProductArrayResponse": {
        "title": "BillingProfileSimSalesProductsResponse",
        "description": "List of BillingProfileSimSalesProducts response. Returns list of lib.BillingProfileSimSalesProduct objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSimSalesProductActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingProfileSimSalesProductActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingProfileSimSalesProductActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSubscriptionItemRequest": {
        "title": "BillingProfileSubscriptionItemRequest",
        "description": "BillingProfileSubscriptionItem based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileSubscriptionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSubscriptionItemResponse": {
        "title": "BillingProfileSubscriptionItemResponse",
        "description": "BillingProfileSubscriptionItem based response. Returns single lib.BillingProfileSubscriptionItem object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileSubscriptionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSubscriptionItemArrayResponse": {
        "title": "BillingProfileSubscriptionItemsResponse",
        "description": "List of BillingProfileSubscriptionItems response. Returns list of lib.BillingProfileSubscriptionItem objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingProfileSubscriptionItem"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSubscriptionItemActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingProfileSubscriptionItemActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingProfileSubscriptionItemActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionItemRequest": {
        "title": "SubscriptionItemRequest",
        "description": "SubscriptionItem based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SubscriptionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionItemResponse": {
        "title": "SubscriptionItemResponse",
        "description": "SubscriptionItem based response. Returns single lib.SubscriptionItem object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SubscriptionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionItemArrayResponse": {
        "title": "SubscriptionItemsResponse",
        "description": "List of SubscriptionItems response. Returns list of lib.SubscriptionItem objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SubscriptionItem"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SimSubscriptionRequest": {
        "title": "SimSubscriptionRequest",
        "description": "SimSubscription based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SimSubscription"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimSubscriptionResponse": {
        "title": "SimSubscriptionResponse",
        "description": "SimSubscription based response. Returns single lib.SimSubscription object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SimSubscription"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimSubscriptionArrayResponse": {
        "title": "SimSubscriptionsResponse",
        "description": "List of SimSubscriptions response. Returns list of lib.SimSubscription objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SimSubscription"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ImsiMsubNetworkPriceplanRequest": {
        "title": "ImsiMsubNetworkPriceplanRequest",
        "description": "ImsiMsubNetworkPriceplan based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ImsiMsubNetworkPriceplan"
          }
        },
        "required": [
          "data"
        ]
      },
      "ImsiMsubNetworkPriceplanResponse": {
        "title": "ImsiMsubNetworkPriceplanResponse",
        "description": "ImsiMsubNetworkPriceplan based response. Returns single lib.ImsiMsubNetworkPriceplan object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ImsiMsubNetworkPriceplan"
          }
        },
        "required": [
          "data"
        ]
      },
      "ImsiMsubNetworkPriceplanArrayResponse": {
        "title": "ImsiMsubNetworkPriceplansResponse",
        "description": "List of ImsiMsubNetworkPriceplans response. Returns list of lib.ImsiMsubNetworkPriceplan objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ImsiMsubNetworkPriceplan"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionRequest": {
        "title": "SubscriptionRequest",
        "description": "Subscription based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Subscription"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionResponse": {
        "title": "SubscriptionResponse",
        "description": "Subscription based response. Returns single lib.Subscription object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Subscription"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionArrayResponse": {
        "title": "SubscriptionsResponse",
        "description": "List of Subscriptions response. Returns list of lib.Subscription objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Subscription"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionItemDetailResponse": {
        "title": "SubscriptionItemDetailResponse",
        "description": "SubscriptionItemDetail based response. Returns single lib.SubscriptionItemDetail object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SubscriptionItemDetail"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionItemDetailArrayResponse": {
        "title": "SubscriptionItemDetailsResponse",
        "description": "List of SubscriptionItemDetails response. Returns list of lib.SubscriptionItemDetail objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SubscriptionItemDetail"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SimSalesProductDetailResponse": {
        "title": "SimSalesProductDetailResponse",
        "description": "SimSalesProductDetail based response. Returns single lib.SimSalesProductDetail object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SimSalesProductDetail"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimSalesProductDetailArrayResponse": {
        "title": "SimSalesProductDetailsResponse",
        "description": "List of SimSalesProductDetails response. Returns list of lib.SimSalesProductDetail objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SimSalesProductDetail"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SimAddonResponse": {
        "title": "SimAddonResponse",
        "description": "SimAddon based response. Returns single lib.SimAddon object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SimAddon"
          }
        },
        "required": [
          "data"
        ]
      },
      "SimAddonArrayResponse": {
        "title": "SimAddonsResponse",
        "description": "List of SimAddons response. Returns list of lib.SimAddon objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SimAddon"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSimSalesProductDetailResponse": {
        "title": "AccountSimSalesProductDetailResponse",
        "description": "AccountSimSalesProductDetail based response. Returns single lib.AccountSimSalesProductDetail object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountSimSalesProductDetail"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSimSalesProductDetailArrayResponse": {
        "title": "AccountSimSalesProductDetailsResponse",
        "description": "List of AccountSimSalesProductDetails response. Returns list of lib.AccountSimSalesProductDetail objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountSimSalesProductDetail"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeTypeTaxItemResponse": {
        "title": "ChargeTypeTaxItemResponse",
        "description": "ChargeTypeTaxItem based response. Returns single lib.ChargeTypeTaxItem object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ChargeTypeTaxItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeTypeTaxItemArrayResponse": {
        "title": "ChargeTypeTaxItemsResponse",
        "description": "List of ChargeTypeTaxItems response. Returns list of lib.ChargeTypeTaxItem objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ChargeTypeTaxItem"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargesResponse": {
        "title": "ChargesResponse",
        "description": "Charges based response. Returns single lib.Charges object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Charges"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargesArrayResponse": {
        "title": "ChargesResponse",
        "description": "List of Charges response. Returns list of lib.Charges objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Charges"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TaxItemResponse": {
        "title": "TaxItemResponse",
        "description": "TaxItem based response. Returns single lib.TaxItem object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TaxItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "TaxItemArrayResponse": {
        "title": "TaxItemsResponse",
        "description": "List of TaxItems response. Returns list of lib.TaxItem objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.TaxItem"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TaxProfileResponse": {
        "title": "TaxProfileResponse",
        "description": "TaxProfile based response. Returns single lib.TaxProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TaxProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "TaxProfileArrayResponse": {
        "title": "TaxProfilesResponse",
        "description": "List of TaxProfiles response. Returns list of lib.TaxProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.TaxProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CurrencyDetailResponse": {
        "title": "CurrencyDetailResponse",
        "description": "CurrencyDetail based response. Returns single lib.CurrencyDetail object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CurrencyDetail"
          }
        },
        "required": [
          "data"
        ]
      },
      "CurrencyDetailArrayResponse": {
        "title": "CurrencyDetailsResponse",
        "description": "List of CurrencyDetails response. Returns list of lib.CurrencyDetail objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.CurrencyDetail"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeCorrectionRequest": {
        "title": "ChargeCorrectionRequest",
        "description": "ChargeCorrection based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ChargeCorrection"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeCorrectionResponse": {
        "title": "ChargeCorrectionResponse",
        "description": "ChargeCorrection based response. Returns single lib.ChargeCorrection object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ChargeCorrection"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeCorrectionArrayResponse": {
        "title": "ChargeCorrectionsResponse",
        "description": "List of ChargeCorrections response. Returns list of lib.ChargeCorrection objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ChargeCorrection"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeCorrectionActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ChargeCorrection"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ChargeCorrectionActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ChargeCorrectionActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeCorrectionItemStatsArrayResponse": {
        "title": "Get ChargeCorrectionItemStats",
        "description": "Get ChargeCorrectionItemStats",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargeCorrectionItemStats"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeCorrectionItemStats": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "chargeCorrectionId": {
                    "type": "string"
                  },
                  "totalChargeCorrectionItems": {
                    "type": "integer"
                  },
                  "failedChargeCorrectionItems": {
                    "type": "integer"
                  },
                  "successChargeCorrectionItems": {
                    "type": "string"
                  },
                  "lastProcessedChargeCorrectionItem": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ChargeCorrectionItemRequest": {
        "title": "ChargeCorrectionItemRequest",
        "description": "ChargeCorrectionItem based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ChargeCorrectionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeCorrectionItemResponse": {
        "title": "ChargeCorrectionItemResponse",
        "description": "ChargeCorrectionItem based response. Returns single lib.ChargeCorrectionItem object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ChargeCorrectionItem"
          }
        },
        "required": [
          "data"
        ]
      },
      "ChargeCorrectionItemArrayResponse": {
        "title": "ChargeCorrectionItemsResponse",
        "description": "List of ChargeCorrectionItems response. Returns list of lib.ChargeCorrectionItem objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ChargeCorrectionItem"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionChainRequest": {
        "title": "SubscriptionChainRequest",
        "description": "SubscriptionChain based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SubscriptionChain"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionChainResponse": {
        "title": "SubscriptionChainResponse",
        "description": "SubscriptionChain based response. Returns single lib.SubscriptionChain object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SubscriptionChain"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionChainArrayResponse": {
        "title": "SubscriptionChainsResponse",
        "description": "List of SubscriptionChains response. Returns list of lib.SubscriptionChain objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SubscriptionChain"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionSupplementRequest": {
        "title": "SubscriptionSupplementRequest",
        "description": "SubscriptionSupplement based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SubscriptionSupplement"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionSupplementResponse": {
        "title": "SubscriptionSupplementResponse",
        "description": "SubscriptionSupplement based response. Returns single lib.SubscriptionSupplement object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.SubscriptionSupplement"
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionSupplementArrayResponse": {
        "title": "SubscriptionSupplementsResponse",
        "description": "List of SubscriptionSupplements response. Returns list of lib.SubscriptionSupplement objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SubscriptionSupplement"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "OfferTypeResponse": {
        "title": "OfferTypeResponse",
        "description": "OfferType based response. Returns single lib.OfferType object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OfferType"
          }
        },
        "required": [
          "data"
        ]
      },
      "OfferTypeArrayResponse": {
        "title": "OfferTypesResponse",
        "description": "List of OfferTypes response. Returns list of lib.OfferType objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.OfferType"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "OfferTypeChargeTriggerResponse": {
        "title": "OfferTypeChargeTriggerResponse",
        "description": "OfferTypeChargeTrigger based response. Returns single lib.OfferTypeChargeTrigger object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.OfferTypeChargeTrigger"
          }
        },
        "required": [
          "data"
        ]
      },
      "OfferTypeChargeTriggerArrayResponse": {
        "title": "OfferTypeChargeTriggersResponse",
        "description": "List of OfferTypeChargeTriggers response. Returns list of lib.OfferTypeChargeTrigger objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.OfferTypeChargeTrigger"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AddressRequest": {
        "title": "AddressRequest",
        "description": "Address based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Address"
          }
        },
        "required": [
          "data"
        ]
      },
      "AddressResponse": {
        "title": "AddressResponse",
        "description": "Address based response. Returns single lib.Address object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Address"
          }
        },
        "required": [
          "data"
        ]
      },
      "AddressArrayResponse": {
        "title": "AddressesResponse",
        "description": "List of Addresses response. Returns list of lib.Address objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Address"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AddressTypeRequest": {
        "title": "AddressTypeRequest",
        "description": "AddressType based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AddressType"
          }
        },
        "required": [
          "data"
        ]
      },
      "AddressTypeResponse": {
        "title": "AddressTypeResponse",
        "description": "AddressType based response. Returns single lib.AddressType object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AddressType"
          }
        },
        "required": [
          "data"
        ]
      },
      "AddressTypeArrayResponse": {
        "title": "AddressTypesResponse",
        "description": "List of AddressTypes response. Returns list of lib.AddressType objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AddressType"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ApplicationTypeRequest": {
        "title": "ApplicationTypeRequest",
        "description": "ApplicationType based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ApplicationType"
          }
        },
        "required": [
          "data"
        ]
      },
      "ApplicationTypeResponse": {
        "title": "ApplicationTypeResponse",
        "description": "ApplicationType based response. Returns single lib.ApplicationType object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ApplicationType"
          }
        },
        "required": [
          "data"
        ]
      },
      "ApplicationTypeArrayResponse": {
        "title": "ApplicationTypesResponse",
        "description": "List of ApplicationTypes response. Returns list of lib.ApplicationType objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ApplicationType"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ApplicationTypeActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApplicationType"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ApplicationTypeActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApplicationTypeActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanyRequest": {
        "title": "CompanyRequest",
        "description": "Company based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Company"
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanyResponse": {
        "title": "CompanyResponse",
        "description": "Company based response. Returns single lib.Company object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Company"
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanyArrayResponse": {
        "title": "CompaniesResponse",
        "description": "List of Companies response. Returns list of lib.Company objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Company"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanyActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Company"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "CompanyActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CompanyActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanyOperationRequest": {
        "title": "Create or modify Company with Main Address",
        "description": "Create new or modify Company with Main Address",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CompanyOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanyOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "isMainAddress": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "company": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Company"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "address": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Address"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "CompanySetupOperationRequest": {
        "title": "Create or modify Company with additional relationships",
        "description": "Create new or modify Company with additional relationships",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CompanySetupOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanySetupOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "isMainAddress": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "company": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Company"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "address": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Address"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customAttributeValues": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "CompanyTypeRequest": {
        "title": "CompanyTypeRequest",
        "description": "CompanyType based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CompanyType"
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanyTypeResponse": {
        "title": "CompanyTypeResponse",
        "description": "CompanyType based response. Returns single lib.CompanyType object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CompanyType"
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanyTypeArrayResponse": {
        "title": "CompanyTypesResponse",
        "description": "List of CompanyTypes response. Returns list of lib.CompanyType objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.CompanyType"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CompanyTypeActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CompanyType"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "CompanyTypeActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CompanyTypeActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "DeviceTypeRequest": {
        "title": "DeviceTypeRequest",
        "description": "DeviceType based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.DeviceType"
          }
        },
        "required": [
          "data"
        ]
      },
      "DeviceTypeResponse": {
        "title": "DeviceTypeResponse",
        "description": "DeviceType based response. Returns single lib.DeviceType object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.DeviceType"
          }
        },
        "required": [
          "data"
        ]
      },
      "DeviceTypeArrayResponse": {
        "title": "DeviceTypesResponse",
        "description": "List of DeviceTypes response. Returns list of lib.DeviceType objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.DeviceType"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "DeviceTypeActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.DeviceType"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "DeviceTypeActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceTypeActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonRequest": {
        "title": "PersonRequest",
        "description": "Person based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Person"
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonResponse": {
        "title": "PersonResponse",
        "description": "Person based response. Returns single lib.Person object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Person"
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonArrayResponse": {
        "title": "PeopleResponse",
        "description": "List of People response. Returns list of lib.Person objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Person"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonTypeRequest": {
        "title": "PersonTypeRequest",
        "description": "PersonType based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.PersonType"
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonTypeResponse": {
        "title": "PersonTypeResponse",
        "description": "PersonType based response. Returns single lib.PersonType object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.PersonType"
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonTypeArrayResponse": {
        "title": "PersonTypesResponse",
        "description": "List of PersonTypes response. Returns list of lib.PersonType objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.PersonType"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PersonTypeActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.PersonType"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "PersonTypeActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PersonTypeActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "TerminationReasonTypeRequest": {
        "title": "TerminationReasonTypeRequest",
        "description": "TerminationReasonType based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TerminationReasonType"
          }
        },
        "required": [
          "data"
        ]
      },
      "TerminationReasonTypeResponse": {
        "title": "TerminationReasonTypeResponse",
        "description": "TerminationReasonType based response. Returns single lib.TerminationReasonType object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.TerminationReasonType"
          }
        },
        "required": [
          "data"
        ]
      },
      "TerminationReasonTypeArrayResponse": {
        "title": "TerminationReasonTypesResponse",
        "description": "List of TerminationReasonTypes response. Returns list of lib.TerminationReasonType objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.TerminationReasonType"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSecurityProfileRequest": {
        "title": "AccountSecurityProfileRequest",
        "description": "AccountSecurityProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountSecurityProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSecurityProfileResponse": {
        "title": "AccountSecurityProfileResponse",
        "description": "AccountSecurityProfile based response. Returns single lib.AccountSecurityProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.AccountSecurityProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSecurityProfileArrayResponse": {
        "title": "AccountSecurityProfilesResponse",
        "description": "List of AccountSecurityProfiles response. Returns list of lib.AccountSecurityProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.AccountSecurityProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountSecurityProfileActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSecurityProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "AccountSecurityProfileActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountSecurityProfileActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSecurityProfileRequest": {
        "title": "BillingProfileSecurityProfileRequest",
        "description": "BillingProfileSecurityProfile based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileSecurityProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSecurityProfileResponse": {
        "title": "BillingProfileSecurityProfileResponse",
        "description": "BillingProfileSecurityProfile based response. Returns single lib.BillingProfileSecurityProfile object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.BillingProfileSecurityProfile"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSecurityProfileArrayResponse": {
        "title": "BillingProfileSecurityProfilesResponse",
        "description": "List of BillingProfileSecurityProfiles response. Returns list of lib.BillingProfileSecurityProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.BillingProfileSecurityProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingProfileSecurityProfileActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileSecurityProfile"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingProfileSecurityProfileActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingProfileSecurityProfileActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "ResourceCounterArrayResponse": {
        "title": "Get counters",
        "description": "Get counters",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceCounter"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ResourceCounter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "resourceId": {
                    "type": "string"
                  },
                  "counterKey": {
                    "type": "string"
                  },
                  "counterValue": {
                    "type": "integer"
                  },
                  "counterValueDecimal": {
                    "format": "double",
                    "type": "number"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "CustomerDetailsResponse": {
        "title": "CustomerDetailsResponse",
        "description": "CustomerDetails based response. Returns single lib.CustomerDetails object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CustomerDetails"
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomerDetailsArrayResponse": {
        "title": "CustomerDetailsResponse",
        "description": "List of CustomerDetails response. Returns list of lib.CustomerDetails objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.CustomerDetails"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProjectRequest": {
        "title": "ProjectRequest",
        "description": "Project based request",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Project"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProjectResponse": {
        "title": "ProjectResponse",
        "description": "Project based response. Returns single lib.Project object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.Project"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProjectArrayResponse": {
        "title": "ProjectsResponse",
        "description": "List of Projects response. Returns list of lib.Project objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Project"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ProjectActivateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "relationships": {
                "type": "object",
                "properties": {
                  "instance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Project"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ProjectActivateOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProjectActivateOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountLocationsArrayResponse": {
        "title": "Get AccountLocations",
        "description": "Get AccountLocations",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountLocations"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountLocations": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "string"
                  },
                  "numOfAccounts": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "CcChargeTypeResponse": {
        "title": "CcChargeTypeResponse",
        "description": "CcChargeType based response. Returns single lib.CcChargeType object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.CcChargeType"
          }
        },
        "required": [
          "data"
        ]
      },
      "CcChargeTypeArrayResponse": {
        "title": "CcChargeTypesResponse",
        "description": "List of CcChargeTypes response. Returns list of lib.CcChargeType objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.CcChargeType"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "LoginExternalOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "personId": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "LoginExternalOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LoginExternalOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "LoginExternalData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "transactionId": {
                    "type": "string"
                  },
                  "random": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "LoginExternalDataResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LoginExternalData"
          }
        },
        "required": [
          "data"
        ]
      },
      "LoginExternalCheckOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "transactionId": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "LoginExternalCheckOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LoginExternalCheckOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "LoginExternalChecked": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "errorMessage": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "result": {
                    "enum": [
                      "ACCEPTED",
                      "REJECTED",
                      "WAITING"
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "LoginExternalCheckedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LoginExternalChecked"
          }
        },
        "required": [
          "data"
        ]
      },
      "LoginExternalCallback": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "response": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "LoginExternalCallbackRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LoginExternalCallback"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCustomerFileDetailOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "billingOrgId": {
                    "type": "string"
                  },
                  "uuid": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingCustomerFileDetailOperationRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingCustomerFileDetailOperation"
          }
        },
        "required": [
          "data"
        ]
      },
      "BillingCustomerFileDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "format": "int32",
                    "type": "number"
                  },
                  "extension": {
                    "type": "string"
                  },
                  "header": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "size": {
                    "format": "int32",
                    "type": "number"
                  },
                  "splitCountTotal": {
                    "format": "int32",
                    "type": "number"
                  },
                  "splitCountCurrent": {
                    "format": "int32",
                    "type": "number"
                  },
                  "content": {
                    "type": "string"
                  },
                  "data": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "BillingCustomerFileDetailResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BillingCustomerFileDetail"
          }
        },
        "required": [
          "data"
        ]
      },
      "SupplementalType": {
        "enum": [
          "TOPOFF",
          "TOPON",
          "TOPUP"
        ],
        "type": "string"
      },
      "SupplementalPricePlanAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "supplementalType": {
                    "type": "string"
                  },
                  "supplementalLevel": {
                    "$ref": "#/components/schemas/lib.PrepaidSupplementalLevel"
                  },
                  "serviceStartDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "subscriptionStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionStatus"
                  },
                  "isAutorenew": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/common.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/common.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "SupplementalPricePlanAssignmentRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SupplementalPricePlanAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "SupplementalPricePlanAssignmentResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SupplementalPricePlanAssignment"
          }
        },
        "required": [
          "data"
        ]
      },
      "HeartbeatResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/common.Heartbeat"
          }
        },
        "required": [
          "data"
        ]
      },
      "SecurityProfileArrayResponse": {
        "title": "SecurityProfilesResponse",
        "description": "List of SecurityProfiles response. Returns list of lib.SecurityProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.SecurityProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ApnGroupArrayResponse": {
        "title": "ApnGroupsResponse",
        "description": "List of ApnGroups response. Returns list of lib.ApnGroup objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ApnGroup"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ZoneModelArrayResponse": {
        "title": "ZoneModelsResponse",
        "description": "List of ZoneModels response. Returns list of lib.ZoneModel objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ZoneModel"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "RoamingProfileArrayResponse": {
        "title": "RoamingProfilesResponse",
        "description": "List of RoamingProfiles response. Returns list of lib.RoamingProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.RoamingProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ServiceProfileArrayResponse": {
        "title": "ServiceProfilesResponse",
        "description": "List of ServiceProfiles response. Returns list of lib.ServiceProfile objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.ServiceProfile"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "NetworkInterfaceArrayResponse": {
        "title": "NetworkInterfacesResponse",
        "description": "List of NetworkInterfaces response. Returns list of lib.NetworkInterface objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.NetworkInterface"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PlatformArrayResponse": {
        "title": "PlatformsResponse",
        "description": "List of Platforms response. Returns list of lib.Platform objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Platform"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ReportArrayResponse": {
        "title": "ReportsResponse",
        "description": "List of Reports response. Returns list of lib.Report objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Report"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ApnArrayResponse": {
        "title": "ApnsResponse",
        "description": "List of Apns response. Returns list of lib.Apn objects",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lib.Apn"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ValidateExternalCompanyResultResponse": {
        "title": "ValidateExternalCompanyResultResponse",
        "description": "ValidateExternalCompanyResult based response. Returns single lib.ValidateExternalCompanyResult object",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/lib.ValidateExternalCompanyResult"
          }
        },
        "required": [
          "data"
        ]
      },
      "ca.FileData": {
        "$ref": "#/components/schemas/common.FileData"
      },
      "ca.Resource": {
        "$ref": "#/components/schemas/common.Resource"
      },
      "ca.RelationshipToOne": {
        "$ref": "#/components/schemas/common.RelationshipToOne"
      },
      "ca.RelationshipToMany": {
        "$ref": "#/components/schemas/common.RelationshipToMany"
      },
      "ca.AttributeScope": {
        "enum": [
          "ACCOUNT",
          "CSP",
          "USERGROUP"
        ],
        "type": "string"
      },
      "ca.AttributeSource": {
        "enum": [
          "LOOKUP",
          "MAPPING",
          "USER-INPUT"
        ],
        "type": "string"
      },
      "ca.CmpObjectType": {
        "enum": [
          "ACCOUNT",
          "ACCOUNT-REPORT-RESULT",
          "APN",
          "APN-GROUP",
          "BILLING-PROFILE",
          "CAS-USER",
          "COMPANY",
          "CONTRACT",
          "COUNTRY",
          "CSP",
          "CUSTOMER",
          "DEVICE",
          "NETWORK-PROVIDER-REPORT-RESULT",
          "ORGUNIT",
          "PO",
          "PRICEPLAN",
          "ROAMING-PROFILE",
          "SERVICE-PROFILE",
          "SIM",
          "SIM-BATCH",
          "SIM-PRODUCT",
          "SUBSCRIPTION",
          "TENANT",
          "USERGROUP"
        ],
        "type": "string"
      },
      "ca.ContextType": {
        "enum": [
          "ACCOUNT",
          "CSP",
          "CUSTOMER",
          "SIM-GROUP",
          "TENANT",
          "USERGROUP"
        ],
        "type": "string"
      },
      "ca.DataType": {
        "enum": [
          "BIGINT",
          "BOOLEAN",
          "DATE",
          "DYNAMIC-ENUM",
          "ENUM",
          "FUNCTION",
          "ID",
          "INTEGER",
          "KEY",
          "NUMERIC",
          "PERIOD",
          "REGEXP",
          "TEXT",
          "TIMESTAMP"
        ],
        "type": "string"
      },
      "ca.ExternalService": {
        "enum": [
          "LBS",
          "OFFER-SYNC"
        ],
        "type": "string"
      },
      "ca.ExternalSource": {
        "enum": [
          "PROVISIONING",
          "SIM-BATCH"
        ],
        "type": "string"
      },
      "ca.LookupSource": {
        "enum": [
          "LOOKUP-TABLE",
          "REST"
        ],
        "type": "string"
      },
      "ca.ScheduledOperationStatus": {
        "enum": [
          "CANCELED",
          "COMPLETED",
          "FAILED",
          "IN-PROGRESS",
          "NOT-STARTED"
        ],
        "type": "string"
      },
      "ca.Status": {
        "enum": [
          "ACTIVE",
          "DRAFT",
          "INACTIVE"
        ],
        "type": "string"
      },
      "ca.SystemAttribute": {
        "enum": [
          "ACCOUNT-CATEGORY",
          "ACCOUNT-CUSTOM-FIELD10-NAME",
          "ACCOUNT-CUSTOM-FIELD10-VALUE",
          "ACCOUNT-CUSTOM-FIELD1-NAME",
          "ACCOUNT-CUSTOM-FIELD1-VALUE",
          "ACCOUNT-CUSTOM-FIELD2-NAME",
          "ACCOUNT-CUSTOM-FIELD2-VALUE",
          "ACCOUNT-CUSTOM-FIELD3-NAME",
          "ACCOUNT-CUSTOM-FIELD3-VALUE",
          "ACCOUNT-CUSTOM-FIELD4-NAME",
          "ACCOUNT-CUSTOM-FIELD4-VALUE",
          "ACCOUNT-CUSTOM-FIELD5-NAME",
          "ACCOUNT-CUSTOM-FIELD5-VALUE",
          "ACCOUNT-CUSTOM-FIELD6-NAME",
          "ACCOUNT-CUSTOM-FIELD6-VALUE",
          "ACCOUNT-CUSTOM-FIELD7-NAME",
          "ACCOUNT-CUSTOM-FIELD7-VALUE",
          "ACCOUNT-CUSTOM-FIELD8-NAME",
          "ACCOUNT-CUSTOM-FIELD8-VALUE",
          "ACCOUNT-CUSTOM-FIELD9-NAME",
          "ACCOUNT-CUSTOM-FIELD9-VALUE",
          "ACCOUNT-GOVERNATE",
          "ACCOUNT-LANGUAGE",
          "ACCOUNT-LOCAL-NAME",
          "ACCOUNT-POSTAL-AREA",
          "ACCOUNT-REGION",
          "ACCOUNT-REGISTRATION-DATE",
          "ACCOUNT-REGISTRATION-EXIPRY-DATE",
          "ACCOUNT-TYPE",
          "ALG",
          "AMFSNO",
          "CARDTYPE",
          "CC",
          "COMPANY-TYPE",
          "CRM-ACCOUNT-MANAGER-USER-ID",
          "CRM-COLLECTION-TREATMENT",
          "CRM-CORPORATE-PIC-ID",
          "CRM-CUSTOMER-ID",
          "CRM-PROJECT-ID",
          "CRM-SALES-TEAM",
          "EXTERNAL-LOCATION-SERVICE-ENABLED",
          "FWA-CAPACITY-CHECK",
          "FWA-CAPACITY-REQUEST",
          "FWA-CAPACITY-RESPONSE",
          "FWA-RESERVATION-ID",
          "IS-FWA-PRICEPLAN-INDICATOR",
          "IS-PRIMARY-ACCOUNT-INDICATOR",
          "IS-SINGLE-BILL-INDICATOR",
          "K2SNO",
          "K4SNO",
          "MOBILE-SUBSCRIPTION-MSISDN",
          "OFFER-ID",
          "OPERATOR-EMPLOYEE-BRANCH-ADDRESS",
          "OPERATOR-EMPLOYEE-DEVICE-ID",
          "OPERATOR-EMPLOYEE-ID",
          "OPERATOR-EMPLOYEE-ORGANIZATION-ID",
          "OPERATOR-EMPLOYEE-REGION",
          "OPERATOR-EMPLOYEE-USERNAME",
          "OPSNO",
          "ORDER-ID",
          "OTA-KEY",
          "PILOT-SUBSCRIPTION-MSISDN",
          "PORTAL-XML-PUSH-API-SHARED-SECRET",
          "RESELLER-NAME",
          "SIMCARD",
          "SIM-APPLICATION",
          "SIM-SHIPPING-DATE",
          "SIM-VERSION",
          "SINGLE-BILL-PRIMARY-ACCOUNT-NAME",
          "SINGLE-BILL-PRIMARY-ACCOUNT-PILOT-MSISDN",
          "SN",
          "TC-BILLING-ARRANGEMENT-ID",
          "TC-CUSTOMER-ID",
          "TC-FINANCIAL-ACCOUNT-ID",
          "TC-PAY-CHANNEL-ID",
          "TC-PILOT-SUBSCRIPTION-NUMBER",
          "TC-SUBSCRIPTION-NUMBER",
          "BILLFEED-EXPORT-TYPE"
        ],
        "type": "string"
      },
      "ca.UiVisibility": {
        "enum": [
          "HIDDEN",
          "PRIVATE",
          "PUBLIC"
        ],
        "type": "string"
      },
      "ca.CmpObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ca.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "cmpObjectTypeKey": {
                    "$ref": "#/components/schemas/ca.CmpObjectType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isApiLockedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isGuiLockedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isIntegrationLockedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "customAttributeValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.CustomAttributeValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "externalServiceSyncs": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.ExternalServiceSync"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ca.Context": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ca.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "contextType": {
                    "$ref": "#/components/schemas/ca.ContextType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalContextReference": {
                    "type": "string"
                  },
                  "isAccountGroupLinkedToCompanyIndicator": {
                    "type": "boolean"
                  },
                  "isIpWhitelistEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/ca.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contextCustomAttributeTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.ContextCustomAttributeType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "csp": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/ca.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/ca.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "orgunit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/ca.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tenant": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/ca.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ca.ContextCustomAttributeType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ca.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/ca.Status"
                  },
                  "uiVisibility": {
                    "$ref": "#/components/schemas/ca.UiVisibility"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.Context"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customAttributeType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.CustomAttributeType"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "lookupType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.LookupType"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ca.CustomAttributeType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ca.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "attributeScopeKey": {
                    "$ref": "#/components/schemas/ca.AttributeScope"
                  },
                  "attributeSourceKey": {
                    "$ref": "#/components/schemas/ca.AttributeSource"
                  },
                  "cmpObjectTypeKey": {
                    "$ref": "#/components/schemas/ca.CmpObjectType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dataTypeKey": {
                    "$ref": "#/components/schemas/ca.DataType"
                  },
                  "defaultUiVisibility": {
                    "$ref": "#/components/schemas/ca.UiVisibility"
                  },
                  "externalName": {
                    "type": "string"
                  },
                  "externalSourceId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "externalSourceKey": {
                    "$ref": "#/components/schemas/ca.ExternalSource"
                  },
                  "isEncryptedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isMandatoryIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isSystemAttributeIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isValueUniqueIndicator": {
                    "description": "Indicates whether the value of the custom attribute is unique per cmp object type\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "licenseKey": {
                    "description": "Optional name of the license key that controls the CA behavior. If not present, the custom attribute will automatically be assigned to the corresponding context.\n",
                    "type": "string"
                  },
                  "name": {
                    "pattern": "^[\\p{L}\\p{Nd}]+((( )?([\\-\\.&,_@\\(\\)+])?){0,2}([\\p{L}\\p{Nd}])+([\\._\\) ])?)*$",
                    "description": "Printer-friendly name of the attribute type\n",
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/ca.Status"
                  },
                  "systemAttributeKey": {
                    "$ref": "#/components/schemas/ca.SystemAttribute"
                  },
                  "validationPattern": {
                    "description": "A UNIX regular expression\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contextCustomAttributeTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.ContextCustomAttributeType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customAttributeValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.CustomAttributeValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "lookupType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.LookupType"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ca.CustomAttributeValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ca.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "cmpObject": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.CmpObject"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customAttributeType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.CustomAttributeType"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "lookupValue": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.LookupValue"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ca.ExternalServiceSync": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ca.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "cmpObjectTypeKey": {
                    "$ref": "#/components/schemas/ca.CmpObjectType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "errorMessage": {
                    "type": "string"
                  },
                  "externalObjectReference": {
                    "type": "string"
                  },
                  "externalService": {
                    "$ref": "#/components/schemas/ca.ExternalService"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "processContext": {
                    "type": "string"
                  },
                  "syncReason": {
                    "type": "string"
                  },
                  "syncStatus": {
                    "$ref": "#/components/schemas/ca.ScheduledOperationStatus"
                  },
                  "syncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "cmpObject": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.CmpObject"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ca.LookupType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ca.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "attributeScopeKey": {
                    "$ref": "#/components/schemas/ca.AttributeScope"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isHierarchyIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isHierarchyNodeSelectableIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lookupSourceKey": {
                    "$ref": "#/components/schemas/ca.LookupSource"
                  },
                  "name": {
                    "pattern": "^[\\p{L}\\p{Nd}]+((( )?([\\-\\.&,_@\\(\\)+])?){0,2}([\\p{L}\\p{Nd}])+([\\._\\) ])?)*$",
                    "description": "Printer-friendly name of the lookup type\n",
                    "type": "string"
                  },
                  "systemAttributeKey": {
                    "$ref": "#/components/schemas/ca.SystemAttribute"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contextCustomAttributeTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.ContextCustomAttributeType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "lookupValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.LookupValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "restEndpoints": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.RestEndpoint"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ca.LookupValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ca.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isUiVisibleIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true",
                    "x-annotation-common.notNull": true
                  },
                  "label": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lookupType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.LookupType"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "lookupValuesParentLookupValue": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.LookupValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ca.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentLookupValue": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.LookupValue"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "ca.RestEndpoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ca.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endpointAuthorization": {
                    "type": "string"
                  },
                  "labelAttribute": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nodeAttribute": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/ca.Status"
                  },
                  "url": {
                    "type": "string"
                  },
                  "valueAttribute": {
                    "type": "string"
                  },
                  "x509": {
                    "$ref": "#/components/schemas/ca.FileData"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lookupType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ca.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ca.LookupType"
                              },
                              {
                                "$ref": "#/components/schemas/ca.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "common.Resource": {
        "description": "Abstract Resource",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "common.FileData": {
        "description": "Abstract file data",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          }
        },
        "required": [
          "fileName",
          "content"
        ],
        "type": "object"
      },
      "common.RelationshipToOne": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/common.Resource"
          }
        },
        "required": [
          "data"
        ]
      },
      "common.RelationshipToMany": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.Resource"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "common.BatchTaskItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "format": "int64",
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/common.Resource"
          },
          "status": {
            "$ref": "#/components/schemas/common.BatchTaskItemStatus"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.ErrorObject"
            }
          }
        },
        "required": [
          "itemId",
          "status"
        ]
      },
      "common.BatchTaskAttributes": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "creationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.BatchTaskItem"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "common.BatchTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/common.BatchTaskAttributes"
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "common.BatchTaskItemStatus": {
        "enum": [
          "WAITING",
          "PENDING",
          "SUCCESS",
          "ERROR"
        ],
        "type": "string"
      },
      "common.ErrorObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "common.ErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/common.ErrorObject"
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "common.Heartbeat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "timestamp": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relaitonships": {
                "type": "object"
              },
              "meta": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "core.Resource": {
        "$ref": "#/components/schemas/common.Resource"
      },
      "core.RelationshipToOne": {
        "$ref": "#/components/schemas/common.RelationshipToOne"
      },
      "core.RelationshipToMany": {
        "$ref": "#/components/schemas/common.RelationshipToMany"
      },
      "core.CmpObjectPendingChangeReferenceType": {
        "description": "Reference type. Describes object related to the pending Changes.\n",
        "enum": [
          "PROCESS",
          "SCHEDULED-OPERATION",
          "IGNORE-STAGING"
        ],
        "type": "string"
      },
      "core.ProcessDomain": {
        "description": "domain of the process\n",
        "enum": [
          "RM",
          "PORTAL",
          "BM"
        ],
        "type": "string"
      },
      "core.ProcessStatus": {
        "description": "status of the process\n",
        "enum": [
          "IN-PROGRESS",
          "COMPLETED",
          "INTERRUPTED"
        ],
        "type": "string"
      },
      "core.ProcessResult": {
        "enum": [
          "SUCCESS",
          "FAILURE",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "core.ProcessType": {
        "description": "type of the process\n",
        "enum": [
          "ACCOUNTBILLABLE-BI2NB",
          "ACCOUNTBILLABLE-NB2BI",
          "ACCOUNTLC-D2L",
          "ACCOUNTLC-L2A",
          "COUNTRY-OUC",
          "PO",
          "PO-ASSIGN",
          "PO-VALIDATE",
          "PO-PROVISION",
          "BATCH",
          "BATCH-FILE",
          "BATCH-UPLOAD",
          "SFTP-TRANSFER",
          "SIMLC-CI2IT",
          "SIMLC-CI2RE",
          "SIMLC-IB2RB",
          "SIMLC-IB2RE",
          "SIMLC-IB2SU",
          "SIMLC-IT2IB",
          "SIMLC-IT2RE",
          "SIMLC-RB2IB",
          "SIMLC-RB2RE",
          "SIMLC-RE2IB",
          "SIMLC-RE2IT",
          "SIMLC-SU2IB",
          "SIMLC-SU2RE",
          "SIM-CHANGE-APN-GROUP",
          "SIM-CHANGE-MSISDN",
          "SIM-CHANGE-ROAMING-PROFILE",
          "SIM-CHANGE-SERVICE-PROFILE",
          "SIM-CHANGE-STATIC-IP",
          "SIM-HLR-REFRESH",
          "SIM-MOVE",
          "SIM-REPLACE",
          "SIM-PREPAID-AUTORENEW",
          "SIM-PURGE",
          "SIM-RETIRE-MSISDN",
          "SIM-SWAP",
          "SIM-UNASSIGN"
        ],
        "type": "string"
      },
      "core.ProcessingStatus": {
        "enum": [
          "PROCESSING-FAILED",
          "PROCESSING-STARTED"
        ],
        "type": "string"
      },
      "core.CmpObjectStagingStatusType": {
        "enum": [
          "ACCOUNTBILLABLE-BI2NB-BILLABLE",
          "ACCOUNTBILLABLE-BI2NB-NON-BILLABLE",
          "ACCOUNTBILLABLE-BI2NB-RM-UPDATE-NOK",
          "ACCOUNTBILLABLE-BI2NB-RM-UPDATE-OK",
          "ACCOUNTBILLABLE-BI2NB-SEND-NOTIFICATION-NOK",
          "ACCOUNTBILLABLE-BI2NB-SEND-NOTIFICATION-OK",
          "ACCOUNTBILLABLE-BI2NB-TKS-TC-UPDATE-NOK",
          "ACCOUNTBILLABLE-BI2NB-TKS-TC-UPDATE-OK",
          "ACCOUNTBILLABLE-NB2BI-BILLABLE",
          "ACCOUNTBILLABLE-NB2BI-NON-BILLABLE",
          "ACCOUNTBILLABLE-NB2BI-RM-UPDATE-NOK",
          "ACCOUNTBILLABLE-NB2BI-RM-UPDATE-OK",
          "ACCOUNTBILLABLE-NB2BI-SEND-NOTIFICATION-NOK",
          "ACCOUNTBILLABLE-NB2BI-SEND-NOTIFICATION-OK",
          "ACCOUNTBILLABLE-NB2BI-TKS-TC-UPDATE-NOK",
          "ACCOUNTBILLABLE-NB2BI-TKS-TC-UPDATE-OK",
          "ACCOUNTLC-D2L-CRM-CREATION-NOK",
          "ACCOUNTLC-D2L-CRM-CREATION-OK",
          "ACCOUNTLC-D2L-DRAFT",
          "ACCOUNTLC-D2L-LEAD",
          "ACCOUNTLC-D2L-NOTIFICATION-SENT-NOK",
          "ACCOUNTLC-D2L-NOTIFICATION-SENT-OK",
          "ACCOUNTLC-D2L-RM-UPDATE-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-OK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-SENT-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-SENT-OK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-STATUS-CHECK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATION-GET-DUMMY-MSISDN-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATION-GET-DUMMY-MSISDN-OK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATION-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATION-OK",
          "ACCOUNTLC-L2A-ACCOUNT",
          "ACCOUNTLC-L2A-CRM-CREATION-NOK",
          "ACCOUNTLC-L2A-CRM-CREATION-OK",
          "ACCOUNTLC-L2A-LEAD",
          "ACCOUNTLC-L2A-RM-UPDATE-NOK",
          "ACCOUNTLC-L2A-RM-UPDATE-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-ACCOUNT-CREATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-ACCOUNT-CREATION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-ASSIGN-PILOT-MSISDN-IN-RM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-ASSIGN-PILOT-MSISDN-IN-RM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-AVAILABLE-PILOT-MSISDN-IN-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-AVAILABLE-PILOT-MSISDN-IN-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-BILLING-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-BILLING-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-BM-SIM-PROVISIONED-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-BM-SIM-PROVISIONED-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-CONFIRM-PILOT-MSISDN-IN-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-CONFIRM-PILOT-MSISDN-IN-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-CUSTOMER-CREATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-CUSTOMER-CREATION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-DEFAULTSETTINGS-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-DEFAULTSETTINGS-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-EP-SIM-CREATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-EP-SIM-CREATION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-HLR-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-HLR-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-LOCK-PILOT-MSISDN-IN-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-LOCK-PILOT-MSISDN-IN-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-MSISDN-ASSIGNMENT-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-MSISDN-ASSIGNMENT-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-OM-SIM-PROVISIONED-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-OM-SIM-PROVISIONED-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-RESERVE-PILOT-MSISDN-IN-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-RESERVE-PILOT-MSISDN-IN-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-SIM-CREATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-SIM-CREATION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-SUBSCRIPTION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-SUBSCRIPTION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-UPDATE-AGREEMENT-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-UPDATE-AGREEMENT-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-UPDATE-RM-STATUS-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-UPDATE-RM-STATUS-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-VALIDATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-VALIDATION-OK",
          "COUNTRY-OUC-CREATED",
          "COUNTRY-OUC-FINISHED",
          "COUNTRY-OUC-PROVISIONED-NOK",
          "COUNTRY-OUC-PROVISIONED-OK",
          "PO-BILLING-NOK",
          "PO-BILLING-OK",
          "PO-BM-SIM-PROVISIONED-NOK",
          "PO-BM-SIM-PROVISIONED-OK",
          "PO-DEFAULTSETTINGS-NOK",
          "PO-DEFAULTSETTINGS-OK",
          "PO-DRAFT",
          "PO-EP-SIM-CREATION-NOK",
          "PO-EP-SIM-CREATION-OK",
          "PO-ESIM-PROFILES-PROVISIONING",
          "PO-ESIM-PROVISIONED-NOK",
          "PO-ESIM-PROVISIONED-OK",
          "PO-ESIM-VALIDATION-NOK",
          "PO-ESIM-VALIDATION-OK",
          "PO-FAILED",
          "PO-HLR-NOK",
          "PO-HLR-OK",
          "PO-KAFKA-NOTIFICATION-SENT-NOK",
          "PO-KAFKA-NOTIFICATION-SENT-OK",
          "PO-MSISDN-ASSIGNMENT-NOK",
          "PO-MSISDN-ASSIGNMENT-OK",
          "PO-OM-SIM-PROVISIONED-NOK",
          "PO-OM-SIM-PROVISIONED-OK",
          "PO-PROVISIONED",
          "PO-SIM-CREATION-NOK",
          "PO-SIM-CREATION-OK",
          "SFTP-TRANSFER-ERROR",
          "SFTP-TRANSFER-IN-PROGRESS",
          "SFTP-TRANSFER-OK",
          "SFTP-TRANSFER-RETRY",
          "SIMLC-CI2IT-BM-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-BM-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2IT-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2IT-CUSTOMER-INVENTORY",
          "SIMLC-CI2IT-EP-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-EP-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-HLR-ACTIVATION-NOK",
          "SIMLC-CI2IT-HLR-ACTIVATION-OK",
          "SIMLC-CI2IT-HLR-ACTIVATION-SENT-NOK",
          "SIMLC-CI2IT-HLR-ACTIVATION-SENT-OK",
          "SIMLC-CI2IT-IN-TESTING",
          "SIMLC-CI2IT-KAFKA-ASSIGN-MSISDN-SENT-NOK",
          "SIMLC-CI2IT-KAFKA-ASSIGN-MSISDN-SENT-OK",
          "SIMLC-CI2IT-KSA-SEM-REGISTRATION-NOK",
          "SIMLC-CI2IT-KSA-SEM-REGISTRATION-OK",
          "SIMLC-CI2IT-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2IT-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2IT-OUC-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-OUC-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2IT-RM-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-RM-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-ZAINKSA-CRM-ACTIVATION-SENT-NOK",
          "SIMLC-CI2IT-ZAINKSA-CRM-ACTIVATION-SENT-OK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-NOK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-OK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-SENT-NOK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-SENT-OK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-STATUS-CHECK",
          "SIMLC-CI2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2RE-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2RE-CUSTOMER-INVENTORY",
          "SIMLC-CI2RE-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2RE-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2RE-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2RE-RETIRED",
          "SIMLC-IB2RB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2RB-IN-BILLING",
          "SIMLC-IB2RB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2RB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RB-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2RB-READY-FOR-BILLING",
          "SIMLC-IB2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-NOK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-OK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-SENT-NOK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-SENT-OK",
          "SIMLC-IB2RE-IN-BILLING",
          "SIMLC-IB2RE-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RE-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2RE-RETIRED",
          "SIMLC-IB2SU-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2SU-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2SU-HLR-SUSPEND-NOK",
          "SIMLC-IB2SU-HLR-SUSPEND-OK",
          "SIMLC-IB2SU-HLR-SUSPEND-SENT-NOK",
          "SIMLC-IB2SU-HLR-SUSPEND-SENT-OK",
          "SIMLC-IB2SU-IN-BILLING",
          "SIMLC-IB2SU-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2SU-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2SU-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2SU-SUSPENDED",
          "SIMLC-IT2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IT2IB-IN-BILLING",
          "SIMLC-IT2IB-IN-TESTING",
          "SIMLC-IT2IB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2IB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IT2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-NOK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-OK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-SENT-NOK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-SENT-OK",
          "SIMLC-IT2RE-IN-TESTING",
          "SIMLC-IT2RE-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2RE-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IT2RE-RETIRED",
          "SIMLC-RB2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2IB-IN-BILLING",
          "SIMLC-RB2IB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2IB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2IB-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2IB-READY-FOR-BILLING",
          "SIMLC-RB2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2RE-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2RE-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2RE-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2RE-READY-FOR-BILLING",
          "SIMLC-RB2RE-RETIRED",
          "SIMLC-RE2IB-BM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-BM-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IB-EP-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-EP-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IB-HLR-REACTIVATION-NOK",
          "SIMLC-RE2IB-HLR-REACTIVATION-OK",
          "SIMLC-RE2IB-HLR-REACTIVATION-SENT-NOK",
          "SIMLC-RE2IB-HLR-REACTIVATION-SENT-OK",
          "SIMLC-RE2IB-IN-BILLING",
          "SIMLC-RE2IB-KAFKA-ASSIGN-MSISDN-SENT-NOK",
          "SIMLC-RE2IB-KAFKA-ASSIGN-MSISDN-SENT-OK",
          "SIMLC-RE2IB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IB-OUC-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-OUC-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IB-RETIRED",
          "SIMLC-RE2IB-RM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-RM-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-BM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-BM-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IT-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IT-EP-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-EP-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-IN-TESTING",
          "SIMLC-RE2IT-KAFKA-ASSIGN-MSISDN-SENT-NOK",
          "SIMLC-RE2IT-KAFKA-ASSIGN-MSISDN-SENT-OK",
          "SIMLC-RE2IT-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IT-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IT-OUC-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-OUC-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IT-RETIRED",
          "SIMLC-RE2IT-RM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-RM-ASSIGN-MSISDN-OK",
          "SIMLC-SU2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2IB-HLR-RESUME-NOK",
          "SIMLC-SU2IB-HLR-RESUME-OK",
          "SIMLC-SU2IB-HLR-RESUME-SENT-NOK",
          "SIMLC-SU2IB-HLR-RESUME-SENT-OK",
          "SIMLC-SU2IB-IN-BILLING",
          "SIMLC-SU2IB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2IB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2IB-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2IB-OUC-DISABLE-GY-RO-BLOCK-RULES-NOK",
          "SIMLC-SU2IB-SUSPENDED",
          "SIMLC-SU2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-NOK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-OK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-SENT-NOK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-SENT-OK",
          "SIMLC-SU2RE-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2RE-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2RE-RETIRED",
          "SIMLC-SU2RE-SUSPENDED",
          "SIM-CHANGE-APN-GROUP-BACKUP-NOK",
          "SIM-CHANGE-APN-GROUP-BACKUP-OK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-SENT-OK",
          "SIM-CHANGE-APN-GROUP-CREATED",
          "SIM-CHANGE-APN-GROUP-FINISHED",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-SENT-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-SENT-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-SENT-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT2-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT2-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT-OK",
          "SIM-CHANGE-APN-GROUP-KAFKA-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-KAFKA-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-OM-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-OM-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-OUC-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-OUC-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-RM-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-RM-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-RM-COMMIT-NOK",
          "SIM-CHANGE-APN-GROUP-RM-COMMIT-OK",
          "SIM-CHANGE-APN-GROUP-RM-ROLLBACK-NOK",
          "SIM-CHANGE-APN-GROUP-RM-ROLLBACK-OK",
          "SIM-CHANGE-MSISDN-BM-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-BM-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-CREATED",
          "SIM-CHANGE-MSISDN-EP-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-EP-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-FINISHED",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-SENT-NOK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-SENT-OK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-STATUS-CHECK",
          "SIM-CHANGE-MSISDN-KAFKA-NOTIFICATION-SENT-NOK",
          "SIM-CHANGE-MSISDN-KAFKA-NOTIFICATION-SENT-OK",
          "SIM-CHANGE-MSISDN-OUC-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-OUC-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-ROLLBACK-NOK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-ROLLBACK-OK",
          "SIM-CHANGE-MSISDN-RM-LOCK-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-RM-LOCK-MSISDN-OK",
          "SIM-CHANGE-ROAMING-PROFILE-BM-CHANGE-ROAMING-PROFILE-NOK",
          "SIM-CHANGE-ROAMING-PROFILE-BM-CHANGE-ROAMING-PROFILE-OK",
          "SIM-CHANGE-ROAMING-PROFILE-BM-CHANGE-ROAMING-PROFILE-SENT-NOK",
          "SIM-CHANGE-ROAMING-PROFILE-BM-CHANGE-ROAMING-PROFILE-SENT-OK",
          "SIM-CHANGE-ROAMING-PROFILE-CREATED",
          "SIM-CHANGE-ROAMING-PROFILE-FINISHED",
          "SIM-CHANGE-ROAMING-PROFILE-INTEGRATION-CHANGE-ROAMING-PROFILE-NOK",
          "SIM-CHANGE-ROAMING-PROFILE-INTEGRATION-CHANGE-ROAMING-PROFILE-OK",
          "SIM-CHANGE-ROAMING-PROFILE-RM-CHANGE-ROAMING-PROFILE-NOK",
          "SIM-CHANGE-ROAMING-PROFILE-RM-CHANGE-ROAMING-PROFILE-OK",
          "SIM-CHANGE-SERVICE-PROFILE-BM-CHANGE-SERVICE-PROFILE-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-BM-CHANGE-SERVICE-PROFILE-OK",
          "SIM-CHANGE-SERVICE-PROFILE-BM-CHANGE-SERVICE-PROFILE-SENT-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-BM-CHANGE-SERVICE-PROFILE-SENT-OK",
          "SIM-CHANGE-SERVICE-PROFILE-CREATED",
          "SIM-CHANGE-SERVICE-PROFILE-FINISHED",
          "SIM-CHANGE-SERVICE-PROFILE-INTEGRATION-CHANGE-SERVICE-PROFILE-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-INTEGRATION-CHANGE-SERVICE-PROFILE-OK",
          "SIM-CHANGE-SERVICE-PROFILE-INTEGRATION-CHANGE-SERVICE-PROFILE-SENT-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-INTEGRATION-CHANGE-SERVICE-PROFILE-SENT-OK",
          "SIM-CHANGE-SERVICE-PROFILE-RM-CHANGE-SERVICE-PROFILE-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-RM-CHANGE-SERVICE-PROFILE-OK",
          "SIM-CHANGE-STATIC-IP-BACKUP-NOK",
          "SIM-CHANGE-STATIC-IP-BACKUP-OK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-SENT-NOK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-SENT-OK",
          "SIM-CHANGE-STATIC-IP-CREATED",
          "SIM-CHANGE-STATIC-IP-FINISHED",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-CHANGE-STATIC-IP-NOK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-CHANGE-STATIC-IP-OK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-CHANGE-STATIC-IP-SENT-NOK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-CHANGE-STATIC-IP-SENT-OK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-GLOBAL-CHARGE-NOK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-GLOBAL-CHARGE-OK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-GLOBAL-CHARGE-SENT-NOK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-GLOBAL-CHARGE-SENT-OK",
          "SIM-CHANGE-STATIC-IP-OM-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-OM-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-OUC-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-OUC-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-RM-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-RM-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-RM-COMMIT-NOK",
          "SIM-CHANGE-STATIC-IP-RM-COMMIT-OK",
          "SIM-CHANGE-STATIC-IP-RM-ROLLBACK-NOK",
          "SIM-CHANGE-STATIC-IP-RM-ROLLBACK-OK",
          "SIM-HLR-REFRESH-CANCEL-LOCATION-NOK",
          "SIM-HLR-REFRESH-CANCEL-LOCATION-OK",
          "SIM-HLR-REFRESH-FINISHED",
          "SIM-HLR-REFRESH-NOK",
          "SIM-HLR-REFRESH-OK",
          "SIM-HLR-REFRESH-PROFILE-PURGE-NOK",
          "SIM-HLR-REFRESH-PROFILE-PURGE-OK",
          "SIM-HLR-REFRESH-PROFILE-UPDATE-NOK",
          "SIM-HLR-REFRESH-PROFILE-UPDATE-OK",
          "SIM-MOVE-BACKUP-NOK",
          "SIM-MOVE-BACKUP-OK",
          "SIM-MOVE-BM-REASSIGN-SIM-NOK",
          "SIM-MOVE-BM-REASSIGN-SIM-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-SENT-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-SENT-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-SENT-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-SENT-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-SENT-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-SENT-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT-OK",
          "SIM-MOVE-CREATED",
          "SIM-MOVE-EP-REASSIGN-NOK",
          "SIM-MOVE-EP-REASSIGN-OK",
          "SIM-MOVE-FINISHED",
          "SIM-MOVE-KAFKA-NOTIFICATION-SENT-NOK",
          "SIM-MOVE-KAFKA-NOTIFICATION-SENT-OK",
          "SIM-MOVE-OM-ACTIVATE-SIM-NOK",
          "SIM-MOVE-OM-ACTIVATE-SIM-OK",
          "SIM-MOVE-OM-PURGE-SIM-NOK",
          "SIM-MOVE-OM-PURGE-SIM-OK",
          "SIM-MOVE-OM-REASSIGN-SIM-NOK",
          "SIM-MOVE-OM-REASSIGN-SIM-OK",
          "SIM-MOVE-OUC-REASSIGN-NOK",
          "SIM-MOVE-OUC-REASSIGN-OK",
          "SIM-MOVE-RM-REASSIGN-SIM-NOK",
          "SIM-MOVE-RM-REASSIGN-SIM-OK",
          "SIM-MOVE-RM-ROLLBACK-NOK",
          "SIM-MOVE-RM-ROLLBACK-OK",
          "SIM-PREPAID-AUTORENEW-DISABLED",
          "SIM-PREPAID-AUTORENEW-ENABLED",
          "SIM-PREPAID-AUTORENEW-OUC-CHANGE-NOK",
          "SIM-PREPAID-AUTORENEW-OUC-CHANGE-OK",
          "SIM-PREPAID-AUTORENEW-RM-CHANGE-NOK",
          "SIM-PREPAID-AUTORENEW-RM-CHANGE-OK",
          "SIM-PURGE-BM-PURGE-NOK",
          "SIM-PURGE-BM-PURGE-OK",
          "SIM-PURGE-CREATED",
          "SIM-PURGE-FINISHED",
          "SIM-PURGE-HLR-PURGE-NOK",
          "SIM-PURGE-HLR-PURGE-OK",
          "SIM-PURGE-HLR-PURGE-SENT-NOK",
          "SIM-PURGE-HLR-PURGE-SENT-OK",
          "SIM-PURGE-HLR-PURGE-STATUS-CHECK",
          "SIM-PURGE-OM-PURGE-NOK",
          "SIM-PURGE-OM-PURGE-OK",
          "SIM-PURGE-RELEASE-RESOURCES-NOK",
          "SIM-PURGE-RELEASE-RESOURCES-OK",
          "SIM-PURGE-RM-PURGE-NOK",
          "SIM-PURGE-RM-PURGE-OK",
          "SIM-PURGE-VALIDATION-NOK",
          "SIM-PURGE-VALIDATION-OK",
          "SIM-RETIRE-MSISDN-BM-CHANGE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-BM-CHANGE-MSISDN-OK",
          "SIM-RETIRE-MSISDN-CREATED",
          "SIM-RETIRE-MSISDN-FINISHED",
          "SIM-RETIRE-MSISDN-KAFKA-RELEASE-MSISDN-SENT-NOK",
          "SIM-RETIRE-MSISDN-KAFKA-RELEASE-MSISDN-SENT-OK",
          "SIM-RETIRE-MSISDN-OM-RELEASE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-OM-RELEASE-MSISDN-OK",
          "SIM-RETIRE-MSISDN-OUC-RELEASE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-OUC-RELEASE-MSISDN-OK",
          "SIM-RETIRE-MSISDN-RM-GET-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-RM-GET-MSISDN-OK",
          "SIM-RETIRE-MSISDN-RM-RELEASE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-RM-RELEASE-MSISDN-OK",
          "SIM-SWAP-BM-SIM-CREATION-NOK",
          "SIM-SWAP-BM-SIM-CREATION-OK",
          "SIM-SWAP-BM-SIM-SWAP-NOK",
          "SIM-SWAP-BM-SIM-SWAP-OK",
          "SIM-SWAP-CREATED",
          "SIM-SWAP-EP-SIM-SWAP-NOK",
          "SIM-SWAP-EP-SIM-SWAP-OK",
          "SIM-SWAP-FINISHED",
          "SIM-SWAP-HLR-NOK",
          "SIM-SWAP-HLR-OK",
          "SIM-SWAP-HLR-SIM-SWAP-SENT-NOK",
          "SIM-SWAP-HLR-SIM-SWAP-SENT-OK",
          "SIM-SWAP-HLR-SIM-SWAP-STATUS-CHECK",
          "SIM-SWAP-HLR-SWAP-OPERATION-NOK",
          "SIM-SWAP-HLR-SWAP-OPERATION-OK",
          "SIM-SWAP-INTEGRATION-SIM-SWAP-NOK",
          "SIM-SWAP-INTEGRATION-SIM-SWAP-OK",
          "SIM-SWAP-INTEGRATION-SIM-SWAP-SENT-NOK",
          "SIM-SWAP-INTEGRATION-SIM-SWAP-SENT-OK",
          "SIM-SWAP-KAFKA-NOTIFICATION-SENT-NOK",
          "SIM-SWAP-KAFKA-NOTIFICATION-SENT-OK",
          "SIM-SWAP-KSA-SEM-REGISTRATION-NOK",
          "SIM-SWAP-KSA-SEM-REGISTRATION-OK",
          "SIM-SWAP-OM-SIM-SWAP-NOK",
          "SIM-SWAP-OM-SIM-SWAP-OK",
          "SIM-SWAP-OUC-SIM-SWAP-NOK",
          "SIM-SWAP-OUC-SIM-SWAP-OK",
          "SIM-SWAP-RM-SIM-SWAP-NOK",
          "SIM-SWAP-RM-SIM-SWAP-OK",
          "SIM-SWAP-RM-SIM-SWAP-ROLLBACK-NOK",
          "SIM-SWAP-RM-SIM-SWAP-ROLLBACK-OK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-NOK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-OK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-STATUS-CHECK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-NOK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-OK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-STATUS-CHECK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-STATUS-CHECK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-STATUS-CHECK",
          "SIM-UNASSIGN-BM-UNASSIGN-NOK",
          "SIM-UNASSIGN-BM-UNASSIGN-OK",
          "SIM-UNASSIGN-CREATED",
          "SIM-UNASSIGN-EP-UNASSIGN-NOK",
          "SIM-UNASSIGN-EP-UNASSIGN-OK",
          "SIM-UNASSIGN-FINISHED",
          "SIM-UNASSIGN-KAFKA-SENT-NOK",
          "SIM-UNASSIGN-OM-SENT-NOK",
          "SIM-UNASSIGN-OM-SENT-OK",
          "SIM-UNASSIGN-OM-UNASSIGN-NOK",
          "SIM-UNASSIGN-OM-UNASSIGN-OK",
          "SIM-UNASSIGN-OUC-UNASSIGN-NOK",
          "SIM-UNASSIGN-OUC-UNASSIGN-OK",
          "SIM-UNASSIGN-RM-UNASSIGN-NOK",
          "SIM-UNASSIGN-RM-UNASSIGN-OK",
          "SIM-UNASSIGN-VALIDATION-NOK",
          "SIM-UNASSIGN-VALIDATION-OK"
        ],
        "type": "string"
      },
      "core.CmpObjectPendingChange": {
        "allOf": [
          {
            "$ref": "#/components/schemas/core.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "cmpObjectId": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentStep": {
                    "type": "string"
                  },
                  "esbNumber": {
                    "type": "string"
                  },
                  "info": {
                    "type": "string"
                  },
                  "isCancelableIndicator": {
                    "type": "boolean"
                  },
                  "isResumableIndicator": {
                    "type": "boolean"
                  },
                  "isRemoveableIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "nextValue": {
                    "type": "string"
                  },
                  "processingStatus": {
                    "$ref": "#/components/schemas/core.ProcessingStatus"
                  },
                  "processStatus": {
                    "$ref": "#/components/schemas/core.ProcessStatus"
                  },
                  "processType": {
                    "$ref": "#/components/schemas/core.ProcessType"
                  },
                  "refType": {
                    "$ref": "#/components/schemas/core.CmpObjectPendingChangeReferenceType"
                  },
                  "refId": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "core.Process": {
        "allOf": [
          {
            "$ref": "#/components/schemas/core.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "domain": {
                    "$ref": "#/components/schemas/core.ProcessDomain"
                  },
                  "type": {
                    "$ref": "#/components/schemas/core.ProcessType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/core.ProcessStatus"
                  },
                  "processResult": {
                    "$ref": "#/components/schemas/core.ProcessResult"
                  },
                  "originId": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "item": {
                    "maxLength": 256,
                    "type": "string"
                  },
                  "totalItems": {
                    "format": "int32",
                    "type": "number"
                  },
                  "completedItems": {
                    "format": "int32",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "esbNumber": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "parentProcess": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/core.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/core.Process"
                              },
                              {
                                "$ref": "#/components/schemas/core.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subProcesses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/core.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/core.Process"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/core.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.FileData": {
        "$ref": "#/components/schemas/common.FileData"
      },
      "lib.Resource": {
        "$ref": "#/components/schemas/common.Resource"
      },
      "lib.RelationshipToOne": {
        "$ref": "#/components/schemas/common.RelationshipToOne"
      },
      "lib.RelationshipToMany": {
        "$ref": "#/components/schemas/common.RelationshipToMany"
      },
      "lib.CmpObject": {
        "$ref": "#/components/schemas/ca.CmpObject"
      },
      "lib.CustomAttributeValue": {
        "$ref": "#/components/schemas/ca.CustomAttributeValue"
      },
      "lib.ContextCustomAttributeType": {
        "$ref": "#/components/schemas/ca.ContextCustomAttributeType"
      },
      "lib.AccessRestrictionContextLevel": {
        "enum": [
          "ACCOUNT",
          "CSP"
        ],
        "type": "string"
      },
      "lib.AccessType": {
        "enum": [
          "BLACKLIST",
          "WHITELIST"
        ],
        "type": "string"
      },
      "lib.AccountCommitmentBaseType": {
        "enum": [
          "NUMBER-OF-BILLABLE-SUBSCRIBERS",
          "TOTAL-ACCOUNT-REVENUE"
        ],
        "type": "string"
      },
      "lib.AccountCommitmentPenaltyType": {
        "enum": [
          "DIFFERENCE",
          "FIXED",
          "FIXED-PER-SUBSCRIBER"
        ],
        "type": "string"
      },
      "lib.AccountIpAddressVersion": {
        "enum": [
          "IPV4",
          "IPV6"
        ],
        "type": "string"
      },
      "lib.AccountLevelDiscountTierType": {
        "enum": [
          "ACCOUNT-REVENUE",
          "BILLING-ACTIVE-SIMS",
          "DISABLED",
          "SELECTED-SERVICE-REVENUE"
        ],
        "type": "string"
      },
      "lib.AccountStatus": {
        "enum": [
          "ACCOUNT",
          "DRAFT",
          "LEAD",
          "SUSPENDED",
          "TERMINATED"
        ],
        "type": "string"
      },
      "lib.AccountTargetCommitmentEnforcement": {
        "enum": [
          "ACCOUNT-REVENUE",
          "BILLABLE-SIMS",
          "BILLABLE-SIMS-AND-ACCOUNT-REVENUE",
          "BILLABLE-SIMS-AND-SIM-REVENUE",
          "BILLABLE-SIMS-AND-SIM-REVENUE-AND-ACCOUNT-REVENUE",
          "DISABLED",
          "SIM-REVENUE",
          "SIM-REVENUE-AND-ACCOUNT-REVENUE"
        ],
        "type": "string"
      },
      "lib.AccountType": {
        "enum": [
          "ACCOUNT",
          "CUSTOMER"
        ],
        "type": "string"
      },
      "lib.ActivationFeeSubscriptionStatus": {
        "enum": [
          "IN-BILLING",
          "ON-ASSIGNMENT",
          "ON-SUBSCRIPTION-ACTIVATION"
        ],
        "type": "string"
      },
      "lib.AddressObjectType": {
        "enum": [
          "ACCOUNT",
          "ACCOUNT-PERSON",
          "BILLING-PROFILE",
          "COMPANY",
          "ORGUNIT",
          "PERSON"
        ],
        "type": "string"
      },
      "lib.ApnGroupType": {
        "enum": [
          "PRIVATE",
          "PUBLIC"
        ],
        "type": "string"
      },
      "lib.ApnHlrProvisioningType": {
        "enum": [
          "ALIAS",
          "APN"
        ],
        "type": "string"
      },
      "lib.ApnType": {
        "enum": [
          "PRIVATE",
          "PUBLIC"
        ],
        "type": "string"
      },
      "lib.ArtifactType": {
        "enum": [
          "INVOICE",
          "INVOICE-CUSTOMER",
          "REPORT"
        ],
        "type": "string"
      },
      "lib.B2bAccountType": {
        "enum": [
          "ACCOUNT",
          "BROKER-CLIENT",
          "RESELLER",
          "WHOLESALE"
        ],
        "type": "string"
      },
      "lib.B2bCustomerType": {
        "enum": [
          "B2B2B",
          "B2B2BX-CUSTOMER",
          "B2B2BX-RESELLER",
          "NOT-APPLICABLE"
        ],
        "type": "string"
      },
      "lib.BatchType": {
        "enum": [
          "APN",
          "CAS-ACL",
          "CHARGE-CORRECTION",
          "ESIM",
          "ESIM-MULTIIMSI",
          "ESIM-PROFILE-STANDALONE",
          "IMSI",
          "MSISDN",
          "MSISDN-TO-ICCID-ASSIGNMENT",
          "MULTIIMSI",
          "PO-SIM-ASSIGNMENT-ICCID",
          "PO-SIM-ASSIGNMENT-IMSI",
          "SIM",
          "SIM-ACTIVATION",
          "SIM-MOVE",
          "SIM-PURGE",
          "SIM-UNASSIGN"
        ],
        "type": "string"
      },
      "lib.BillingActivationGracePeriodEnforcement": {
        "enum": [
          "DISABLED",
          "REPORTING",
          "STATUS-CHANGE",
          "STATUS-CHANGE-AND-REPORTING"
        ],
        "type": "string"
      },
      "lib.BillingActivationGracePeriodTargetStatus": {
        "enum": [
          "IN-BILLING",
          "IN-TESTING",
          "READY-FOR-BILLING"
        ],
        "type": "string"
      },
      "lib.BillingCycleOwner": {
        "enum": [
          "ACCOUNT",
          "CSP",
          "TENANT"
        ],
        "type": "string"
      },
      "lib.BillingCyclePeriodicity": {
        "enum": [
          "HALF-YEARLY",
          "MONTHLY",
          "QUARTERLY",
          "YEARLY"
        ],
        "type": "string"
      },
      "lib.BillingCycleStatus": {
        "enum": [
          "CLOSED",
          "ISSUED",
          "LOCKED",
          "NOT-STARTED",
          "OPEN"
        ],
        "type": "string"
      },
      "lib.BillingMode": {
        "enum": [
          "SINGLE-BILL",
          "STANDARD"
        ],
        "type": "string"
      },
      "lib.BillingStatusPropagationType": {
        "enum": [
          "BOTH",
          "CUSTOMER-TO-RESELLER",
          "NONE",
          "RESELLER-TO-CUSTOMER"
        ],
        "type": "string"
      },
      "lib.BillrunStatus": {
        "enum": [
          "COMPLETED",
          "DRAFT",
          "FAILED",
          "IN-PROGRESS",
          "NOT-STARTED"
        ],
        "type": "string"
      },
      "lib.BmChargeFlavor": {
        "enum": [
          "ONE-OFF",
          "ONE-OFF-RECURRING",
          "PERCENTAGE",
          "RECURRING"
        ],
        "type": "string"
      },
      "lib.BmChargeType": {
        "enum": [
          "ACCOUNT",
          "SIM"
        ],
        "type": "string"
      },
      "lib.BmCustomerType": {
        "enum": [
          "DEDICATED",
          "SHARED"
        ],
        "type": "string"
      },
      "lib.BmLifecycleStatus": {
        "enum": [
          "APPROVED",
          "DRAFT",
          "READY-FOR-APPROVAL",
          "SUSPENDED",
          "TERMINATED"
        ],
        "type": "string"
      },
      "lib.BmPhoneChargeType": {
        "enum": [
          "MO",
          "MO-MT",
          "MT",
          "NONE"
        ],
        "type": "string"
      },
      "lib.BmPrepaidPriceplanValidityUnit": {
        "enum": [
          "DAY",
          "MONTH",
          "YEAR"
        ],
        "type": "string"
      },
      "lib.BmPrepaidSimValidityUnit": {
        "enum": [
          "DAY",
          "MONTH",
          "YEAR"
        ],
        "type": "string"
      },
      "lib.BmPrepaidType": {
        "enum": [
          "STANDARD",
          "SUPPLEMENTAL",
          "TOPOFF"
        ],
        "type": "string"
      },
      "lib.BmRatingType": {
        "enum": [
          "POSTPAID",
          "PREPAID"
        ],
        "type": "string"
      },
      "lib.BmRoamingProfileFlavor": {
        "enum": [
          "ACCOUNT",
          "PRICEPLAN"
        ],
        "type": "string"
      },
      "lib.BmSimType": {
        "enum": [
          "ACTIVE",
          "ALL",
          "BILLABLE",
          "INACTIVE"
        ],
        "type": "string"
      },
      "lib.BmSmsChargeType": {
        "enum": [
          "MO",
          "MO-MT",
          "MT",
          "NONE"
        ],
        "type": "string"
      },
      "lib.BmSyncStatus": {
        "enum": [
          "ERROR",
          "SUCCESS"
        ],
        "type": "string"
      },
      "lib.BmType": {
        "enum": [
          "POOL",
          "SINGLE"
        ],
        "type": "string"
      },
      "lib.CasAccountPolicy": {
        "enum": [
          "FULL",
          "MODIFY-EXISTING",
          "NONE",
          "READ-ONLY"
        ],
        "type": "string"
      },
      "lib.CasAccountType": {
        "enum": [
          "DELEGATION",
          "FEDERATION",
          "INTERNAL"
        ],
        "type": "string"
      },
      "lib.CasAllowedUsagePolicy": {
        "enum": [
          "DISABLED",
          "ENABLED"
        ],
        "type": "string"
      },
      "lib.CasAuthorizationPolicy": {
        "enum": [
          "FULL",
          "GLOBAL-GROUPS"
        ],
        "type": "string"
      },
      "lib.ChangeRuleSchedule": {
        "enum": [
          "IMMEDIATE",
          "NEXT-BILLING-CYCLE",
          "NEXT-CALENDAR-DAY",
          "NOT-AVAILABLE"
        ],
        "type": "string"
      },
      "lib.ChargeCorrectionContext": {
        "enum": [
          "CREDIT",
          "DEBIT"
        ],
        "type": "string"
      },
      "lib.ChargeCorrectionItemStatus": {
        "enum": [
          "CREATED",
          "DRAFT",
          "FAILED",
          "IN-PROGRESS"
        ],
        "type": "string"
      },
      "lib.ChargeCorrectionSourceType": {
        "enum": [
          "FILE",
          "MANUAL"
        ],
        "type": "string"
      },
      "lib.ChargeCorrectionStatus": {
        "enum": [
          "ACTIVE",
          "DRAFT",
          "FAILED",
          "FINISHED",
          "IN-PROGRESS"
        ],
        "type": "string"
      },
      "lib.ChargeLevel": {
        "enum": [
          "RATING-FILTER",
          "RATING-FILTER-ROOT",
          "SUBSCRIPTION",
          "SUBSCRIPTION-ITEM"
        ],
        "type": "string"
      },
      "lib.ChargeType": {
        "enum": [
          "ANNUAL",
          "BIANNUAL",
          "MONTHLY",
          "QUARTERLY"
        ],
        "type": "string"
      },
      "lib.ClientType": {
        "enum": [
          "ENTERPRISE",
          "PERSON"
        ],
        "type": "string"
      },
      "lib.CmpObjectStagingStatusType": {
        "enum": [
          "ACCOUNTBILLABLE-BI2NB-BILLABLE",
          "ACCOUNTBILLABLE-BI2NB-NON-BILLABLE",
          "ACCOUNTBILLABLE-BI2NB-RM-UPDATE-NOK",
          "ACCOUNTBILLABLE-BI2NB-RM-UPDATE-OK",
          "ACCOUNTBILLABLE-BI2NB-SEND-NOTIFICATION-NOK",
          "ACCOUNTBILLABLE-BI2NB-SEND-NOTIFICATION-OK",
          "ACCOUNTBILLABLE-BI2NB-TKS-TC-UPDATE-NOK",
          "ACCOUNTBILLABLE-BI2NB-TKS-TC-UPDATE-OK",
          "ACCOUNTBILLABLE-NB2BI-BILLABLE",
          "ACCOUNTBILLABLE-NB2BI-NON-BILLABLE",
          "ACCOUNTBILLABLE-NB2BI-RM-UPDATE-NOK",
          "ACCOUNTBILLABLE-NB2BI-RM-UPDATE-OK",
          "ACCOUNTBILLABLE-NB2BI-SEND-NOTIFICATION-NOK",
          "ACCOUNTBILLABLE-NB2BI-SEND-NOTIFICATION-OK",
          "ACCOUNTBILLABLE-NB2BI-TKS-TC-UPDATE-NOK",
          "ACCOUNTBILLABLE-NB2BI-TKS-TC-UPDATE-OK",
          "ACCOUNTLC-D2L-CRM-CREATION-NOK",
          "ACCOUNTLC-D2L-CRM-CREATION-OK",
          "ACCOUNTLC-D2L-DRAFT",
          "ACCOUNTLC-D2L-LEAD",
          "ACCOUNTLC-D2L-NOTIFICATION-SENT-NOK",
          "ACCOUNTLC-D2L-NOTIFICATION-SENT-OK",
          "ACCOUNTLC-D2L-RM-UPDATE-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-OK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-SENT-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-SENT-OK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATE-SUBSCRIBER-STATUS-CHECK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATION-GET-DUMMY-MSISDN-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATION-GET-DUMMY-MSISDN-OK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATION-NOK",
          "ACCOUNTLC-D2L-ZAINKWT-CRM-CREATION-OK",
          "ACCOUNTLC-L2A-ACCOUNT",
          "ACCOUNTLC-L2A-CRM-CREATION-NOK",
          "ACCOUNTLC-L2A-CRM-CREATION-OK",
          "ACCOUNTLC-L2A-LEAD",
          "ACCOUNTLC-L2A-RM-UPDATE-NOK",
          "ACCOUNTLC-L2A-RM-UPDATE-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-ACCOUNT-CREATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-ACCOUNT-CREATION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-ASSIGN-PILOT-MSISDN-IN-RM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-ASSIGN-PILOT-MSISDN-IN-RM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-AVAILABLE-PILOT-MSISDN-IN-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-AVAILABLE-PILOT-MSISDN-IN-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-BILLING-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-BILLING-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-BM-SIM-PROVISIONED-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-BM-SIM-PROVISIONED-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-CONFIRM-PILOT-MSISDN-IN-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-CONFIRM-PILOT-MSISDN-IN-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-CUSTOMER-CREATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-CUSTOMER-CREATION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-DEFAULTSETTINGS-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-DEFAULTSETTINGS-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-EP-SIM-CREATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-EP-SIM-CREATION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-HLR-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-HLR-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-LOCK-PILOT-MSISDN-IN-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-LOCK-PILOT-MSISDN-IN-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-MSISDN-ASSIGNMENT-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-MSISDN-ASSIGNMENT-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-OM-SIM-PROVISIONED-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-OM-SIM-PROVISIONED-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-RESERVE-PILOT-MSISDN-IN-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-RESERVE-PILOT-MSISDN-IN-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-SIM-CREATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-SIM-CREATION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-SRM-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-SRM-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-SUBSCRIPTION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-SUBSCRIPTION-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-UPDATE-AGREEMENT-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-UPDATE-AGREEMENT-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-UPDATE-RM-STATUS-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-UPDATE-RM-STATUS-OK",
          "ACCOUNTLC-L2A-TELKOMSEL-VALIDATION-NOK",
          "ACCOUNTLC-L2A-TELKOMSEL-VALIDATION-OK",
          "COUNTRY-OUC-CREATED",
          "COUNTRY-OUC-FINISHED",
          "COUNTRY-OUC-PROVISIONED-NOK",
          "COUNTRY-OUC-PROVISIONED-OK",
          "PO-BILLING-NOK",
          "PO-BILLING-OK",
          "PO-BM-SIM-PROVISIONED-NOK",
          "PO-BM-SIM-PROVISIONED-OK",
          "PO-DEFAULTSETTINGS-NOK",
          "PO-DEFAULTSETTINGS-OK",
          "PO-DRAFT",
          "PO-EP-SIM-CREATION-NOK",
          "PO-EP-SIM-CREATION-OK",
          "PO-ESIM-PROFILES-PROVISIONING",
          "PO-ESIM-PROVISIONED-NOK",
          "PO-ESIM-PROVISIONED-OK",
          "PO-ESIM-VALIDATION-NOK",
          "PO-ESIM-VALIDATION-OK",
          "PO-FAILED",
          "PO-HLR-NOK",
          "PO-HLR-OK",
          "PO-KAFKA-NOTIFICATION-SENT-NOK",
          "PO-KAFKA-NOTIFICATION-SENT-OK",
          "PO-MSISDN-ASSIGNMENT-NOK",
          "PO-MSISDN-ASSIGNMENT-OK",
          "PO-OM-SIM-PROVISIONED-NOK",
          "PO-OM-SIM-PROVISIONED-OK",
          "PO-PROVISIONED",
          "PO-SIM-CREATION-NOK",
          "PO-SIM-CREATION-OK",
          "SFTP-TRANSFER-ERROR",
          "SFTP-TRANSFER-IN-PROGRESS",
          "SFTP-TRANSFER-OK",
          "SFTP-TRANSFER-RETRY",
          "SIMLC-CI2IT-BM-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-BM-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2IT-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2IT-CUSTOMER-INVENTORY",
          "SIMLC-CI2IT-EP-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-EP-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-HLR-ACTIVATION-NOK",
          "SIMLC-CI2IT-HLR-ACTIVATION-OK",
          "SIMLC-CI2IT-HLR-ACTIVATION-SENT-NOK",
          "SIMLC-CI2IT-HLR-ACTIVATION-SENT-OK",
          "SIMLC-CI2IT-IN-TESTING",
          "SIMLC-CI2IT-KAFKA-ASSIGN-MSISDN-SENT-NOK",
          "SIMLC-CI2IT-KAFKA-ASSIGN-MSISDN-SENT-OK",
          "SIMLC-CI2IT-KSA-SEM-REGISTRATION-NOK",
          "SIMLC-CI2IT-KSA-SEM-REGISTRATION-OK",
          "SIMLC-CI2IT-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2IT-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2IT-OUC-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-OUC-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2IT-RM-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-RM-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-ZAINKSA-CRM-ACTIVATION-SENT-NOK",
          "SIMLC-CI2IT-ZAINKSA-CRM-ACTIVATION-SENT-OK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-NOK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-OK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-SENT-NOK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-SENT-OK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-STATUS-CHECK",
          "SIMLC-CI2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2RE-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2RE-CUSTOMER-INVENTORY",
          "SIMLC-CI2RE-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2RE-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2RE-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2RE-RETIRED",
          "SIMLC-IB2RB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2RB-IN-BILLING",
          "SIMLC-IB2RB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2RB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RB-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2RB-READY-FOR-BILLING",
          "SIMLC-IB2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-NOK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-OK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-SENT-NOK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-SENT-OK",
          "SIMLC-IB2RE-IN-BILLING",
          "SIMLC-IB2RE-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RE-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2RE-RETIRED",
          "SIMLC-IB2SU-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2SU-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2SU-HLR-SUSPEND-NOK",
          "SIMLC-IB2SU-HLR-SUSPEND-OK",
          "SIMLC-IB2SU-HLR-SUSPEND-SENT-NOK",
          "SIMLC-IB2SU-HLR-SUSPEND-SENT-OK",
          "SIMLC-IB2SU-IN-BILLING",
          "SIMLC-IB2SU-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2SU-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2SU-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2SU-SUSPENDED",
          "SIMLC-IT2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IT2IB-IN-BILLING",
          "SIMLC-IT2IB-IN-TESTING",
          "SIMLC-IT2IB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2IB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IT2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-NOK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-OK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-SENT-NOK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-SENT-OK",
          "SIMLC-IT2RE-IN-TESTING",
          "SIMLC-IT2RE-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2RE-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IT2RE-RETIRED",
          "SIMLC-RB2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2IB-IN-BILLING",
          "SIMLC-RB2IB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2IB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2IB-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2IB-READY-FOR-BILLING",
          "SIMLC-RB2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2RE-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2RE-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2RE-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2RE-READY-FOR-BILLING",
          "SIMLC-RB2RE-RETIRED",
          "SIMLC-RE2IB-BM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-BM-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IB-EP-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-EP-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IB-HLR-REACTIVATION-NOK",
          "SIMLC-RE2IB-HLR-REACTIVATION-OK",
          "SIMLC-RE2IB-HLR-REACTIVATION-SENT-NOK",
          "SIMLC-RE2IB-HLR-REACTIVATION-SENT-OK",
          "SIMLC-RE2IB-IN-BILLING",
          "SIMLC-RE2IB-KAFKA-ASSIGN-MSISDN-SENT-NOK",
          "SIMLC-RE2IB-KAFKA-ASSIGN-MSISDN-SENT-OK",
          "SIMLC-RE2IB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IB-OUC-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-OUC-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IB-RETIRED",
          "SIMLC-RE2IB-RM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-RM-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-BM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-BM-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IT-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IT-EP-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-EP-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-IN-TESTING",
          "SIMLC-RE2IT-KAFKA-ASSIGN-MSISDN-SENT-NOK",
          "SIMLC-RE2IT-KAFKA-ASSIGN-MSISDN-SENT-OK",
          "SIMLC-RE2IT-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IT-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IT-OUC-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-OUC-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IT-RETIRED",
          "SIMLC-RE2IT-RM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-RM-ASSIGN-MSISDN-OK",
          "SIMLC-SU2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2IB-HLR-RESUME-NOK",
          "SIMLC-SU2IB-HLR-RESUME-OK",
          "SIMLC-SU2IB-HLR-RESUME-SENT-NOK",
          "SIMLC-SU2IB-HLR-RESUME-SENT-OK",
          "SIMLC-SU2IB-IN-BILLING",
          "SIMLC-SU2IB-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2IB-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2IB-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2IB-OUC-DISABLE-GY-RO-BLOCK-RULES-NOK",
          "SIMLC-SU2IB-SUSPENDED",
          "SIMLC-SU2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-NOK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-OK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-SENT-NOK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-SENT-OK",
          "SIMLC-SU2RE-OM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2RE-OM-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2RE-RETIRED",
          "SIMLC-SU2RE-SUSPENDED",
          "SIM-CHANGE-APN-GROUP-BACKUP-NOK",
          "SIM-CHANGE-APN-GROUP-BACKUP-OK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-SENT-OK",
          "SIM-CHANGE-APN-GROUP-CREATED",
          "SIM-CHANGE-APN-GROUP-FINISHED",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-SENT-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-SENT-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-SENT-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT2-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT2-OK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT-OK",
          "SIM-CHANGE-APN-GROUP-KAFKA-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-KAFKA-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-OM-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-OM-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-OUC-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-OUC-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-RM-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-RM-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-RM-COMMIT-NOK",
          "SIM-CHANGE-APN-GROUP-RM-COMMIT-OK",
          "SIM-CHANGE-APN-GROUP-RM-ROLLBACK-NOK",
          "SIM-CHANGE-APN-GROUP-RM-ROLLBACK-OK",
          "SIM-CHANGE-MSISDN-BM-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-BM-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-CREATED",
          "SIM-CHANGE-MSISDN-EP-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-EP-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-FINISHED",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-SENT-NOK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-SENT-OK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-STATUS-CHECK",
          "SIM-CHANGE-MSISDN-KAFKA-NOTIFICATION-SENT-NOK",
          "SIM-CHANGE-MSISDN-KAFKA-NOTIFICATION-SENT-OK",
          "SIM-CHANGE-MSISDN-OUC-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-OUC-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-ROLLBACK-NOK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-ROLLBACK-OK",
          "SIM-CHANGE-MSISDN-RM-LOCK-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-RM-LOCK-MSISDN-OK",
          "SIM-CHANGE-ROAMING-PROFILE-BM-CHANGE-ROAMING-PROFILE-NOK",
          "SIM-CHANGE-ROAMING-PROFILE-BM-CHANGE-ROAMING-PROFILE-OK",
          "SIM-CHANGE-ROAMING-PROFILE-BM-CHANGE-ROAMING-PROFILE-SENT-NOK",
          "SIM-CHANGE-ROAMING-PROFILE-BM-CHANGE-ROAMING-PROFILE-SENT-OK",
          "SIM-CHANGE-ROAMING-PROFILE-CREATED",
          "SIM-CHANGE-ROAMING-PROFILE-FINISHED",
          "SIM-CHANGE-ROAMING-PROFILE-INTEGRATION-CHANGE-ROAMING-PROFILE-NOK",
          "SIM-CHANGE-ROAMING-PROFILE-INTEGRATION-CHANGE-ROAMING-PROFILE-OK",
          "SIM-CHANGE-ROAMING-PROFILE-RM-CHANGE-ROAMING-PROFILE-NOK",
          "SIM-CHANGE-ROAMING-PROFILE-RM-CHANGE-ROAMING-PROFILE-OK",
          "SIM-CHANGE-SERVICE-PROFILE-BM-CHANGE-SERVICE-PROFILE-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-BM-CHANGE-SERVICE-PROFILE-OK",
          "SIM-CHANGE-SERVICE-PROFILE-BM-CHANGE-SERVICE-PROFILE-SENT-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-BM-CHANGE-SERVICE-PROFILE-SENT-OK",
          "SIM-CHANGE-SERVICE-PROFILE-CREATED",
          "SIM-CHANGE-SERVICE-PROFILE-FINISHED",
          "SIM-CHANGE-SERVICE-PROFILE-INTEGRATION-CHANGE-SERVICE-PROFILE-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-INTEGRATION-CHANGE-SERVICE-PROFILE-OK",
          "SIM-CHANGE-SERVICE-PROFILE-INTEGRATION-CHANGE-SERVICE-PROFILE-SENT-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-INTEGRATION-CHANGE-SERVICE-PROFILE-SENT-OK",
          "SIM-CHANGE-SERVICE-PROFILE-RM-CHANGE-SERVICE-PROFILE-NOK",
          "SIM-CHANGE-SERVICE-PROFILE-RM-CHANGE-SERVICE-PROFILE-OK",
          "SIM-CHANGE-STATIC-IP-BACKUP-NOK",
          "SIM-CHANGE-STATIC-IP-BACKUP-OK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-SENT-NOK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-SENT-OK",
          "SIM-CHANGE-STATIC-IP-CREATED",
          "SIM-CHANGE-STATIC-IP-FINISHED",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-CHANGE-STATIC-IP-NOK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-CHANGE-STATIC-IP-OK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-CHANGE-STATIC-IP-SENT-NOK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-CHANGE-STATIC-IP-SENT-OK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-GLOBAL-CHARGE-NOK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-GLOBAL-CHARGE-OK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-GLOBAL-CHARGE-SENT-NOK",
          "SIM-CHANGE-STATIC-IP-INTEGRATION-GLOBAL-CHARGE-SENT-OK",
          "SIM-CHANGE-STATIC-IP-OM-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-OM-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-OUC-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-OUC-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-RM-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-RM-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-RM-COMMIT-NOK",
          "SIM-CHANGE-STATIC-IP-RM-COMMIT-OK",
          "SIM-CHANGE-STATIC-IP-RM-ROLLBACK-NOK",
          "SIM-CHANGE-STATIC-IP-RM-ROLLBACK-OK",
          "SIM-HLR-REFRESH-CANCEL-LOCATION-NOK",
          "SIM-HLR-REFRESH-CANCEL-LOCATION-OK",
          "SIM-HLR-REFRESH-FINISHED",
          "SIM-HLR-REFRESH-NOK",
          "SIM-HLR-REFRESH-OK",
          "SIM-HLR-REFRESH-PROFILE-PURGE-NOK",
          "SIM-HLR-REFRESH-PROFILE-PURGE-OK",
          "SIM-HLR-REFRESH-PROFILE-UPDATE-NOK",
          "SIM-HLR-REFRESH-PROFILE-UPDATE-OK",
          "SIM-MOVE-BACKUP-NOK",
          "SIM-MOVE-BACKUP-OK",
          "SIM-MOVE-BM-REASSIGN-SIM-NOK",
          "SIM-MOVE-BM-REASSIGN-SIM-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-SENT-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN2-GROUP-SENT-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-SENT-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-GLOBAL-CHARGE-SENT-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-SENT-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-REMOVE-SENT-OK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT-NOK",
          "SIM-MOVE-CHANGE-APN-GROUP-INTEGRATION-CHANGE-APN-GROUP-SENT-OK",
          "SIM-MOVE-CREATED",
          "SIM-MOVE-EP-REASSIGN-NOK",
          "SIM-MOVE-EP-REASSIGN-OK",
          "SIM-MOVE-FINISHED",
          "SIM-MOVE-KAFKA-NOTIFICATION-SENT-NOK",
          "SIM-MOVE-KAFKA-NOTIFICATION-SENT-OK",
          "SIM-MOVE-OM-ACTIVATE-SIM-NOK",
          "SIM-MOVE-OM-ACTIVATE-SIM-OK",
          "SIM-MOVE-OM-PURGE-SIM-NOK",
          "SIM-MOVE-OM-PURGE-SIM-OK",
          "SIM-MOVE-OM-REASSIGN-SIM-NOK",
          "SIM-MOVE-OM-REASSIGN-SIM-OK",
          "SIM-MOVE-OUC-REASSIGN-NOK",
          "SIM-MOVE-OUC-REASSIGN-OK",
          "SIM-MOVE-RM-REASSIGN-SIM-NOK",
          "SIM-MOVE-RM-REASSIGN-SIM-OK",
          "SIM-MOVE-RM-ROLLBACK-NOK",
          "SIM-MOVE-RM-ROLLBACK-OK",
          "SIM-PREPAID-AUTORENEW-DISABLED",
          "SIM-PREPAID-AUTORENEW-ENABLED",
          "SIM-PREPAID-AUTORENEW-OUC-CHANGE-NOK",
          "SIM-PREPAID-AUTORENEW-OUC-CHANGE-OK",
          "SIM-PREPAID-AUTORENEW-RM-CHANGE-NOK",
          "SIM-PREPAID-AUTORENEW-RM-CHANGE-OK",
          "SIM-PURGE-BM-PURGE-NOK",
          "SIM-PURGE-BM-PURGE-OK",
          "SIM-PURGE-CREATED",
          "SIM-PURGE-FINISHED",
          "SIM-PURGE-HLR-PURGE-NOK",
          "SIM-PURGE-HLR-PURGE-OK",
          "SIM-PURGE-HLR-PURGE-SENT-NOK",
          "SIM-PURGE-HLR-PURGE-SENT-OK",
          "SIM-PURGE-HLR-PURGE-STATUS-CHECK",
          "SIM-PURGE-OM-PURGE-NOK",
          "SIM-PURGE-OM-PURGE-OK",
          "SIM-PURGE-RELEASE-RESOURCES-NOK",
          "SIM-PURGE-RELEASE-RESOURCES-OK",
          "SIM-PURGE-RM-PURGE-NOK",
          "SIM-PURGE-RM-PURGE-OK",
          "SIM-PURGE-VALIDATION-NOK",
          "SIM-PURGE-VALIDATION-OK",
          "SIM-RETIRE-MSISDN-BM-CHANGE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-BM-CHANGE-MSISDN-OK",
          "SIM-RETIRE-MSISDN-CREATED",
          "SIM-RETIRE-MSISDN-FINISHED",
          "SIM-RETIRE-MSISDN-KAFKA-RELEASE-MSISDN-SENT-NOK",
          "SIM-RETIRE-MSISDN-KAFKA-RELEASE-MSISDN-SENT-OK",
          "SIM-RETIRE-MSISDN-OM-RELEASE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-OM-RELEASE-MSISDN-OK",
          "SIM-RETIRE-MSISDN-OUC-RELEASE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-OUC-RELEASE-MSISDN-OK",
          "SIM-RETIRE-MSISDN-RM-GET-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-RM-GET-MSISDN-OK",
          "SIM-RETIRE-MSISDN-RM-RELEASE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-RM-RELEASE-MSISDN-OK",
          "SIM-SWAP-BM-SIM-CREATION-NOK",
          "SIM-SWAP-BM-SIM-CREATION-OK",
          "SIM-SWAP-BM-SIM-SWAP-NOK",
          "SIM-SWAP-BM-SIM-SWAP-OK",
          "SIM-SWAP-CREATED",
          "SIM-SWAP-EP-SIM-SWAP-NOK",
          "SIM-SWAP-EP-SIM-SWAP-OK",
          "SIM-SWAP-FINISHED",
          "SIM-SWAP-HLR-NOK",
          "SIM-SWAP-HLR-OK",
          "SIM-SWAP-HLR-SIM-SWAP-SENT-NOK",
          "SIM-SWAP-HLR-SIM-SWAP-SENT-OK",
          "SIM-SWAP-HLR-SIM-SWAP-STATUS-CHECK",
          "SIM-SWAP-HLR-SWAP-OPERATION-NOK",
          "SIM-SWAP-HLR-SWAP-OPERATION-OK",
          "SIM-SWAP-INTEGRATION-SIM-SWAP-NOK",
          "SIM-SWAP-INTEGRATION-SIM-SWAP-OK",
          "SIM-SWAP-INTEGRATION-SIM-SWAP-SENT-NOK",
          "SIM-SWAP-INTEGRATION-SIM-SWAP-SENT-OK",
          "SIM-SWAP-KAFKA-NOTIFICATION-SENT-NOK",
          "SIM-SWAP-KAFKA-NOTIFICATION-SENT-OK",
          "SIM-SWAP-KSA-SEM-REGISTRATION-NOK",
          "SIM-SWAP-KSA-SEM-REGISTRATION-OK",
          "SIM-SWAP-OM-SIM-SWAP-NOK",
          "SIM-SWAP-OM-SIM-SWAP-OK",
          "SIM-SWAP-OUC-SIM-SWAP-NOK",
          "SIM-SWAP-OUC-SIM-SWAP-OK",
          "SIM-SWAP-RM-SIM-SWAP-NOK",
          "SIM-SWAP-RM-SIM-SWAP-OK",
          "SIM-SWAP-RM-SIM-SWAP-ROLLBACK-NOK",
          "SIM-SWAP-RM-SIM-SWAP-ROLLBACK-OK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-NOK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-OK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-STATUS-CHECK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-NOK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-OK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-STATUS-CHECK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-STATUS-CHECK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-STATUS-CHECK",
          "SIM-UNASSIGN-BM-UNASSIGN-NOK",
          "SIM-UNASSIGN-BM-UNASSIGN-OK",
          "SIM-UNASSIGN-CREATED",
          "SIM-UNASSIGN-EP-UNASSIGN-NOK",
          "SIM-UNASSIGN-EP-UNASSIGN-OK",
          "SIM-UNASSIGN-FINISHED",
          "SIM-UNASSIGN-KAFKA-SENT-NOK",
          "SIM-UNASSIGN-OM-SENT-NOK",
          "SIM-UNASSIGN-OM-SENT-OK",
          "SIM-UNASSIGN-OM-UNASSIGN-NOK",
          "SIM-UNASSIGN-OM-UNASSIGN-OK",
          "SIM-UNASSIGN-OUC-UNASSIGN-NOK",
          "SIM-UNASSIGN-OUC-UNASSIGN-OK",
          "SIM-UNASSIGN-RM-UNASSIGN-NOK",
          "SIM-UNASSIGN-RM-UNASSIGN-OK",
          "SIM-UNASSIGN-VALIDATION-NOK",
          "SIM-UNASSIGN-VALIDATION-OK"
        ],
        "type": "string"
      },
      "lib.CommunicationManagementType": {
        "enum": [
          "DIRECT",
          "WHOLESALE"
        ],
        "type": "string"
      },
      "lib.ContextType": {
        "enum": [
          "ACCOUNT",
          "ACCOUNT-GROUP",
          "CSP",
          "CUSTOMER",
          "SIM-GROUP",
          "TENANT",
          "USERGROUP"
        ],
        "type": "string"
      },
      "lib.ContractChargeType": {
        "enum": [
          "ONE-TIME-CHARGES",
          "RECURRING-CHARGES"
        ],
        "type": "string"
      },
      "lib.ContractDocumentType": {
        "enum": [
          "PDF"
        ],
        "type": "string"
      },
      "lib.ContractStatus": {
        "enum": [
          "APPROVED",
          "DRAFT",
          "EXPIRED",
          "FOR-APPROVAL",
          "REJECTED"
        ],
        "type": "string"
      },
      "lib.CountryType": {
        "enum": [
          "COUNTRY",
          "OTHER",
          "SATELLITE"
        ],
        "type": "string"
      },
      "lib.Currency": {
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UYW",
          "UZS",
          "VES",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XOF",
          "XPF",
          "YER",
          "ZAR",
          "ZMW",
          "ZWL"
        ],
        "type": "string"
      },
      "lib.CustomerStatus": {
        "enum": [
          "ACTIVE",
          "ARCHIVED",
          "DRAFT",
          "SUSPENDED",
          "TERMINATED"
        ],
        "type": "string"
      },
      "lib.DataImeiLockListType": {
        "enum": [
          "IMEI-INDIVIDUAL",
          "IMEI-PATTERN"
        ],
        "type": "string"
      },
      "lib.DataSessionBlockingReasonType": {
        "enum": [
          "INACTIVE-DUE-TO-SERVICE-BLOCK-ACTION",
          "INVALID-PRICEPLAN",
          "INVALID-ZONE",
          "ONLINE-BLOCK-FOR-CUSTOMER-INVENTORY-STATUS",
          "ONLINE-BLOCK-FOR-RETIRED-STATUS",
          "ONLINE-BLOCK-FOR-SUSPENDED-STATUS",
          "PREPAID-PRICE-PLAN-EXPIRED",
          "RADIUS-AUTHENTICATION-FAILED",
          "SECURITY-PROFILE-VIOLATION",
          "SIM-USAGE-LIMIT-EXCEEDED",
          "UNKNOWN",
          "ZONE-USAGE-LIMIT-EXCEEDED"
        ],
        "type": "string"
      },
      "lib.DataSessionStatus": {
        "enum": [
          "BLOCKED",
          "OFFLINE",
          "ONLINE",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "lib.DataType": {
        "enum": [
          "BIGINT",
          "BOOLEAN",
          "DATE",
          "DYNAMIC-ENUM",
          "ENUM",
          "FUNCTION",
          "ID",
          "INTEGER",
          "KEY",
          "NUMERIC",
          "PERIOD",
          "REGEXP",
          "TEXT",
          "TIMESTAMP"
        ],
        "type": "string"
      },
      "lib.DiscountType": {
        "enum": [
          "FIXED",
          "PERCENTAGE"
        ],
        "type": "string"
      },
      "lib.EinvoiceDeliveryFormat": {
        "enum": [
          "EDIFACT",
          "EU-EN-16931",
          "NORWAY-EHF",
          "NOT-APPLICABLE"
        ],
        "type": "string"
      },
      "lib.EmmProvider": {
        "enum": [
          "APPLE",
          "GOOGLE"
        ],
        "type": "string"
      },
      "lib.ErrorSource": {
        "enum": [
          "LOCAL",
          "REMOTE"
        ],
        "type": "string"
      },
      "lib.EsimPlatformType": {
        "enum": [
          "OTHER",
          "TELIACESIM"
        ],
        "type": "string"
      },
      "lib.EsimProfileCapability": {
        "enum": [
          "MULTIPLE",
          "SINGLE"
        ],
        "type": "string"
      },
      "lib.EsimType": {
        "enum": [
          "SGP.02",
          "SGP.22",
          "SGP.32"
        ],
        "type": "string"
      },
      "lib.EsimProfileStatus": {
        "enum": [
          "ALLOCATED",
          "AVAILABLE",
          "CONFIRMED",
          "CREATED",
          "DELETED",
          "DISABLED",
          "DOWNLOADED",
          "ENABLED",
          "ERROR",
          "INSTALLED",
          "LINKED",
          "LOCKED",
          "RELEASED",
          "UNAVAILABLE",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "lib.EsimProfileStatusSimple": {
        "enum": [
          "AVAILABLE",
          "BOOKED",
          "DELETED",
          "DISABLED",
          "DOWNLOADABLE",
          "DOWNLOADED",
          "ENABLED",
          "FAILED",
          "INVENTORY",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "lib.FileUploadStatus": {
        "enum": [
          "FAILED",
          "IN-PROGRESS",
          "NOT-STARTED",
          "UPLOADED"
        ],
        "type": "string"
      },
      "lib.FrGatewayAllocationType": {
        "enum": [
          "DEFAULT",
          "NOT-APPLICABLE",
          "USER-EQUIPMENT"
        ],
        "type": "string"
      },
      "lib.InterimBillingCycleCause": {
        "enum": [
          "ACCOUNT-CHARGE",
          "ACCOUNT-TERMINATE"
        ],
        "type": "string"
      },
      "lib.InterimBillingCycleItemStatus": {
        "enum": [
          "DONE",
          "READY"
        ],
        "type": "string"
      },
      "lib.InterimBillingCycleStatus": {
        "enum": [
          "CLOSED",
          "PROCESSING",
          "READY",
          "WAIT-PROCESS"
        ],
        "type": "string"
      },
      "lib.InvoiceDeliveryMethod": {
        "enum": [
          "EINVOICE",
          "EMAIL",
          "EMAIL-AND-HARDCOPY",
          "HARDCOPY"
        ],
        "type": "string"
      },
      "lib.InvoiceFormat": {
        "enum": [
          "RESELLER",
          "STANDARD"
        ],
        "type": "string"
      },
      "lib.InvoiceGenerationType": {
        "enum": [
          "COST-INFO",
          "DISABLED",
          "INVOICE"
        ],
        "type": "string"
      },
      "lib.InvoiceLanguage": {
        "enum": [
          "ENGLISH",
          "PORTUGUESE",
          "SPANISH"
        ],
        "type": "string"
      },
      "lib.InvoiceOutputFormat": {
        "enum": [
          "BOTH",
          "PDF",
          "RAW"
        ],
        "type": "string"
      },
      "lib.InvoicePeriodicity": {
        "enum": [
          "HALF-YEARLY",
          "MONTHLY",
          "QUARTERLY",
          "YEARLY"
        ],
        "type": "string"
      },
      "lib.IpAddressType": {
        "enum": [
          "V4",
          "V6"
        ],
        "type": "string"
      },
      "lib.IpAllocationType": {
        "enum": [
          "DYNAMIC-V4",
          "DYNAMIC-V6",
          "FRAMED-ROUTE-V4",
          "RADIUS-FWD-V4",
          "RADIUS-FWD-V6",
          "STATIC-V4",
          "STATIC-V6"
        ],
        "type": "string"
      },
      "lib.LegacySubscriptionItemType": {
        "enum": [
          "ADDON-ACCOUNT",
          "ADDON-SIM",
          "PRICEPLAN-NETWORKPRICELIST",
          "PRICEPLAN-POSTPAID-FLEX",
          "PRICEPLAN-POSTPAID-FLEX-SHARED",
          "PRICEPLAN-POSTPAID-INDIVIDUAL",
          "PRICEPLAN-POSTPAID-INDIVIDUAL-SHARED",
          "PRICEPLAN-POSTPAID-STATIC",
          "PRICEPLAN-POSTPAID-STATIC-SHARED",
          "PRICEPLAN-PREPAID-FLEX",
          "PRICEPLAN-PREPAID-FLEX-SHARED",
          "PRICEPLAN-PREPAID-INDIVIDUAL",
          "PRICEPLAN-PREPAID-INDIVIDUAL-SHARED",
          "PRICEPLAN-PREPAID-STATIC",
          "PRICEPLAN-PREPAID-STATIC-SHARED",
          "PRICEPLAN-TOPOFF",
          "PRICEPLAN-TOPOFF-SHARED",
          "PRICEPLAN-TOPON",
          "PRICEPLAN-TOPON-SHARED",
          "PRICEPLAN-TOPUP",
          "PRICEPLAN-TOPUP-SHARED"
        ],
        "type": "string"
      },
      "lib.MfaSettings": {
        "enum": [
          "DISABLED",
          "EMAIL",
          "SMS",
          "SMS-EMAIL"
        ],
        "type": "string"
      },
      "lib.MinimumAccountRevenueType": {
        "enum": [
          "DIFFERENT-TARGET-REVENUE-PER-SIM",
          "FIXED-PER-ACCOUNT"
        ],
        "type": "string"
      },
      "lib.MinBillableBillcyclesEnforcement": {
        "enum": [
          "DISABLED",
          "ENABLED",
          "ENABLED-AND-REPORTING",
          "REPORTING"
        ],
        "type": "string"
      },
      "lib.MinBillableBillcyclesViolationFeeType": {
        "enum": [
          "FIXED-FEE-PER-SIM"
        ],
        "type": "string"
      },
      "lib.ResellerModificationType": {
        "enum": [
          "PRICE",
          "PRICE-AND-ALLOWANCE",
          "PROHIBITED",
          "UNRESTRICTED"
        ],
        "type": "string"
      },
      "lib.MrcChargeType": {
        "enum": [
          "IN-ADVANCE",
          "IN-RETROSPECT"
        ],
        "type": "string"
      },
      "lib.MsisdnAvailabilityStatus": {
        "enum": [
          "AVAILABLE",
          "IN-USE",
          "NOT-REUSABLE"
        ],
        "type": "string"
      },
      "lib.MsisdnPoolType": {
        "enum": [
          "DUMMY-MSISDN-POOL",
          "EXTERNAL-DIALABLE-MSISDN-POOL"
        ],
        "type": "string"
      },
      "lib.NoteCategory": {
        "enum": [
          "ACCOUNTING",
          "GENERAL",
          "TECHNICAL"
        ],
        "type": "string"
      },
      "lib.NotificationType": {
        "enum": [
          "EMAIL"
        ],
        "type": "string"
      },
      "lib.OrderStatus": {
        "enum": [
          "ACCEPTED",
          "ASSIGNMENT-ONGOING",
          "CLOSED",
          "COMPLETED",
          "DRAFT",
          "FAILED",
          "IN-PROGRESS",
          "READY",
          "REJECTED",
          "SHIPPED",
          "SUBMITTED"
        ],
        "type": "string"
      },
      "lib.OucProvisioningStatus": {
        "enum": [
          "ERROR",
          "IN-PROGRESS",
          "NOT-PROVISIONED",
          "PROVISIONED"
        ],
        "type": "string"
      },
      "lib.OutputFormat": {
        "enum": [
          "CSV",
          "PDF"
        ],
        "type": "string"
      },
      "lib.OverusageActionType": {
        "enum": [
          "AUTO-RENEW",
          "BLOCK",
          "CHARGE"
        ],
        "type": "string"
      },
      "lib.PaymentMethod": {
        "enum": [
          "DIRECT-DEBIT",
          "PAY-SLIP",
          "SEPA"
        ],
        "type": "string"
      },
      "lib.PcrfDataServiceBehavior": {
        "enum": [
          "CONTINUE",
          "BLOCK",
          "THROTTLE"
        ],
        "type": "string"
      },
      "lib.PcrfZoneSupportType": {
        "enum": [
          "ANY-ZONE",
          "HOME-ZONE",
          "NOT-APPLICABLE"
        ],
        "type": "string"
      },
      "lib.Periodicity": {
        "enum": [
          "AD-HOC",
          "BILLINGCYCLE",
          "CUSTOM",
          "DAILY",
          "MONTHLY",
          "WEEKLY"
        ],
        "type": "string"
      },
      "lib.PlatformType": {
        "enum": [
          "CMP",
          "CMPL",
          "COM4",
          "COMARCH",
          "ERICSSON",
          "JASPER",
          "NOKIA",
          "NOKIACPS",
          "NOKIAMC",
          "OTHER",
          "TELIASWE",
          "TELKOMSL",
          "VODAFONE",
          "ZAINBHR",
          "ZAINKSA",
          "ZAINKWT"
        ],
        "type": "string"
      },
      "lib.PoolMrcChargeType": {
        "enum": [
          "ALWAYS-CHARGED",
          "SIM-ALIGNED"
        ],
        "type": "string"
      },
      "lib.PoolType": {
        "enum": [
          "STATIC",
          "DYNAMIC"
        ],
        "type": "string"
      },
      "lib.PortalStatus": {
        "enum": [
          "CLOSED",
          "DRAFT",
          "IN-PROGRESS",
          "REJECTED",
          "SIMS-ASSIGNED",
          "SUBMITTED"
        ],
        "type": "string"
      },
      "lib.PrepaidAutoRenewTemplateType": {
        "enum": [
          "DEDICATED",
          "SHARED"
        ],
        "type": "string"
      },
      "lib.PrepaidAutoRenewTerminationBehavior": {
        "enum": [
          "RESTART",
          "RETURN-BASE",
          "STOP-LAST"
        ],
        "type": "string"
      },
      "lib.PrepaidRenewalMode": {
        "enum": [
          "CURRENT-PRICEPLAN",
          "DISABLED",
          "RENEWAL-QUEUE"
        ],
        "type": "string"
      },
      "lib.PrepaidRenewalModeImsi": {
        "enum": [
          "DISABLED",
          "RENEWAL-QUEUE-DEDICATED",
          "RENEWAL-QUEUE-SHARED"
        ],
        "type": "string"
      },
      "lib.PrepaidSupplementalLevel": {
        "enum": [
          "ACCOUNT",
          "PRICEPLAN",
          "SIM"
        ],
        "type": "string"
      },
      "lib.PrepaidSupplementalPriceplanRenewalMode": {
        "enum": [
          "CURRENT-PRICEPLAN",
          "DISABLED"
        ],
        "type": "string"
      },
      "lib.ProcessingStatus": {
        "enum": [
          "PROCESSING-FAILED",
          "PROCESSING-STARTED"
        ],
        "type": "string"
      },
      "lib.ProcessExecution": {
        "enum": [
          "NOT-AVAILABLE",
          "PERMANENT",
          "PERMANENT-AND-TEMPORARY",
          "TEMPORARY"
        ],
        "type": "string"
      },
      "lib.ProcessStatus": {
        "enum": [
          "COMPLETED",
          "IN-PROGRESS",
          "NOT-STARTED"
        ],
        "type": "string"
      },
      "lib.ProcessTrigger": {
        "enum": [
          "AUTOMATED",
          "MANUAL",
          "MANUAL-AND-AUTOMATED",
          "NOT-AVAILABLE"
        ],
        "type": "string"
      },
      "lib.ProcessType": {
        "enum": [
          "ACCOUNTBILLABLE-BI2NB",
          "ACCOUNTBILLABLE-NB2BI",
          "ACCOUNTLC-D2L",
          "ACCOUNTLC-L2A",
          "COUNTRY-OUC",
          "PO",
          "SFTP-TRANSFER",
          "SIMLC-CI2IT",
          "SIMLC-CI2RE",
          "SIMLC-IB2RB",
          "SIMLC-IB2RE",
          "SIMLC-IB2SU",
          "SIMLC-IT2IB",
          "SIMLC-IT2RE",
          "SIMLC-RB2IB",
          "SIMLC-RB2RE",
          "SIMLC-RE2IB",
          "SIMLC-RE2IT",
          "SIMLC-SU2IB",
          "SIMLC-SU2RE",
          "SIM-CHANGE-APN-GROUP",
          "SIM-CHANGE-MSISDN",
          "SIM-CHANGE-STATIC-IP",
          "SIM-MOVE",
          "SIM-PREPAID-AUTORENEW",
          "SIM-PURGE",
          "SIM-RETIRE-MSISDN",
          "SIM-SWAP",
          "SIM-UNASSIGN",
          "SIM-HLR-REFRESH",
          "SIM-CHANGE-ROAMING-PROFILE",
          "SIM-CHANGE-SERVICE-PROFILE"
        ],
        "type": "string"
      },
      "lib.ProxyType": {
        "enum": [
          "HTTPS",
          "SOCKS-V4",
          "SOCKS-V5"
        ],
        "type": "string"
      },
      "lib.PurchaseOrderSimStagingStatus": {
        "enum": [
          "BILLING-NOK",
          "BILLING-OK",
          "BM-SIM-PROVISIONED-NOK",
          "BM-SIM-PROVISIONED-OK",
          "BM-SIM-UPDATE-NOK",
          "BM-SIM-UPDATE-OK",
          "DEFAULTSETTINGS-NOK",
          "DEFAULTSETTINGS-OK",
          "DRAFT",
          "EP-SIM-CREATION-NOK",
          "EP-SIM-CREATION-OK",
          "ESIM-PROFILES-PROVISIONING",
          "ESIM-PROVISIONED-NOK",
          "ESIM-PROVISIONED-OK",
          "ESIM-VALIDATION-NOK",
          "ESIM-VALIDATION-OK",
          "FAILED",
          "HLR-NOK",
          "HLR-OK",
          "KAFKA-NOTIFICATION-SENT-NOK",
          "KAFKA-NOTIFICATION-SENT-OK",
          "MSISDN-ASSIGNMENT-NOK",
          "MSISDN-ASSIGNMENT-OK",
          "MSISDN-NOK",
          "MSISDN-OK",
          "OM-SIM-PROVISIONED-NOK",
          "OM-SIM-PROVISIONED-OK",
          "OM-SIM-PROVISIONED-SENT-NOK",
          "OM-SIM-PROVISIONED-SENT-OK",
          "OM-SIM-UPDATE-APN2-GROUP-NOK",
          "OM-SIM-UPDATE-APN2-GROUP-OK",
          "OM-SIM-UPDATE-APN2-GROUP-SENT-NOK",
          "OM-SIM-UPDATE-APN2-GROUP-SENT-OK",
          "OM-SIM-UPDATE-APN3-GROUP-NOK",
          "OM-SIM-UPDATE-APN3-GROUP-OK",
          "OM-SIM-UPDATE-APN3-GROUP-SENT-NOK",
          "OM-SIM-UPDATE-APN3-GROUP-SENT-OK",
          "OM-SIM-UPDATE-APN4-GROUP-NOK",
          "OM-SIM-UPDATE-APN4-GROUP-OK",
          "OM-SIM-UPDATE-APN4-GROUP-SENT-NOK",
          "OM-SIM-UPDATE-APN4-GROUP-SENT-OK",
          "OM-SIM-UPDATE-APN-GROUP-GLOBAL-CHARGE-NOK",
          "OM-SIM-UPDATE-APN-GROUP-GLOBAL-CHARGE-OK",
          "OM-SIM-UPDATE-APN-GROUP-GLOBAL-CHARGE-SENT-NOK",
          "OM-SIM-UPDATE-APN-GROUP-GLOBAL-CHARGE-SENT-OK",
          "OM-SIM-UPDATE-APN-GROUP-NOK",
          "OM-SIM-UPDATE-APN-GROUP-OK",
          "OM-SIM-UPDATE-APN-GROUP-SECOND-NOK",
          "OM-SIM-UPDATE-APN-GROUP-SECOND-OK",
          "OM-SIM-UPDATE-APN-GROUP-SECOND-SENT-NOK",
          "OM-SIM-UPDATE-APN-GROUP-SECOND-SENT-OK",
          "OM-SIM-UPDATE-APN-GROUP-SENT-NOK",
          "OM-SIM-UPDATE-APN-GROUP-SENT-OK",
          "OM-SIM-UPDATE-PROFILE-NOK",
          "OM-SIM-UPDATE-PROFILE-OK",
          "OM-SIM-UPDATE-PROFILE-SENT-NOK",
          "OM-SIM-UPDATE-PROFILE-SENT-OK",
          "OM-SIM-UPDATE-ROAMING-PROFILE-NOK",
          "OM-SIM-UPDATE-ROAMING-PROFILE-OK",
          "OM-SIM-UPDATE-ROAMING-PROFILE-SENT-NOK",
          "OM-SIM-UPDATE-ROAMING-PROFILE-SENT-OK",
          "PROVISIONED",
          "SIM-CREATION-NOK",
          "SIM-CREATION-OK"
        ],
        "type": "string"
      },
      "lib.QosProfileType": {
        "enum": [
          "HLR",
          "PCRF"
        ],
        "type": "string"
      },
      "lib.QosProfileCategory": {
        "enum": [
          "APN",
          "PCRF"
        ],
        "type": "string"
      },
      "lib.RadiusAuthenticationType": {
        "enum": [
          "NONE",
          "IMSI-PAP",
          "REJECT"
        ],
        "type": "string"
      },
      "lib.RatingGroupType": {
        "enum": [
          "APN-DEDICATED",
          "GLOBAL"
        ],
        "type": "string"
      },
      "lib.RatingType": {
        "enum": [
          "PRORATED",
          "RETRORATED"
        ],
        "type": "string"
      },
      "lib.RemoteStorageType": {
        "enum": [
          "SFTP"
        ],
        "type": "string"
      },
      "lib.ReportExecutionStatus": {
        "enum": [
          "FAILED",
          "NEW",
          "RUNNING",
          "SUCCESS"
        ],
        "type": "string"
      },
      "lib.ReportQueryType": {
        "enum": [
          "JASPER",
          "SIM-GRID-EXPORT",
          "SQL",
          "STOREDPROC"
        ],
        "type": "string"
      },
      "lib.ReportStatus": {
        "enum": [
          "ACTIVE",
          "DRAFT",
          "INACTIVE"
        ],
        "type": "string"
      },
      "lib.ReportType": {
        "enum": [
          "CSP",
          "PRIVATE",
          "PUBLIC"
        ],
        "type": "string"
      },
      "lib.ResellerProfileType": {
        "enum": [
          "ACCOUNT",
          "CUSTOMER"
        ],
        "type": "string"
      },
      "lib.ResourceStatus": {
        "enum": [
          "ACTIVE",
          "DRAFT",
          "INACTIVE",
          "LOCKED",
          "RETIRED"
        ],
        "type": "string"
      },
      "lib.RoamingProfileContext": {
        "enum": [
          "ACCOUNT",
          "PRICEPLAN"
        ],
        "type": "string"
      },
      "lib.RoamingProfileType": {
        "enum": [
          "BLACKLIST",
          "WHITELIST"
        ],
        "type": "string"
      },
      "lib.RoundingData": {
        "enum": [
          "100kB",
          "1024kB",
          "10kB",
          "1kB"
        ],
        "type": "string"
      },
      "lib.RoundingVoice": {
        "enum": [
          "180s",
          "1s",
          "30s",
          "360s",
          "60s"
        ],
        "type": "string"
      },
      "lib.RoServiceType": {
        "enum": [
          "VOICE-MO",
          "VOICE-MT"
        ],
        "type": "string"
      },
      "lib.SecurityProfileApplicability": {
        "enum": [
          "ACCOUNT",
          "ACCOUNT-HIERARCHY",
          "IMSI"
        ],
        "type": "string"
      },
      "lib.SecurityProfileType": {
        "enum": [
          "DATA-IMEI-LOCK",
          "SMS",
          "VOICE"
        ],
        "type": "string"
      },
      "lib.ServerPriority": {
        "enum": [
          "PRIMARY",
          "SECONDARY"
        ],
        "type": "string"
      },
      "lib.ServiceStatus": {
        "enum": [
          "DISABLED",
          "ENABLED",
          "NOT-APPLICABLE"
        ],
        "type": "string"
      },
      "lib.Sex": {
        "enum": [
          "DIVERSE",
          "FEMALE",
          "MALE"
        ],
        "type": "string"
      },
      "lib.SftpAuthenticationType": {
        "enum": [
          "API-KEY",
          "PASSWORD",
          "PRIVATE-KEY"
        ],
        "type": "string"
      },
      "lib.ShippingAgency": {
        "enum": [
          "DHL",
          "DPD",
          "OTHER",
          "TNT"
        ],
        "type": "string"
      },
      "lib.SimAuthenticationService": {
        "enum": [
          "DISABLED",
          "ENABLED-FIRST-USE"
        ],
        "type": "string"
      },
      "lib.SimBillingStatus": {
        "enum": [
          "CUSTOMER-INVENTORY",
          "IN-BILLING",
          "IN-TESTING",
          "READY-FOR-BILLING",
          "RETIRED",
          "SUSPENDED"
        ],
        "type": "string"
      },
      "lib.SimDataRetentionTime": {
        "enum": [
          "RA",
          "RB",
          "RC"
        ],
        "type": "string"
      },
      "lib.SimFormFactor": {
        "enum": [
          "ISIM",
          "MFF1",
          "MFF2",
          "MFF-XS",
          "WLCSP",
          "1FF",
          "2FF",
          "2FF/3FF",
          "2FF/3FF/4FF",
          "3FF",
          "4FF",
          "ESE"
        ],
        "type": "string"
      },
      "lib.SimInitialBillingStatus": {
        "enum": [
          "CUSTOMER-INVENTORY",
          "IN-BILLING",
          "IN-TESTING",
          "UNRESTRICTED"
        ],
        "type": "string"
      },
      "lib.SimMinimumUpdates": {
        "enum": [
          "UA",
          "UB",
          "UC"
        ],
        "type": "string"
      },
      "lib.SimOrderType": {
        "enum": [
          "CSP",
          "MANUFACTURER"
        ],
        "type": "string"
      },
      "lib.SimProcess": {
        "enum": [
          "CHANGE-APN-GROUP",
          "CHANGE-BILLING-STATUS",
          "CHANGE-MSISDN",
          "CHANGE-NETWORK-STATUS",
          "CHANGE-PRICEPLAN",
          "CHANGE-ROAMING-PROFILE",
          "CHANGE-SECURITY-PROFILE",
          "CHANGE-SERVICE-PROFILE",
          "CHANGE-STATIC-IP",
          "MOVE-SIM",
          "SWAP-SIM",
          "SIM-HLR-REFRESH"
        ],
        "type": "string"
      },
      "lib.SimProfileType": {
        "enum": [
          "ESIM",
          "ESIM-PROFILE",
          "SIM"
        ],
        "type": "string"
      },
      "lib.SimProvisioningBehavior": {
        "enum": [
          "BILLING-CUSTOMER-INVENTORY",
          "BILLING-IN-TESTING",
          "NOT-APPLICABLE",
          "RESOURCE-ACCOUNT-ASSIGNMENT",
          "RESOURCE-LOAD"
        ],
        "type": "string"
      },
      "lib.SimStagingStatusType": {
        "enum": [
          "PO-BILLING-NOK",
          "PO-BILLING-OK",
          "PO-BM-SIM-PROVISIONED-NOK",
          "PO-BM-SIM-PROVISIONED-OK",
          "PO-DEFAULTSETTINGS-NOK",
          "PO-DEFAULTSETTINGS-OK",
          "PO-DRAFT",
          "PO-EP-SIM-CREATION-NOK",
          "PO-EP-SIM-CREATION-OK",
          "PO-FAILED",
          "PO-HLR-NOK",
          "PO-HLR-OK",
          "PO-KAFKA-NOTIFICATION-SENT-NOK",
          "PO-KAFKA-NOTIFICATION-SENT-OK",
          "PO-MSISDN-ASSIGNMENT-NOK",
          "PO-MSISDN-ASSIGNMENT-OK",
          "PO-PROVISIONED",
          "PO-SIM-CREATION-NOK",
          "PO-SIM-CREATION-OK",
          "SIMLC-CI2IT-BM-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-BM-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2IT-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2IT-CUSTOMER-INVENTORY",
          "SIMLC-CI2IT-EP-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-EP-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-HLR-ACTIVATION-NOK",
          "SIMLC-CI2IT-HLR-ACTIVATION-OK",
          "SIMLC-CI2IT-HLR-ACTIVATION-SENT-NOK",
          "SIMLC-CI2IT-HLR-ACTIVATION-SENT-OK",
          "SIMLC-CI2IT-IN-TESTING",
          "SIMLC-CI2IT-KAFKA-ASSIGN-MSISDN-SENT-NOK",
          "SIMLC-CI2IT-KAFKA-ASSIGN-MSISDN-SENT-OK",
          "SIMLC-CI2IT-OUC-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-OUC-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2IT-RM-ASSIGN-MSISDN-NOK",
          "SIMLC-CI2IT-RM-ASSIGN-MSISDN-OK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-NOK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-OK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-SENT-NOK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-SENT-OK",
          "SIMLC-CI2IT-ZAINKSA-HLR-ACTIVATION-STATUS-CHECK",
          "SIMLC-CI2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2RE-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-CI2RE-CUSTOMER-INVENTORY",
          "SIMLC-CI2RE-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-CI2RE-RETIRED",
          "SIMLC-IB2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-NOK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-OK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-SENT-NOK",
          "SIMLC-IB2RE-HLR-DEACTIVATION-SENT-OK",
          "SIMLC-IB2RE-IN-BILLING",
          "SIMLC-IB2RE-RETIRED",
          "SIMLC-IB2SU-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2SU-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IB2SU-HLR-SUSPEND-NOK",
          "SIMLC-IB2SU-HLR-SUSPEND-OK",
          "SIMLC-IB2SU-HLR-SUSPEND-SENT-NOK",
          "SIMLC-IB2SU-HLR-SUSPEND-SENT-OK",
          "SIMLC-IB2SU-IN-BILLING",
          "SIMLC-IB2SU-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IB2SU-SUSPENDED",
          "SIMLC-IT2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-IT2IB-IN-BILLING",
          "SIMLC-IT2IB-IN-TESTING",
          "SIMLC-IT2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-NOK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-OK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-SENT-NOK",
          "SIMLC-IT2RE-HLR-DEACTIVATION-SENT-OK",
          "SIMLC-IT2RE-IN-TESTING",
          "SIMLC-IT2RE-RETIRED",
          "SIMLC-RB2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2IB-IN-BILLING",
          "SIMLC-RB2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RB2IB-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-RB2IB-READY-FOR-BILLING",
          "SIMLC-RE2IB-BM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-BM-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IB-EP-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-EP-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IB-HLR-REACTIVATION-NOK",
          "SIMLC-RE2IB-HLR-REACTIVATION-OK",
          "SIMLC-RE2IB-HLR-REACTIVATION-SENT-NOK",
          "SIMLC-RE2IB-HLR-REACTIVATION-SENT-OK",
          "SIMLC-RE2IB-IN-BILLING",
          "SIMLC-RE2IB-KAFKA-ASSIGN-MSISDN-SENT-NOK",
          "SIMLC-RE2IB-KAFKA-ASSIGN-MSISDN-SENT-OK",
          "SIMLC-RE2IB-OUC-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-OUC-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IB-RETIRED",
          "SIMLC-RE2IB-RM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IB-RM-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-BM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-BM-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IT-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-RE2IT-EP-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-EP-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-IN-TESTING",
          "SIMLC-RE2IT-KAFKA-ASSIGN-MSISDN-SENT-NOK",
          "SIMLC-RE2IT-KAFKA-ASSIGN-MSISDN-SENT-OK",
          "SIMLC-RE2IT-OUC-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-OUC-ASSIGN-MSISDN-OK",
          "SIMLC-RE2IT-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-RE2IT-RETIRED",
          "SIMLC-RE2IT-RM-ASSIGN-MSISDN-NOK",
          "SIMLC-RE2IT-RM-ASSIGN-MSISDN-OK",
          "SIMLC-SU2IB-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2IB-BM-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2IB-HLR-RESUME-NOK",
          "SIMLC-SU2IB-HLR-RESUME-OK",
          "SIMLC-SU2IB-HLR-RESUME-SENT-NOK",
          "SIMLC-SU2IB-HLR-RESUME-SENT-OK",
          "SIMLC-SU2IB-IN-BILLING",
          "SIMLC-SU2IB-OUC-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2IB-OUC-CHANGE-SIM-STATUS-OK",
          "SIMLC-SU2IB-OUC-DISABLE-GY-RO-BLOCK-RULES-NOK",
          "SIMLC-SU2IB-SUSPENDED",
          "SIMLC-SU2RE-BM-CHANGE-SIM-STATUS-NOK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-NOK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-OK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-SENT-NOK",
          "SIMLC-SU2RE-HLR-DEACTIVATION-SENT-OK",
          "SIMLC-SU2RE-RETIRED",
          "SIMLC-SU2RE-SUSPENDED",
          "SIM-CHANGE-APN-GROUP-BACKUP-NOK",
          "SIM-CHANGE-APN-GROUP-BACKUP-OK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-SENT-NOK",
          "SIM-CHANGE-APN-GROUP-BM-CHANGE-APN-GROUP-SENT-OK",
          "SIM-CHANGE-APN-GROUP-CREATED",
          "SIM-CHANGE-APN-GROUP-FINISHED",
          "SIM-CHANGE-APN-GROUP-OUC-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-OUC-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-RM-CHANGE-APN-GROUP-NOK",
          "SIM-CHANGE-APN-GROUP-RM-CHANGE-APN-GROUP-OK",
          "SIM-CHANGE-APN-GROUP-RM-COMMIT-NOK",
          "SIM-CHANGE-APN-GROUP-RM-COMMIT-OK",
          "SIM-CHANGE-APN-GROUP-RM-ROLLBACK-NOK",
          "SIM-CHANGE-APN-GROUP-RM-ROLLBACK-OK",
          "SIM-CHANGE-MSISDN-BM-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-BM-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-CREATED",
          "SIM-CHANGE-MSISDN-EP-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-EP-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-FINISHED",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-SENT-NOK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-SENT-OK",
          "SIM-CHANGE-MSISDN-HLR-CHANGE-MSISDN-STATUS-CHECK",
          "SIM-CHANGE-MSISDN-KAFKA-NOTIFICATION-SENT-NOK",
          "SIM-CHANGE-MSISDN-KAFKA-NOTIFICATION-SENT-OK",
          "SIM-CHANGE-MSISDN-OUC-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-OUC-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-OK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-ROLLBACK-NOK",
          "SIM-CHANGE-MSISDN-RM-CHANGE-MSISDN-ROLLBACK-OK",
          "SIM-CHANGE-MSISDN-RM-LOCK-MSISDN-NOK",
          "SIM-CHANGE-MSISDN-RM-LOCK-MSISDN-OK",
          "SIM-CHANGE-STATIC-IP-BACKUP-NOK",
          "SIM-CHANGE-STATIC-IP-BACKUP-OK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-SENT-NOK",
          "SIM-CHANGE-STATIC-IP-BM-CHANGE-IP-SENT-OK",
          "SIM-CHANGE-STATIC-IP-CREATED",
          "SIM-CHANGE-STATIC-IP-FINISHED",
          "SIM-CHANGE-STATIC-IP-OUC-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-OUC-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-RM-CHANGE-IP-NOK",
          "SIM-CHANGE-STATIC-IP-RM-CHANGE-IP-OK",
          "SIM-CHANGE-STATIC-IP-RM-COMMIT-NOK",
          "SIM-CHANGE-STATIC-IP-RM-COMMIT-OK",
          "SIM-CHANGE-STATIC-IP-RM-ROLLBACK-NOK",
          "SIM-CHANGE-STATIC-IP-RM-ROLLBACK-OK",
          "SIM-MOVE-BACKUP-NOK",
          "SIM-MOVE-BACKUP-OK",
          "SIM-MOVE-BM-REASSIGN-SIM-NOK",
          "SIM-MOVE-BM-REASSIGN-SIM-OK",
          "SIM-MOVE-CREATED",
          "SIM-MOVE-EP-REASSIGN-NOK",
          "SIM-MOVE-EP-REASSIGN-OK",
          "SIM-MOVE-FINISHED",
          "SIM-MOVE-KAFKA-NOTIFICATION-SENT-NOK",
          "SIM-MOVE-KAFKA-NOTIFICATION-SENT-OK",
          "SIM-MOVE-OUC-REASSIGN-NOK",
          "SIM-MOVE-OUC-REASSIGN-OK",
          "SIM-MOVE-RM-REASSIGN-SIM-NOK",
          "SIM-MOVE-RM-REASSIGN-SIM-OK",
          "SIM-MOVE-RM-ROLLBACK-NOK",
          "SIM-MOVE-RM-ROLLBACK-OK",
          "SIM-PURGE-BM-PURGE-NOK",
          "SIM-PURGE-BM-PURGE-OK",
          "SIM-PURGE-CREATED",
          "SIM-PURGE-FINISHED",
          "SIM-PURGE-HLR-PURGE-NOK",
          "SIM-PURGE-HLR-PURGE-OK",
          "SIM-PURGE-HLR-PURGE-SENT-NOK",
          "SIM-PURGE-HLR-PURGE-SENT-OK",
          "SIM-PURGE-HLR-PURGE-STATUS-CHECK",
          "SIM-PURGE-RELEASE-RESOURCES-NOK",
          "SIM-PURGE-RELEASE-RESOURCES-OK",
          "SIM-PURGE-RM-PURGE-NOK",
          "SIM-PURGE-RM-PURGE-OK",
          "SIM-PURGE-VALIDATION-NOK",
          "SIM-PURGE-VALIDATION-OK",
          "SIM-RETIRE-MSISDN-BM-CHANGE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-BM-CHANGE-MSISDN-OK",
          "SIM-RETIRE-MSISDN-CREATED",
          "SIM-RETIRE-MSISDN-FINISHED",
          "SIM-RETIRE-MSISDN-KAFKA-RELEASE-MSISDN-SENT-NOK",
          "SIM-RETIRE-MSISDN-KAFKA-RELEASE-MSISDN-SENT-OK",
          "SIM-RETIRE-MSISDN-OUC-RELEASE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-OUC-RELEASE-MSISDN-OK",
          "SIM-RETIRE-MSISDN-RM-GET-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-RM-GET-MSISDN-OK",
          "SIM-RETIRE-MSISDN-RM-RELEASE-MSISDN-NOK",
          "SIM-RETIRE-MSISDN-RM-RELEASE-MSISDN-OK",
          "SIM-SWAP-BM-SIM-CREATION-NOK",
          "SIM-SWAP-BM-SIM-CREATION-OK",
          "SIM-SWAP-BM-SIM-SWAP-NOK",
          "SIM-SWAP-BM-SIM-SWAP-OK",
          "SIM-SWAP-CREATED",
          "SIM-SWAP-EP-SIM-SWAP-NOK",
          "SIM-SWAP-EP-SIM-SWAP-OK",
          "SIM-SWAP-FINISHED",
          "SIM-SWAP-HLR-NOK",
          "SIM-SWAP-HLR-OK",
          "SIM-SWAP-HLR-SIM-SWAP-SENT-NOK",
          "SIM-SWAP-HLR-SIM-SWAP-SENT-OK",
          "SIM-SWAP-HLR-SIM-SWAP-STATUS-CHECK",
          "SIM-SWAP-HLR-SWAP-OPERATION-NOK",
          "SIM-SWAP-HLR-SWAP-OPERATION-OK",
          "SIM-SWAP-KAFKA-NOTIFICATION-SENT-NOK",
          "SIM-SWAP-KAFKA-NOTIFICATION-SENT-OK",
          "SIM-SWAP-OUC-SIM-SWAP-NOK",
          "SIM-SWAP-OUC-SIM-SWAP-OK",
          "SIM-SWAP-RM-SIM-SWAP-NOK",
          "SIM-SWAP-RM-SIM-SWAP-OK",
          "SIM-SWAP-RM-SIM-SWAP-ROLLBACK-NOK",
          "SIM-SWAP-RM-SIM-SWAP-ROLLBACK-OK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-NOK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-OK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-ACTIVATION-STATUS-CHECK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-NOK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-OK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-CANCEL-ACTIVATION-STATUS-CHECK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-OPERATION-STATUS-CHECK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-SENT-NOK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-SENT-OK",
          "SIM-SWAP-ZAINKSA-HLR-SWAP-ROLLBACK-STATUS-CHECK",
          "SIM-UNASSIGN-BM-UNASSIGN-NOK",
          "SIM-UNASSIGN-BM-UNASSIGN-OK",
          "SIM-UNASSIGN-CREATED",
          "SIM-UNASSIGN-EP-UNASSIGN-NOK",
          "SIM-UNASSIGN-EP-UNASSIGN-OK",
          "SIM-UNASSIGN-FINISHED",
          "SIM-UNASSIGN-KAFKA-SENT-NOK",
          "SIM-UNASSIGN-OUC-UNASSIGN-NOK",
          "SIM-UNASSIGN-OUC-UNASSIGN-OK",
          "SIM-UNASSIGN-RM-UNASSIGN-NOK",
          "SIM-UNASSIGN-RM-UNASSIGN-OK",
          "SIM-UNASSIGN-VALIDATION-NOK",
          "SIM-UNASSIGN-VALIDATION-OK",
          "HLR-REFRESH-OK",
          "HLR-REFRESH-NOK",
          "HLR-REFRESH-PROFILE-UPDATE-OK",
          "HLR-REFRESH-PROFILE-UPDATE-NOK",
          "HLR-REFRESH-PROFILE-PURGE-OK",
          "HLR-REFRESH-PROFILE-PURGE-NOK",
          "HLR-REFRESH-CANCEL-LOCATION-OK",
          "HLR-REFRESH-CANCEL-LOCATION-NOK",
          "HLR-REFRESH-FINISHED"
        ],
        "type": "string"
      },
      "lib.SimStatus": {
        "enum": [
          "ASSIGNED",
          "IN-ASSIGNMENT",
          "OPERATOR-INVENTORY",
          "PURGED",
          "UNASSIGNED"
        ],
        "type": "string"
      },
      "lib.SimSuspendReason": {
        "enum": [
          "ACCOUNT-SUSPENSION",
          "AUTOMATION-RULE-PERMANENT",
          "AUTOMATION-RULE-TEMPORARY",
          "NOT-APPLICABLE",
          "TESTING-EXPIRY",
          "USER-PERMANENT",
          "USER-TEMPORARY"
        ],
        "type": "string"
      },
      "lib.SimTemperatureRange": {
        "enum": [
          "TA",
          "TB",
          "TC",
          "TS"
        ],
        "type": "string"
      },
      "lib.SimTestingSubsequentStatus": {
        "enum": [
          "IN-BILLING",
          "READY-FOR-BILLING",
          "SUSPENDED"
        ],
        "type": "string"
      },
      "lib.SimType": {
        "enum": [
          "ESIM",
          "SIM"
        ],
        "type": "string"
      },
      "lib.SmsListType": {
        "enum": [
          "MSISDN-INDIVIDUAL",
          "MSISDN-PATTERN",
          "MSISDN-RANGE",
          "SHORTCODE-INDIVIDUAL",
          "SHORTCODE-RANGE"
        ],
        "type": "string"
      },
      "lib.SmsType": {
        "enum": [
          "MO-SMS",
          "MT-SMS"
        ],
        "type": "string"
      },
      "lib.StatisticsContext": {
        "enum": [
          "ACCOUNT",
          "CSP",
          "CUSTOMER",
          "MAVOCO"
        ],
        "type": "string"
      },
      "lib.StatisticsPeriod": {
        "enum": [
          "BC",
          "DAY",
          "MONTH",
          "YEAR"
        ],
        "type": "string"
      },
      "lib.Status": {
        "enum": [
          "ACTIVE",
          "DRAFT",
          "INACTIVE"
        ],
        "type": "string"
      },
      "lib.SubscriptionItemBaseType": {
        "enum": [
          "ADDON",
          "COMBINED-NETWORK-PRICEPLAN",
          "WHOLESALE-PRICEPLAN",
          "COMBINED-NETWORK-PRICEPLAN-CHILD",
          "COMBINED-ZONE-PRICEPLAN",
          "COMBINED-ZONE-PRICEPLAN-CHILD",
          "NETWORK-PRICEPLAN",
          "SUPPLEMENTAL-PRICEPLAN",
          "ZONE-PRICEPLAN"
        ],
        "type": "string"
      },
      "lib.SubscriptionItemPoolType": {
        "enum": [
          "DYNAMIC",
          "STATIC"
        ],
        "type": "string"
      },
      "lib.SubscriptionItemStatus": {
        "enum": [
          "APPROVED",
          "DRAFT",
          "FOR-APPROVAL",
          "REJECTED",
          "SUSPENDED",
          "TERMINATED"
        ],
        "type": "string"
      },
      "lib.SubscriptionItemType": {
        "enum": [
          "ADDON-ACCOUNT",
          "ADDON-SIM",
          "ADDON-TOPOFF",
          "PRICEPLAN-MSUB-NETWORKPRICELIST",
          "PRICEPLAN-MSUB-ZONE",
          "PRICEPLAN-NETWORKPRICELIST",
          "PRICEPLAN-POSTPAID-FLEX",
          "PRICEPLAN-POSTPAID-FLEX-SHARED",
          "PRICEPLAN-POSTPAID-INDIVIDUAL",
          "PRICEPLAN-POSTPAID-INDIVIDUAL-SHARED",
          "PRICEPLAN-POSTPAID-STATIC",
          "PRICEPLAN-POSTPAID-STATIC-SHARED",
          "PRICEPLAN-PREPAID-FLEX",
          "PRICEPLAN-PREPAID-FLEX-SHARED",
          "PRICEPLAN-PREPAID-INDIVIDUAL",
          "PRICEPLAN-PREPAID-INDIVIDUAL-SHARED",
          "PRICEPLAN-PREPAID-STATIC",
          "PRICEPLAN-PREPAID-STATIC-SHARED",
          "PRICEPLAN-TOPOFF",
          "PRICEPLAN-TOPOFF-SHARED",
          "PRICEPLAN-TOPON",
          "PRICEPLAN-TOPON-SHARED",
          "PRICEPLAN-TOPUP",
          "PRICEPLAN-TOPUP-SHARED",
          "PRICEPLAN-INTERCOMPANY-CHARGING"
        ],
        "type": "string"
      },
      "lib.SubscriptionItemTypeDomain": {
        "enum": [
          "ACCOUNT",
          "DEVICE",
          "SIM"
        ],
        "type": "string"
      },
      "lib.SubscriptionStatus": {
        "enum": [
          "CUSTOMER-INVENTORY",
          "IN-BILLING",
          "IN-TESTING",
          "READY-FOR-BILLING",
          "RETIRED",
          "SUSPENDED"
        ],
        "type": "string"
      },
      "lib.SubscriptionStatusInitial": {
        "enum": [
          "CUSTOMER-INVENTORY",
          "IN-BILLING",
          "IN-TESTING",
          "NOT-APPLICABLE",
          "SUSPENDED"
        ],
        "type": "string"
      },
      "lib.SubscriptionType": {
        "enum": [
          "ACCOUNT",
          "DEVICE",
          "POOL",
          "PRICE-PLAN",
          "SIM"
        ],
        "type": "string"
      },
      "lib.SuspendType": {
        "enum": [
          "CPS",
          "NETWORK-STATUS",
          "ONLINE-SUSPEND",
          "SERVICE-PROFILE"
        ],
        "type": "string"
      },
      "lib.SuspensionExpiryTransitionStatus": {
        "enum": [
          "IN-BILLING",
          "NOT-APPLICABLE",
          "RETIRED",
          "SUSPENDED"
        ],
        "type": "string"
      },
      "lib.TenantType": {
        "enum": [
          "CSP"
        ],
        "type": "string"
      },
      "lib.TimesliceModelType": {
        "enum": [
          "ACCOUNT",
          "CSP"
        ],
        "type": "string"
      },
      "lib.Timezone": {
        "enum": [
          "Africa/Abidjan",
          "Africa/Accra",
          "Africa/Addis-Ababa",
          "Africa/Algiers",
          "Africa/Asmara",
          "Africa/Asmera",
          "Africa/Bamako",
          "Africa/Bangui",
          "Africa/Banjul",
          "Africa/Bissau",
          "Africa/Blantyre",
          "Africa/Brazzaville",
          "Africa/Bujumbura",
          "Africa/Cairo",
          "Africa/Casablanca",
          "Africa/Ceuta",
          "Africa/Conakry",
          "Africa/Dakar",
          "Africa/Dar-es-Salaam",
          "Africa/Djibouti",
          "Africa/Douala",
          "Africa/El-Aaiun",
          "Africa/Freetown",
          "Africa/Gaborone",
          "Africa/Harare",
          "Africa/Johannesburg",
          "Africa/Juba",
          "Africa/Kampala",
          "Africa/Khartoum",
          "Africa/Kigali",
          "Africa/Kinshasa",
          "Africa/Lagos",
          "Africa/Libreville",
          "Africa/Lome",
          "Africa/Luanda",
          "Africa/Lubumbashi",
          "Africa/Lusaka",
          "Africa/Malabo",
          "Africa/Maputo",
          "Africa/Maseru",
          "Africa/Mbabane",
          "Africa/Mogadishu",
          "Africa/Monrovia",
          "Africa/Nairobi",
          "Africa/Ndjamena",
          "Africa/Niamey",
          "Africa/Nouakchott",
          "Africa/Ouagadougou",
          "Africa/Porto-Novo",
          "Africa/Sao-Tome",
          "Africa/Timbuktu",
          "Africa/Tripoli",
          "Africa/Tunis",
          "Africa/Windhoek",
          "America/Adak",
          "America/Anchorage",
          "America/Anguilla",
          "America/Antigua",
          "America/Araguaina",
          "America/Argentina/Buenos-Aires",
          "America/Argentina/Catamarca",
          "America/Argentina/ComodRivadavia",
          "America/Argentina/Cordoba",
          "America/Argentina/Jujuy",
          "America/Argentina/La-Rioja",
          "America/Argentina/Mendoza",
          "America/Argentina/Rio-Gallegos",
          "America/Argentina/Salta",
          "America/Argentina/San-Juan",
          "America/Argentina/San-Luis",
          "America/Argentina/Tucuman",
          "America/Argentina/Ushuaia",
          "America/Aruba",
          "America/Asuncion",
          "America/Atikokan",
          "America/Atka",
          "America/Bahia",
          "America/Bahia-Banderas",
          "America/Barbados",
          "America/Belem",
          "America/Belize",
          "America/Blanc-Sablon",
          "America/Boa-Vista",
          "America/Bogota",
          "America/Boise",
          "America/Buenos-Aires",
          "America/Cambridge-Bay",
          "America/Campo-Grande",
          "America/Cancun",
          "America/Caracas",
          "America/Catamarca",
          "America/Cayenne",
          "America/Cayman",
          "America/Chicago",
          "America/Chihuahua",
          "America/Coral-Harbour",
          "America/Cordoba",
          "America/Costa-Rica",
          "America/Creston",
          "America/Cuiaba",
          "America/Curacao",
          "America/Danmarkshavn",
          "America/Dawson",
          "America/Dawson-Creek",
          "America/Denver",
          "America/Detroit",
          "America/Dominica",
          "America/Edmonton",
          "America/Eirunepe",
          "America/El-Salvador",
          "America/Ensenada",
          "America/Fort-Nelson",
          "America/Fort-Wayne",
          "America/Fortaleza",
          "America/Glace-Bay",
          "America/Godthab",
          "America/Goose-Bay",
          "America/Grand-Turk",
          "America/Grenada",
          "America/Guadeloupe",
          "America/Guatemala",
          "America/Guayaquil",
          "America/Guyana",
          "America/Halifax",
          "America/Havana",
          "America/Hermosillo",
          "America/Indiana/Indianapolis",
          "America/Indiana/Knox",
          "America/Indiana/Marengo",
          "America/Indiana/Petersburg",
          "America/Indiana/Tell-City",
          "America/Indiana/Vevay",
          "America/Indiana/Vincennes",
          "America/Indiana/Winamac",
          "America/Indianapolis",
          "America/Inuvik",
          "America/Iqaluit",
          "America/Jamaica",
          "America/Jujuy",
          "America/Juneau",
          "America/Kentucky/Louisville",
          "America/Kentucky/Monticello",
          "America/Knox-IN",
          "America/Kralendijk",
          "America/La-Paz",
          "America/Lima",
          "America/Los-Angeles",
          "America/Louisville",
          "America/Lower-Princes",
          "America/Maceio",
          "America/Managua",
          "America/Manaus",
          "America/Marigot",
          "America/Martinique",
          "America/Matamoros",
          "America/Mazatlan",
          "America/Mendoza",
          "America/Menominee",
          "America/Merida",
          "America/Metlakatla",
          "America/Mexico-City",
          "America/Miquelon",
          "America/Moncton",
          "America/Monterrey",
          "America/Montevideo",
          "America/Montreal",
          "America/Montserrat",
          "America/Nassau",
          "America/New-York",
          "America/Nipigon",
          "America/Nome",
          "America/Noronha",
          "America/North-Dakota/Beulah",
          "America/North-Dakota/Center",
          "America/North-Dakota/New-Salem",
          "America/Nuuk",
          "America/Ojinaga",
          "America/Panama",
          "America/Pangnirtung",
          "America/Paramaribo",
          "America/Phoenix",
          "America/Port-au-Prince",
          "America/Port-of-Spain",
          "America/Porto-Acre",
          "America/Porto-Velho",
          "America/Puerto-Rico",
          "America/Punta-Arenas",
          "America/Rainy-River",
          "America/Rankin-Inlet",
          "America/Recife",
          "America/Regina",
          "America/Resolute",
          "America/Rio-Branco",
          "America/Rosario",
          "America/Santa-Isabel",
          "America/Santarem",
          "America/Santiago",
          "America/Santo-Domingo",
          "America/Sao-Paulo",
          "America/Scoresbysund",
          "America/Shiprock",
          "America/Sitka",
          "America/St-Barthelemy",
          "America/St-Johns",
          "America/St-Kitts",
          "America/St-Lucia",
          "America/St-Thomas",
          "America/St-Vincent",
          "America/Swift-Current",
          "America/Tegucigalpa",
          "America/Thule",
          "America/Thunder-Bay",
          "America/Tijuana",
          "America/Toronto",
          "America/Tortola",
          "America/Vancouver",
          "America/Virgin",
          "America/Whitehorse",
          "America/Winnipeg",
          "America/Yakutat",
          "America/Yellowknife",
          "Antarctica/Casey",
          "Antarctica/Davis",
          "Antarctica/DumontDUrville",
          "Antarctica/Macquarie",
          "Antarctica/Mawson",
          "Antarctica/McMurdo",
          "Antarctica/Palmer",
          "Antarctica/Rothera",
          "Antarctica/South-Pole",
          "Antarctica/Syowa",
          "Antarctica/Troll",
          "Antarctica/Vostok",
          "Arctic/Longyearbyen",
          "Asia/Aden",
          "Asia/Almaty",
          "Asia/Amman",
          "Asia/Anadyr",
          "Asia/Aqtau",
          "Asia/Aqtobe",
          "Asia/Ashgabat",
          "Asia/Ashkhabad",
          "Asia/Atyrau",
          "Asia/Baghdad",
          "Asia/Bahrain",
          "Asia/Baku",
          "Asia/Bangkok",
          "Asia/Barnaul",
          "Asia/Beirut",
          "Asia/Bishkek",
          "Asia/Brunei",
          "Asia/Calcutta",
          "Asia/Chita",
          "Asia/Choibalsan",
          "Asia/Chongqing",
          "Asia/Chungking",
          "Asia/Colombo",
          "Asia/Dacca",
          "Asia/Damascus",
          "Asia/Dhaka",
          "Asia/Dili",
          "Asia/Dubai",
          "Asia/Dushanbe",
          "Asia/Famagusta",
          "Asia/Gaza",
          "Asia/Harbin",
          "Asia/Hebron",
          "Asia/Ho-Chi-Minh",
          "Asia/Hong-Kong",
          "Asia/Hovd",
          "Asia/Irkutsk",
          "Asia/Istanbul",
          "Asia/Jakarta",
          "Asia/Jayapura",
          "Asia/Jerusalem",
          "Asia/Kabul",
          "Asia/Kamchatka",
          "Asia/Karachi",
          "Asia/Kashgar",
          "Asia/Kathmandu",
          "Asia/Katmandu",
          "Asia/Khandyga",
          "Asia/Kolkata",
          "Asia/Krasnoyarsk",
          "Asia/Kuala-Lumpur",
          "Asia/Kuching",
          "Asia/Kuwait",
          "Asia/Macao",
          "Asia/Macau",
          "Asia/Magadan",
          "Asia/Makassar",
          "Asia/Manila",
          "Asia/Muscat",
          "Asia/Nicosia",
          "Asia/Novokuznetsk",
          "Asia/Novosibirsk",
          "Asia/Omsk",
          "Asia/Oral",
          "Asia/Phnom-Penh",
          "Asia/Pontianak",
          "Asia/Pyongyang",
          "Asia/Qatar",
          "Asia/Qostanay",
          "Asia/Qyzylorda",
          "Asia/Rangoon",
          "Asia/Riyadh",
          "Asia/Saigon",
          "Asia/Sakhalin",
          "Asia/Samarkand",
          "Asia/Seoul",
          "Asia/Shanghai",
          "Asia/Singapore",
          "Asia/Srednekolymsk",
          "Asia/Taipei",
          "Asia/Tashkent",
          "Asia/Tbilisi",
          "Asia/Tehran",
          "Asia/Tel-Aviv",
          "Asia/Thimbu",
          "Asia/Thimphu",
          "Asia/Tokyo",
          "Asia/Tomsk",
          "Asia/Ujung-Pandang",
          "Asia/Ulaanbaatar",
          "Asia/Ulan-Bator",
          "Asia/Urumqi",
          "Asia/Ust-Nera",
          "Asia/Vientiane",
          "Asia/Vladivostok",
          "Asia/Yakutsk",
          "Asia/Yangon",
          "Asia/Yekaterinburg",
          "Asia/Yerevan",
          "Atlantic/Azores",
          "Atlantic/Bermuda",
          "Atlantic/Canary",
          "Atlantic/Cape-Verde",
          "Atlantic/Faeroe",
          "Atlantic/Faroe",
          "Atlantic/Jan-Mayen",
          "Atlantic/Madeira",
          "Atlantic/Reykjavik",
          "Atlantic/South-Georgia",
          "Atlantic/St-Helena",
          "Atlantic/Stanley",
          "Australia/ACT",
          "Australia/Adelaide",
          "Australia/Brisbane",
          "Australia/Broken-Hill",
          "Australia/Canberra",
          "Australia/Currie",
          "Australia/Darwin",
          "Australia/Eucla",
          "Australia/Hobart",
          "Australia/LHI",
          "Australia/Lindeman",
          "Australia/Lord-Howe",
          "Australia/Melbourne",
          "Australia/NSW",
          "Australia/North",
          "Australia/Perth",
          "Australia/Queensland",
          "Australia/South",
          "Australia/Sydney",
          "Australia/Tasmania",
          "Australia/Victoria",
          "Australia/West",
          "Australia/Yancowinna",
          "Brazil/Acre",
          "Brazil/DeNoronha",
          "Brazil/East",
          "Brazil/West",
          "CET",
          "CST6CDT",
          "Canada/Atlantic",
          "Canada/Central",
          "Canada/Eastern",
          "Canada/Mountain",
          "Canada/Newfoundland",
          "Canada/Pacific",
          "Canada/Saskatchewan",
          "Canada/Yukon",
          "Chile/Continental",
          "Chile/EasterIsland",
          "Cuba",
          "EET",
          "EST",
          "EST5EDT",
          "Egypt",
          "Eire",
          "Etc/GMT",
          "Etc/GMT0",
          "Etc/GMT-0",
          "Etc/GMT-1",
          "Etc/GMT-10",
          "Etc/GMT-11",
          "Etc/GMT-12",
          "Etc/GMT-13",
          "Etc/GMT-14",
          "Etc/GMT-2",
          "Etc/GMT-3",
          "Etc/GMT-4",
          "Etc/GMT-5",
          "Etc/GMT-6",
          "Etc/GMT-7",
          "Etc/GMT-8",
          "Etc/GMT-9",
          "Etc/GMT+0",
          "Etc/GMT+1",
          "Etc/GMT+10",
          "Etc/GMT+11",
          "Etc/GMT+12",
          "Etc/GMT+2",
          "Etc/GMT+3",
          "Etc/GMT+4",
          "Etc/GMT+5",
          "Etc/GMT+6",
          "Etc/GMT+7",
          "Etc/GMT+8",
          "Etc/GMT+9",
          "Etc/Greenwich",
          "Etc/UCT",
          "Etc/UTC",
          "Etc/Universal",
          "Etc/Zulu",
          "Europe/Amsterdam",
          "Europe/Andorra",
          "Europe/Astrakhan",
          "Europe/Athens",
          "Europe/Belfast",
          "Europe/Belgrade",
          "Europe/Berlin",
          "Europe/Bratislava",
          "Europe/Brussels",
          "Europe/Bucharest",
          "Europe/Budapest",
          "Europe/Busingen",
          "Europe/Chisinau",
          "Europe/Copenhagen",
          "Europe/Dublin",
          "Europe/Gibraltar",
          "Europe/Guernsey",
          "Europe/Helsinki",
          "Europe/Isle-of-Man",
          "Europe/Istanbul",
          "Europe/Jersey",
          "Europe/Kaliningrad",
          "Europe/Kiev",
          "Europe/Kirov",
          "Europe/Lisbon",
          "Europe/Ljubljana",
          "Europe/London",
          "Europe/Luxembourg",
          "Europe/Madrid",
          "Europe/Malta",
          "Europe/Mariehamn",
          "Europe/Minsk",
          "Europe/Monaco",
          "Europe/Moscow",
          "Europe/Nicosia",
          "Europe/Oslo",
          "Europe/Paris",
          "Europe/Podgorica",
          "Europe/Prague",
          "Europe/Riga",
          "Europe/Rome",
          "Europe/Samara",
          "Europe/San-Marino",
          "Europe/Sarajevo",
          "Europe/Saratov",
          "Europe/Simferopol",
          "Europe/Skopje",
          "Europe/Sofia",
          "Europe/Stockholm",
          "Europe/Tallinn",
          "Europe/Tirane",
          "Europe/Tiraspol",
          "Europe/Ulyanovsk",
          "Europe/Uzhgorod",
          "Europe/Vaduz",
          "Europe/Vatican",
          "Europe/Vienna",
          "Europe/Vilnius",
          "Europe/Volgograd",
          "Europe/Warsaw",
          "Europe/Zagreb",
          "Europe/Zaporozhye",
          "Europe/Zurich",
          "GB",
          "GB-Eire",
          "GMT",
          "GMT0",
          "Greenwich",
          "HST",
          "Hongkong",
          "Iceland",
          "Indian/Antananarivo",
          "Indian/Chagos",
          "Indian/Christmas",
          "Indian/Cocos",
          "Indian/Comoro",
          "Indian/Kerguelen",
          "Indian/Mahe",
          "Indian/Maldives",
          "Indian/Mauritius",
          "Indian/Mayotte",
          "Indian/Reunion",
          "Iran",
          "Israel",
          "Jamaica",
          "Japan",
          "Kwajalein",
          "Libya",
          "MET",
          "MST",
          "MST7MDT",
          "Mexico/BajaNorte",
          "Mexico/BajaSur",
          "Mexico/General",
          "NZ",
          "NZ-CHAT",
          "Navajo",
          "PRC",
          "PST8PDT",
          "Pacific/Apia",
          "Pacific/Auckland",
          "Pacific/Bougainville",
          "Pacific/Chatham",
          "Pacific/Chuuk",
          "Pacific/Easter",
          "Pacific/Efate",
          "Pacific/Enderbury",
          "Pacific/Fakaofo",
          "Pacific/Fiji",
          "Pacific/Funafuti",
          "Pacific/Galapagos",
          "Pacific/Gambier",
          "Pacific/Guadalcanal",
          "Pacific/Guam",
          "Pacific/Honolulu",
          "Pacific/Johnston",
          "Pacific/Kiritimati",
          "Pacific/Kosrae",
          "Pacific/Kwajalein",
          "Pacific/Majuro",
          "Pacific/Marquesas",
          "Pacific/Midway",
          "Pacific/Nauru",
          "Pacific/Niue",
          "Pacific/Norfolk",
          "Pacific/Noumea",
          "Pacific/Pago-Pago",
          "Pacific/Palau",
          "Pacific/Pitcairn",
          "Pacific/Pohnpei",
          "Pacific/Ponape",
          "Pacific/Port-Moresby",
          "Pacific/Rarotonga",
          "Pacific/Saipan",
          "Pacific/Samoa",
          "Pacific/Tahiti",
          "Pacific/Tarawa",
          "Pacific/Tongatapu",
          "Pacific/Truk",
          "Pacific/Wake",
          "Pacific/Wallis",
          "Pacific/Yap",
          "Poland",
          "Portugal",
          "ROK",
          "Singapore",
          "Turkey",
          "UCT",
          "US/Alaska",
          "US/Aleutian",
          "US/Arizona",
          "US/Central",
          "US/East-Indiana",
          "US/Eastern",
          "US/Hawaii",
          "US/Indiana-Starke",
          "US/Michigan",
          "US/Mountain",
          "US/Pacific",
          "US/Samoa",
          "UTC",
          "Universal",
          "WET",
          "W-SU",
          "Zulu"
        ],
        "type": "string"
      },
      "lib.TimezoneMapping": {
        "enum": [
          "SPECIFIC-TIMEZONE",
          "SUBSCRIBER-LOCATION",
          "VISITED-NETWORK"
        ],
        "type": "string"
      },
      "lib.UiLanguage": {
        "enum": [
          "ENGLISH",
          "GERMAN",
          "POLISH",
          "PORTUGESE",
          "PORTUGESE-BR",
          "SPANISH"
        ],
        "type": "string"
      },
      "lib.UnitData": {
        "enum": [
          "EB",
          "GB",
          "KB",
          "MB",
          "TB"
        ],
        "type": "string"
      },
      "lib.UnitVoice": {
        "enum": [
          "HOUR",
          "MINUTE",
          "SECOND"
        ],
        "type": "string"
      },
      "lib.UsageLimitOverride": {
        "enum": [
          "CURRENT-CYCLE",
          "DISABLED",
          "PERMANENT"
        ],
        "type": "string"
      },
      "lib.UserReportRequestType": {
        "enum": [
          "ACCOUNT",
          "CSP"
        ],
        "type": "string"
      },
      "lib.UserStatus": {
        "enum": [
          "ACTIVE",
          "DELETED",
          "DRAFT",
          "INACTIVE",
          "PURGED"
        ],
        "type": "string"
      },
      "lib.ValidationStatus": {
        "enum": [
          "FAILED",
          "NONE",
          "ONGOING",
          "SUCCESSFUL"
        ],
        "type": "string"
      },
      "lib.VersionLifecycleStatus": {
        "enum": [
          "ACTIVE",
          "APPROVED",
          "DRAFT",
          "FOR-APPROVAL",
          "REJECTED",
          "SUSPENDED",
          "TERMINATED"
        ],
        "type": "string"
      },
      "lib.VoiceListType": {
        "enum": [
          "MSISDN-INDIVIDUAL",
          "MSISDN-PATTERN",
          "MSISDN-RANGE"
        ],
        "type": "string"
      },
      "lib.VoiceType": {
        "enum": [
          "MO",
          "MT"
        ],
        "type": "string"
      },
      "lib.ZoneModelType": {
        "enum": [
          "COUNTRY",
          "NETWORK"
        ],
        "type": "string"
      },
      "lib.AccessListDataImeiLock": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accessType": {
                    "$ref": "#/components/schemas/lib.AccessType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "listType": {
                    "$ref": "#/components/schemas/lib.DataImeiLockListType"
                  },
                  "numberFrom": {
                    "type": "string"
                  },
                  "securityProfileType": {
                    "$ref": "#/components/schemas/lib.SecurityProfileType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "securityProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccessListSms": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accessType": {
                    "$ref": "#/components/schemas/lib.AccessType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "listType": {
                    "$ref": "#/components/schemas/lib.SmsListType"
                  },
                  "numberFrom": {
                    "type": "string"
                  },
                  "numberTo": {
                    "description": "Last number of the MSISDN-range or Shortcode-range (inclusive).  This field is required only if sms list type is MSISDN-RANGE or SHORTCODE-RANGE; otherwise it will be empty.\n",
                    "type": "string"
                  },
                  "securityProfileType": {
                    "$ref": "#/components/schemas/lib.SecurityProfileType"
                  },
                  "smsType": {
                    "$ref": "#/components/schemas/lib.SmsType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "securityProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccessListVoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accessType": {
                    "$ref": "#/components/schemas/lib.AccessType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "listType": {
                    "$ref": "#/components/schemas/lib.VoiceListType"
                  },
                  "numberFrom": {
                    "type": "string"
                  },
                  "numberTo": {
                    "type": "string"
                  },
                  "securityProfileType": {
                    "$ref": "#/components/schemas/lib.SecurityProfileType"
                  },
                  "voiceType": {
                    "$ref": "#/components/schemas/lib.VoiceType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "securityProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountIpAddressVersion": {
                    "$ref": "#/components/schemas/lib.AccountIpAddressVersion"
                  },
                  "accountNumber": {
                    "description": "12-digit CMP Account Number\n",
                    "type": "string"
                  },
                  "accountStatus": {
                    "$ref": "#/components/schemas/lib.AccountStatus"
                  },
                  "b2bAccountType": {
                    "$ref": "#/components/schemas/lib.B2bAccountType"
                  },
                  "billingTimezoneKey": {
                    "$ref": "#/components/schemas/lib.Timezone"
                  },
                  "bmAccountNumber": {
                    "description": "Legacy BM Account Number (9-digits)\n",
                    "type": "string"
                  },
                  "clientType": {
                    "$ref": "#/components/schemas/lib.ClientType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalAccountNumber": {
                    "description": "Synonym for RAN (Receiveable Accounts Number)\n",
                    "type": "string"
                  },
                  "externalCostCenter": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "invoiceNetCostThreshold": {
                    "format": "double",
                    "type": "number"
                  },
                  "isAccountTemplateIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isBillableIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true",
                    "x-annotation-common.notNull": true
                  },
                  "isBillingProfileIndicator": {
                    "type": "boolean"
                  },
                  "isBlacklistedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isCustomSupportEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isLocationBasedServicesEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isPilotMsisdnBillableIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false"
                  },
                  "isRemoteStorageEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isSingleBillMasterAccountIndicator": {
                    "type": "boolean"
                  },
                  "isTerminateBillingImmediatelyEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "jasperCompatibilityIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "numberOfSubaccounts": {
                    "format": "int32",
                    "description": "https://mavoco.atlassian.net/browse/MULTENANT-51\n",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "pcrfDataServiceBehavior": {
                    "$ref": "#/components/schemas/lib.PcrfDataServiceBehavior"
                  },
                  "processId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "processingStatus": {
                    "$ref": "#/components/schemas/lib.ProcessingStatus"
                  },
                  "reportRetentionDays": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "365"
                  },
                  "scheduledStatusChangeTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "simAuthenticationService": {
                    "$ref": "#/components/schemas/lib.SimAuthenticationService"
                  },
                  "simFeeRcrfOneOff": {
                    "format": "double",
                    "type": "number"
                  },
                  "simOrderType": {
                    "$ref": "#/components/schemas/lib.SimOrderType"
                  },
                  "supportEmail": {
                    "type": "string"
                  },
                  "supportPhone": {
                    "type": "string"
                  },
                  "userDefaultTimezoneKey": {
                    "$ref": "#/components/schemas/lib.Timezone"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountApnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountEmmProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountEmmProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountNotes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountNote"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountPersons": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountPerson"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountReports": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountReport"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountRoamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountRoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSecurityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountServiceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSimSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSimSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountStatusHistories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountStatusHistory"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountsParentAccount": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "addresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Address"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Apn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "applicationTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ApplicationType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingCycleDefinitions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingCycleDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingTimezoneKey": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billrunDetails": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillrunDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "chargeCorrectionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ChargeCorrectionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "company": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Company"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contracts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Contract"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "cspStatisticsBc": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CspStatisticsBc"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "cspStatisticsBcBillableSimses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CspStatisticsBcBillableSims"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "cspStatisticsDaily": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CspStatisticsDaily"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Customer"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "deviceTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.DeviceType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionHistories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionHistory"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiPools": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiPool"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "interimBillingCycleItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.InterimBillingCycleItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "interimBillingCycles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.InterimBillingCycle"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "msisdn": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Msisdn"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "msisdnPools": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.MsisdnPool"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviders": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkProvider"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "openCostsSummaryReportItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OpenCostsSummaryReportItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentAccount": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "prepaidAutoRenewQueues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PrepaidAutoRenewQueue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "project": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Project"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "purchaseOrders": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PurchaseOrder"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "remoteStorages": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RemoteStorage"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "reports": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Report"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resellerProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ResellerProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resellerProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ResellerProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Subscription"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "userDefaultTimezoneKey": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "process": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Process"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customAttributeValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CustomAttributeValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountAddon": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "format": "int64",
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "vkBase": {
                    "format": "double",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountApnGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accessRestrictionContextLevel": {
                    "$ref": "#/components/schemas/lib.AccessRestrictionContextLevel"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileApnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractApnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountCommitment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountCommitmentBaseType": {
                    "$ref": "#/components/schemas/lib.AccountCommitmentBaseType"
                  },
                  "accountCommitmentPenaltyType": {
                    "$ref": "#/components/schemas/lib.AccountCommitmentPenaltyType"
                  },
                  "accountRevenueCommitment": {
                    "format": "double",
                    "type": "number"
                  },
                  "accountRevenueCommitmentDetail": {
                    "type": "string"
                  },
                  "accountRevenueCommitmentViolationFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "billableSimCommitment": {
                    "format": "int32",
                    "type": "number"
                  },
                  "billableSimCommitmentViolationFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "commitmentGracePeriod": {
                    "format": "int32",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountDiscount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountRevenueThreshold": {
                    "format": "double",
                    "type": "number"
                  },
                  "accountRevenueThresholdDetail": {
                    "type": "string"
                  },
                  "billableSubscriptionThreshold": {
                    "format": "int32",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "discountType": {
                    "$ref": "#/components/schemas/lib.DiscountType"
                  },
                  "discountValue": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountEmmProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "emmEnterpriseKey": {
                    "type": "string"
                  },
                  "emmProvider": {
                    "$ref": "#/components/schemas/lib.EmmProvider"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountNote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "note": {
                    "type": "string"
                  },
                  "noteCategory": {
                    "$ref": "#/components/schemas/lib.NoteCategory"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountPerson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "email": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "jobTitle": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phone1": {
                    "type": "string"
                  },
                  "phone2": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "addresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Address"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "person": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Person"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "personType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.PersonType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountReport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "executeReportIndicator": {
                    "type": "boolean"
                  },
                  "executeReportIndicatorUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "outputFormat": {
                    "$ref": "#/components/schemas/lib.OutputFormat"
                  },
                  "sequenceNbr": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountReportParameterValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountReportParameterValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountReportSchedules": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountReportSchedule"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "report": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Report"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "reportGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ReportGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "userReportRequests": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UserReport"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountReportParameterValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountReport": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountReport"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "reportParameter": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ReportParameter"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountReportResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "actualPeriodicityParameters": {
                    "type": "string"
                  },
                  "actualReportDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "reportContent": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "reportContentType": {
                    "description": "MIME type of the report content\n",
                    "type": "string"
                  },
                  "reportFilesizeBytes": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "reportRowcount": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ReportExecutionStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountReportResultConversions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountReportResultConversion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountReportSchedule": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountReportSchedule"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "userReportRequests": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UserReport"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountReportResultConversion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "reportContentType": {
                    "type": "string"
                  },
                  "reportFileName": {
                    "type": "string"
                  },
                  "reportFilesizeBytes": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ReportExecutionStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountReportResult": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountReportResult"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountReportSchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "executionPolicy": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "periodicityParameters": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountReport": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountReport"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountReportResults": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountReportResult"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountRoamingProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accessRestrictionContextLevel": {
                    "$ref": "#/components/schemas/lib.AccessRestrictionContextLevel"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultProfileIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileRoamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileRoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractRoamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractRoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountSecurityProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSecurityProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileSecurityProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractSecurityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractSecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountServiceProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accessRestrictionContextLevel": {
                    "$ref": "#/components/schemas/lib.AccessRestrictionContextLevel"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultProfileIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isSuspendProfileIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileServiceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractServiceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountSimSalesProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountPrice": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSimSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractSimSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractSimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "purchaseOrders": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PurchaseOrder"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountSimSalesProductDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountPrice": {
                    "format": "double",
                    "type": "number"
                  },
                  "assignedToBillingProfileId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "branding": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "customFeeOneOff": {
                    "format": "double",
                    "type": "number"
                  },
                  "dataRetention": {
                    "$ref": "#/components/schemas/lib.SimDataRetentionTime"
                  },
                  "displayKey": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "formFactor": {
                    "$ref": "#/components/schemas/lib.SimFormFactor"
                  },
                  "initialSimBillingStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionStatusInitial"
                  },
                  "invoiceCurrency": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "manufacturer": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "minimumUpdates": {
                    "$ref": "#/components/schemas/lib.SimMinimumUpdates"
                  },
                  "mysqlId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "mysqlStatus": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "name": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "partNumber": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "poCount": {
                    "format": "int64",
                    "type": "number"
                  },
                  "providerKey": {
                    "type": "string"
                  },
                  "simType": {
                    "$ref": "#/components/schemas/lib.SimType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "supplierKey": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "supplierPartNumber": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "temperatureRange": {
                    "$ref": "#/components/schemas/lib.SimTemperatureRange"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSimSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "esimNetworkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.EsimNetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountStatusHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "newAccountStatus": {
                    "type": "string"
                  },
                  "oldAccountStatus": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountSubscriptionItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accessRestrictionContextLevel": {
                    "$ref": "#/components/schemas/lib.AccessRestrictionContextLevel"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isBasePriceplanIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "priceplanPrepaidStaticCurrentSubs": {
                    "format": "int64",
                    "type": "number"
                  },
                  "purchasesCurrentBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "subscriptionItemType": {
                    "$ref": "#/components/schemas/lib.SubscriptionItemType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionHistories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionHistory"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "offerType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OfferType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "prepaidAutoRenewQueues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PrepaidAutoRenewQueue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "prepaidAutoRenewTemplatePriceplans": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PrepaidAutoRenewTemplatePriceplan"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionSupplements": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionSupplement"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionsAccountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Subscription"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionsBaseAccountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Subscription"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "statistics": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItemStatistics"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountingGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountType": {
                    "$ref": "#/components/schemas/lib.AccountType"
                  },
                  "creationTimestamp": {
                    "description": "customers_root_setup.inserted\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "currencyKey": {
                    "$ref": "#/components/schemas/lib.Currency"
                  },
                  "invoiceConfigShowUsageSummaryIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "invoiceConfigVatCheckThreshold": {
                    "format": "int64",
                    "type": "number"
                  },
                  "invoiceEmailFooterPhone": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "invoiceEmailFooterString": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "invoiceEmailSender": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "invoiceEmailSenderName": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "invoiceIssuerCity": {
                    "maxLength": 32,
                    "type": "string"
                  },
                  "invoiceIssuerHomepage": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "invoiceIssuerName": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "invoiceNumberMax": {
                    "format": "int64",
                    "description": "customers_root_setup.invoice_limit\n",
                    "type": "number"
                  },
                  "invoiceNumberMin": {
                    "format": "int64",
                    "description": "customers_root_setup.invoice_preset\n",
                    "type": "number"
                  },
                  "invoicePeriodicity": {
                    "$ref": "#/components/schemas/lib.InvoicePeriodicity"
                  },
                  "invoicePrefix": {
                    "maxLength": 2,
                    "description": "customers_root_setup.invoice_prefix\n",
                    "type": "string"
                  },
                  "invoiceSenderInfo": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "invoiceStandardVat": {
                    "format": "int32",
                    "description": "customers_root_setup.invoice_currency_vat\n",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "description": "customers_root_setup.lastedit\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 64,
                    "description": "customers_root_setup.root_text\n",
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "invoiceGenerationTypeOverride": {
                    "$ref": "#/components/schemas/lib.InvoiceGenerationType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Customer"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileHistories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileHistory"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "invoiceTemplate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.InvoiceTemplate"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resellerProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ResellerProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "taxProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TaxProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AddonTopoff": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "currency": {
                    "maxLength": 4,
                    "type": "string"
                  },
                  "detailId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedVolume": {
                    "format": "double",
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "productVkOnce": {
                    "format": "double",
                    "type": "number"
                  },
                  "status": {
                    "type": "string"
                  },
                  "unit": {
                    "type": "string"
                  },
                  "validity": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "addressObjectType": {
                    "$ref": "#/components/schemas/lib.AddressObjectType"
                  },
                  "city": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "department": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "poBox": {
                    "type": "string"
                  },
                  "postCode": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "street1": {
                    "type": "string"
                  },
                  "street2": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountPerson": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountPerson"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "addressType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AddressType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "company": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Company"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "country": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "person": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Person"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AddressType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "addressObjectType": {
                    "$ref": "#/components/schemas/lib.AddressObjectType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isMainAddressIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isMandatoryIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isUniqueIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sortOrder": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "1",
                    "x-annotation-common.notNull": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "addresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Address"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Apn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "apnType": {
                    "$ref": "#/components/schemas/lib.ApnType"
                  },
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "description": "This is for information purposes only. The timestamp when the APN record was created.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "frGatewayAllocationType": {
                    "$ref": "#/components/schemas/lib.FrGatewayAllocationType"
                  },
                  "ipAddressAllocationType": {
                    "$ref": "#/components/schemas/lib.IpAllocationType"
                  },
                  "isLocalBreakoutEnabledIndicator": {
                    "description": "This is for information purposes only. Indicates whether the APN can be used in the context of local breakout.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isSimasSupportedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastSyncTimestamp": {
                    "description": "This is for information purposes only and will be deprecated.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "description": "This is for information purposes only. The timestamp when the APN record was last modified.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 100,
                    "description": "This is for information purposes only. The descriptive name of the APN. Not to be confused with the column hlr_profile_reference.\n",
                    "type": "string"
                  },
                  "pdnReference": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "vpnEnabledIndicator": {
                    "description": "This is for information purposes only. Indicates whether the APN supports VPN connections.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "ipPoolSize": {
                    "format": "int64",
                    "description": "this value is computed automatically\n",
                    "type": "number"
                  },
                  "usedIpSize": {
                    "format": "int64",
                    "type": "number"
                  },
                  "usedIpPercentage": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnAliases": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ApnAlias"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnBase": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnBase"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnModels": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ApnModel"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnRatingGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ApnRatingGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "frNetworkPools": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.FrNetworkPool"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ggsns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Ggsn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ipAddressPools": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.IpAddressPool"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "pdpContexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PdpContext"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "qosProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.QosProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "radiusFwdPropertieses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RadiusFwdProperties"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ApnAlias": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hlrProfileReference": {
                    "maxLength": 63,
                    "type": "string"
                  },
                  "hlrProvisioningType": {
                    "$ref": "#/components/schemas/lib.ApnHlrProvisioningType"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apn": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Apn"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ApnBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "hlrProfileReference": {
                    "maxLength": 63,
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "radiusAuthenticationType": {
                    "$ref": "#/components/schemas/lib.RadiusAuthenticationType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Apn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "dnsPropertieses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.DnsProperties"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ApnGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "apnGroupType": {
                    "$ref": "#/components/schemas/lib.ApnGroupType"
                  },
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isArtificialApnGroupIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Apn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileApnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "communicationProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CommunicationProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "pdpContexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PdpContext"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ApnModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Apn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ApnRatingGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apn": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Apn"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ratingGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RatingGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ApplicationType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BatchFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activeImsiColumnNumber": {
                    "format": "int32",
                    "type": "number"
                  },
                  "batchFileConfig": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "batchFileContent": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "batchFileName": {
                    "type": "string"
                  },
                  "batchFileUrl": {
                    "maxLength": 500,
                    "description": "Can be used to store a reference to the batch file\n",
                    "type": "string"
                  },
                  "batchImportDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "bootstrapProfileRowNumber": {
                    "format": "int32",
                    "type": "number"
                  },
                  "batchType": {
                    "$ref": "#/components/schemas/lib.BatchType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalOrderNumber": {
                    "type": "string"
                  },
                  "imsiColumnCount": {
                    "format": "int32",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "notificationRecipient": {
                    "type": "string"
                  },
                  "notificationRequiredIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "notificationType": {
                    "$ref": "#/components/schemas/lib.NotificationType"
                  },
                  "primaryImsiColumnNumber": {
                    "format": "int32",
                    "type": "number"
                  },
                  "processContext": {
                    "type": "string"
                  },
                  "processStatus": {
                    "$ref": "#/components/schemas/lib.ProcessStatus"
                  },
                  "quantity": {
                    "format": "int64",
                    "description": "Total number of items contained in the SIM .out file\n",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "quantityFailed": {
                    "format": "int64",
                    "description": "Number of items that failed validation or upload\n",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "quantitySuccess": {
                    "format": "int64",
                    "description": "Number of items that were successfully loaded\n",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "totalRecordCount": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "batchFileContents": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFileContent"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFileItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFileItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFilesParentBatchFile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiPool": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ImsiPool"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "msisdnPool": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.MsisdnPool"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "msisdns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Msisdn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "offerType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OfferType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentBatchFile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "purchaseOrder": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.PurchaseOrder"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "processes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/core.Process"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simPool": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimPool"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BatchFileContent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "batchFileContent": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "batchFileReport": {
                    "$ref": "#/components/schemas/lib.FileData"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "batchFile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BatchFileItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dataChunk": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "dataChunkErrors": {
                    "type": "string"
                  },
                  "dataChunkErrorsQuantity": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "dataChunkQuantity": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "processStatus": {
                    "$ref": "#/components/schemas/lib.ProcessStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "batchFile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFileItemSims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFileItemSim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simBatchFileCaImports": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimBatchFileCaImport"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BatchFileItemSim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountNumber": {
                    "type": "string"
                  },
                  "adminKey": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hlrAuthenticationKey": {
                    "type": "string"
                  },
                  "isBootstrapProfileIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "opcKey": {
                    "type": "string"
                  },
                  "initialEsimProfileStatus": {
                    "$ref": "#/components/schemas/lib.BatchType"
                  },
                  "parentSimIdentifier": {
                    "maxLength": 32,
                    "type": "string"
                  },
                  "pin1": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "pin2": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "puk1": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "puk2": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "sfEuimidDec": {
                    "type": "string"
                  },
                  "simIdentifier": {
                    "maxLength": 32,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "batchFileItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFileItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFileItemSimCas": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFileItemSimCa"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFileItemSimImsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFileItemSimImsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BatchFileItemSimCa": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "customAttributeTypeKey": {
                    "type": "string"
                  },
                  "customAttributeValue": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "batchFileItemSim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFileItemSim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BatchFileItemSimImsi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "imsi": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "isActiveImsiIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isPrimaryImsiIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "msisdn": {
                    "maxLength": 15,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "batchFileItemSim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFileItemSim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingCycleDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountType": {
                    "$ref": "#/components/schemas/lib.AccountType"
                  },
                  "billingCycleDefinitionOwnerId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "billingCycleOwner": {
                    "$ref": "#/components/schemas/lib.BillingCycleOwner"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "periodicity": {
                    "$ref": "#/components/schemas/lib.BillingCyclePeriodicity"
                  },
                  "startDay": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "1",
                    "x-annotation-common.notNull": true
                  },
                  "startMonth": {
                    "format": "int32",
                    "type": "number"
                  },
                  "startTime": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "timezoneKey": {
                    "$ref": "#/components/schemas/lib.Timezone"
                  },
                  "assignedAccounts": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingCycleInstances": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingCycleInstance"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "csp": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Csp"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileHistories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileHistory"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resellerProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ResellerProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tenant": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Tenant"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "timezone": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingCycleInstance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "billingCycleEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billingCycleStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billingCycleStatus": {
                    "$ref": "#/components/schemas/lib.BillingCycleStatus"
                  },
                  "billrunEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billrunStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billrunStatus": {
                    "$ref": "#/components/schemas/lib.BillrunStatus"
                  },
                  "bmBcId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimstamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingCycleDefinition": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingCycleDefinition"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingCycleInstanceHistories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingCycleInstanceHistory"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billrunDetails": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillrunDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "chargeses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Charges"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "openCostsSummaryReportItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OpenCostsSummaryReportItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingCycleInstanceHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "billingCycleChangeTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billrunStatusChangeTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "newBillingCycleStatus": {
                    "$ref": "#/components/schemas/lib.BillingCycleStatus"
                  },
                  "newBillrunStatus": {
                    "$ref": "#/components/schemas/lib.BillrunStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingCycleInstance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingCycleInstance"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activationFeeSubscriptionStatus": {
                    "$ref": "#/components/schemas/lib.ActivationFeeSubscriptionStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creditLimit": {
                    "format": "double",
                    "type": "number"
                  },
                  "defaultSubscriptionStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionStatus"
                  },
                  "einvoiceDeliveryFormat": {
                    "$ref": "#/components/schemas/lib.EinvoiceDeliveryFormat"
                  },
                  "expectedActivationsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "externalCostCenter": {
                    "format": "int64",
                    "type": "number"
                  },
                  "generateInvoiceWithoutVatIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "invoiceDeliveryEmail1": {
                    "type": "string"
                  },
                  "invoiceDeliveryEmail2": {
                    "type": "string"
                  },
                  "invoiceDeliveryEmail3": {
                    "type": "string"
                  },
                  "invoiceDeliveryMethod": {
                    "$ref": "#/components/schemas/lib.InvoiceDeliveryMethod"
                  },
                  "invoiceFormat": {
                    "$ref": "#/components/schemas/lib.InvoiceFormat"
                  },
                  "invoiceLanguage": {
                    "$ref": "#/components/schemas/lib.InvoiceLanguage"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "minRevenueObligationDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "minRevenueObligationValue": {
                    "format": "int64",
                    "type": "number"
                  },
                  "mrcChargeType": {
                    "$ref": "#/components/schemas/lib.MrcChargeType"
                  },
                  "nonStandardVatRate": {
                    "format": "double",
                    "type": "number"
                  },
                  "paymentAccountNumber": {
                    "type": "string"
                  },
                  "paymentAccountOwner": {
                    "type": "string"
                  },
                  "paymentBankNumber": {
                    "type": "string"
                  },
                  "paymentMethod": {
                    "$ref": "#/components/schemas/lib.PaymentMethod"
                  },
                  "paymentTargetDays": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "14",
                    "x-annotation-common.notNull": true
                  },
                  "poolMrcChargeType": {
                    "$ref": "#/components/schemas/lib.PoolMrcChargeType"
                  },
                  "prepaidPriceplanRenewalMode": {
                    "$ref": "#/components/schemas/lib.PrepaidRenewalMode"
                  },
                  "prepaidSupplementalPriceplanRenewalMode": {
                    "$ref": "#/components/schemas/lib.PrepaidSupplementalPriceplanRenewalMode"
                  },
                  "ratingType": {
                    "$ref": "#/components/schemas/lib.RatingType"
                  },
                  "simTestingSubsequentStatus": {
                    "$ref": "#/components/schemas/lib.SimTestingSubsequentStatus"
                  },
                  "suspensionExpiryTransitionStatus": {
                    "$ref": "#/components/schemas/lib.SuspensionExpiryTransitionStatus"
                  },
                  "suspensionPeriodDays": {
                    "format": "int32",
                    "type": "number"
                  },
                  "usageLimitOverride": {
                    "$ref": "#/components/schemas/lib.UsageLimitOverride"
                  },
                  "wholesaleStreamIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountingGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountingGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "addresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Address"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingCycleDefinition": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingCycleDefinition"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileApnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileLogisticStatuses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileLogisticStatus"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileRoamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileRoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSecurityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileSecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileServiceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSimSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "chargeses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Charges"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileHistories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileHistory"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ouc": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OnlineUsageController"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tenants": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tenant"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "timesliceModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TimesliceModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "timesliceModels": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TimesliceModel"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingProfileApnGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountApnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingProfileLogisticStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "logisticStatus": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingProfileRoamingProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountRoamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountRoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingProfileSecurityProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSecurityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingProfileServiceProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountServiceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingProfileSimSalesProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "customFeeOneOff": {
                    "format": "double",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSimSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSimSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingProfileSubscriptionItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "addonSimCostCap": {
                    "format": "double",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isPriceplanSupplementalSelfOrderEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "priceplanPrepaidStaticMaxSubs": {
                    "format": "int64",
                    "type": "number"
                  },
                  "priceplanSupplementalMaxAutoRenewsPerBillingCycle": {
                    "format": "int32",
                    "type": "number"
                  },
                  "priceplanSupplementalMaxOrdersPerBillingCycle": {
                    "format": "int32",
                    "type": "number"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "subscriptionItemCustomFeeOneOff": {
                    "format": "double",
                    "type": "number"
                  },
                  "subscriptionItemCustomFeePercentage": {
                    "format": "double",
                    "description": "If subscription_item_type is 'ADDON-SIM' or 'ADDON-TOPOFF', this attribute defines the price of the addon as percentage of the SIM cards's priceplan recurring fee. For other subscription item types this attribute must always be NULL.\n",
                    "type": "number"
                  },
                  "subscriptionItemCustomFeeRecurring": {
                    "format": "double",
                    "type": "number"
                  },
                  "subscriptionItemCustomName": {
                    "maxLength": 255,
                    "description": "Catalog name of Add-On can be overwritten.\n",
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "$ref": "#/components/schemas/lib.SubscriptionItemType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillrunDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "billrunStatus": {
                    "$ref": "#/components/schemas/lib.BillrunStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "failureCode": {
                    "type": "string"
                  },
                  "failureText": {
                    "type": "string"
                  },
                  "isManuallyCorrectedIndicator": {
                    "description": "Indicates whether charges related to this account were manually corrected.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false"
                  },
                  "lastSuccessfulProcessStep": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "startTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingCycleInstance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingCycleInstance"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Branding": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "designBack": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "designFront": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "simProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Casperson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "sex": {
                    "$ref": "#/components/schemas/lib.Sex"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "casusers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Casuser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Casuser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "acp": {
                    "description": "Access Control Policy\n",
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "emailAddress": {
                    "type": "string"
                  },
                  "isApiUserIndicator": {
                    "description": "API User must not have a person relation. API User must not switch context, i.e. the api-user - 'user-organization' association is mutually exclusive.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastLoginIp": {
                    "type": "string"
                  },
                  "lastLoginTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastPwdResetTimestamp": {
                    "description": "Last Password Reset Timestamp\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "loginPasswordHash": {
                    "type": "string",
                    "x-annotation-common.defaultValue": "[EMPTY]",
                    "x-annotation-common.notNull": true
                  },
                  "loginUsername": {
                    "type": "string"
                  },
                  "mfaCode": {
                    "type": "string"
                  },
                  "mfaCodeCreationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mfaSettings": {
                    "$ref": "#/components/schemas/lib.MfaSettings"
                  },
                  "msisdn": {
                    "type": "string"
                  },
                  "pwdHistory": {
                    "description": "Password History\n",
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.UserStatus"
                  },
                  "uiLanguage": {
                    "$ref": "#/components/schemas/lib.UiLanguage"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountNotes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountNote"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountReportResultConversions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountReportResultConversion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casperson": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casperson"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contracts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Contract"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "domain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Domain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ignoreStagingStatusSchedules": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.IgnoreStagingStatusSchedule"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviderReportResultConversions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkProviderReportResultConversion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "processes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Process"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "userReportRequests": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UserReport"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CcChargeGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmId": {
                    "format": "int32",
                    "type": "number"
                  },
                  "bmSortId": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "99",
                    "x-annotation-common.notNull": true
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "ccChargeTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CcChargeType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CcChargeType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmId": {
                    "format": "int32",
                    "type": "number"
                  },
                  "bmIsCore": {
                    "maxLength": 1,
                    "type": "string"
                  },
                  "bmSortId": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "99",
                    "x-annotation-common.notNull": true
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "ccChargeGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CcChargeGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ccVatType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CcVatType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "chargeCorrectionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ChargeCorrectionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CcVatType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmId": {
                    "format": "int32",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "ccChargeTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CcChargeType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ChargeCorrection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currencyKey": {
                    "$ref": "#/components/schemas/lib.Currency"
                  },
                  "description": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "accountCount": {
                    "type": "string"
                  },
                  "correctionItemCount": {
                    "type": "string"
                  },
                  "sourceType": {
                    "$ref": "#/components/schemas/lib.ChargeCorrectionSourceType"
                  },
                  "stagingNumber": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ChargeCorrectionStatus"
                  },
                  "totalFee": {
                    "type": "object",
                    "properties": {
                      "fee": {
                        "format": "double",
                        "type": "number"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "chargeCorrectionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ChargeCorrectionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ChargeCorrectionItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "additionalDescription": {
                    "type": "string"
                  },
                  "chargeDescription": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "contextType": {
                    "$ref": "#/components/schemas/lib.ChargeCorrectionContext"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentStagingStatusMessage": {
                    "type": "string"
                  },
                  "feePerPiece": {
                    "format": "double",
                    "type": "number"
                  },
                  "isIssueInCurrentBillingCycleIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "number"
                  },
                  "servicePeriodEnd": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "servicePeriodStart": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ChargeCorrectionItemStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ccChargeType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CcChargeType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "chargeCorrection": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ChargeCorrection"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "invoice": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ChargeTypeTaxItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "chargeTypeId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "chargeType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "taxItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TaxItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "taxProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TaxProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Charges": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "charge": {
                    "format": "double",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isInvoicedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "oldCharge": {
                    "format": "double",
                    "type": "number"
                  },
                  "oldQuantity": {
                    "format": "double",
                    "type": "number"
                  },
                  "oldServicePeriodEndDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "oldServicePeriodStartDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "quantity": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "1",
                    "x-annotation-common.notNull": true
                  },
                  "servicePeriodEndDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "servicePeriodStartDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingCycleInstance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingCycleInstance"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "pricepoint": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscription": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Subscription"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CmpInstance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "build": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dbModel": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "externalRelease": {
                    "description": "CMP marketing number visible for the customers\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "license": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "licenseHash": {
                    "type": "string"
                  },
                  "mysqlDbModel": {
                    "type": "string"
                  },
                  "sprint": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "csp": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Csp"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "datacenter": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.DataCenter"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CmpObjectStagingArea": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "cmpObjectStagingStatusTypeKey": {
                    "$ref": "#/components/schemas/lib.CmpObjectStagingStatusType"
                  },
                  "cmpObjectTypeKey": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentStagingStatusMessage": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "https://mavoco.atlassian.net/browse/MAV-4705\n",
                    "type": "string"
                  },
                  "errorSource": {
                    "$ref": "#/components/schemas/lib.ErrorSource"
                  },
                  "esbNumber": {
                    "description": "https://mavoco.atlassian.net/browse/MAV-4700\n",
                    "type": "string"
                  },
                  "externalProcessReference": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "processContext": {
                    "type": "string"
                  },
                  "processStatus": {
                    "$ref": "#/components/schemas/lib.ProcessStatus"
                  },
                  "processType": {
                    "$ref": "#/components/schemas/lib.ProcessType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "cmpObject": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CmpObject"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "process": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Process"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "processQueues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ProcessQueue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CommitmentTier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountRevenue": {
                    "format": "double",
                    "type": "number"
                  },
                  "billableSims": {
                    "format": "int64",
                    "type": "number"
                  },
                  "billableSimsViolationFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "simRevenue": {
                    "format": "double",
                    "type": "number"
                  },
                  "targetDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "tierLevel": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "1",
                    "x-annotation-common.notNull": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CommunicationProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "externalProfileReference": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Company": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "companyDepartmentName": {
                    "type": "string"
                  },
                  "companyName": {
                    "type": "string"
                  },
                  "companyRegistrationNumber": {
                    "type": "string"
                  },
                  "companyTaxNumber": {
                    "type": "string"
                  },
                  "companyVatNumber": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "email": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "phone1": {
                    "type": "string"
                  },
                  "phone2": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "addresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Address"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "companyType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CompanyType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "projects": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Project"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "taxProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TaxProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CompanyType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "companies": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Company"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Customer"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Context": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "contextType": {
                    "$ref": "#/components/schemas/lib.ContextType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalContextReference": {
                    "type": "string"
                  },
                  "isAccountGroupLinkedToCompanyIndicator": {
                    "type": "boolean"
                  },
                  "isIpWhitelistEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "company": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Company"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contextCustomAttributeTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContextCustomAttributeType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "csp": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Csp"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Customer"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ignoreStagingStatusSchedules": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.IgnoreStagingStatusSchedule"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "orgunit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tenant": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Tenant"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Contract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountLevelDiscountTierType": {
                    "$ref": "#/components/schemas/lib.AccountLevelDiscountTierType"
                  },
                  "accountTargetCommitmentEnforcement": {
                    "$ref": "#/components/schemas/lib.AccountTargetCommitmentEnforcement"
                  },
                  "activationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billingActivationGracePeriodDays": {
                    "format": "int32",
                    "type": "number"
                  },
                  "billingActivationGracePeriodEnforcement": {
                    "$ref": "#/components/schemas/lib.BillingActivationGracePeriodEnforcement"
                  },
                  "billingActivationGracePeriodTargetStatus": {
                    "$ref": "#/components/schemas/lib.BillingActivationGracePeriodTargetStatus"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "contractDocumentFile": {
                    "type": "string"
                  },
                  "contractDocumentType": {
                    "$ref": "#/components/schemas/lib.ContractDocumentType"
                  },
                  "contractStatus": {
                    "$ref": "#/components/schemas/lib.ContractStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "discountOnDataOverusageIndicator": {
                    "type": "boolean"
                  },
                  "discountOnOtherFeesIndicator": {
                    "type": "boolean"
                  },
                  "discountOnSimStatusTransitionFeesIndicator": {
                    "type": "boolean"
                  },
                  "discountOnSmsOverusageIndicator": {
                    "type": "boolean"
                  },
                  "discountOnSubscriptionFeesIndicator": {
                    "type": "boolean"
                  },
                  "discountOnVoiceOverusageIndicator": {
                    "type": "boolean"
                  },
                  "discountType": {
                    "$ref": "#/components/schemas/lib.DiscountType"
                  },
                  "expiryNotificationDays": {
                    "format": "int32",
                    "type": "number"
                  },
                  "expiryTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalContractNumber": {
                    "type": "string"
                  },
                  "isAccountCommitmentEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isAccountDiscountEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isCmpAccountContractTypeIndicator": {
                    "description": "If true, the dependencies for ACCOUNT-CONTRACT-TYPE CMP shall be enforced: sim_commitment, account_commitment and account_discount shall be required if the respective indicators say so.  If false, the dependencies for AMDOCS-TC shall be enforced.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true",
                    "x-annotation-common.notNull": true
                  },
                  "isMinimumAccountRevenueCommitmentEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isSimCommitmentEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "minBillableBillcycles": {
                    "format": "int32",
                    "type": "number"
                  },
                  "minBillableBillcyclesEnforcement": {
                    "$ref": "#/components/schemas/lib.MinBillableBillcyclesEnforcement"
                  },
                  "minBillableBillcyclesViolationFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "minBillableBillcyclesViolationFeeType": {
                    "$ref": "#/components/schemas/lib.MinBillableBillcyclesViolationFeeType"
                  },
                  "minimumAccountRevenueCommitment": {
                    "format": "double",
                    "type": "number"
                  },
                  "minimumAccountRevenueType": {
                    "$ref": "#/components/schemas/lib.MinimumAccountRevenueType"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountCommitments": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountCommitment"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountDiscounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountDiscount"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "commitmentTiers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CommitmentTier"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractApnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractRoamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractRoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractSecurityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractSecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractServiceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractSimSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractSimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractsSourceContract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Contract"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "discountTiers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.DiscountTier"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "fileMetadata": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.FileMetadata"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simCommitments": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimCommitment"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sourceContract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContractApnGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountApnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContractChargeCodeDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "chargeCode": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContractChargeTypeDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "contractChargeTypeKey": {
                    "$ref": "#/components/schemas/lib.ContractChargeType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContractRoamingProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountRoamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountRoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContractSecurityProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSecurityProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSecurityProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContractServiceProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountServiceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContractSimSalesProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "contractPrice": {
                    "format": "double",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSimSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ContractSubscriptionItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "addonSimCostCap": {
                    "format": "double",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "priceplanPrepaidStaticMaxSubs": {
                    "format": "int64",
                    "type": "number"
                  },
                  "subscriptionItemCustomFeeOneOff": {
                    "format": "double",
                    "type": "number"
                  },
                  "subscriptionItemCustomFeePercentage": {
                    "format": "double",
                    "type": "number"
                  },
                  "subscriptionItemCustomFeeRecurring": {
                    "format": "double",
                    "type": "number"
                  },
                  "subscriptionItemCustomName": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Country": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "alpha2Code": {
                    "maxLength": 2,
                    "type": "string"
                  },
                  "alpha3Code": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "countryType": {
                    "$ref": "#/components/schemas/lib.CountryType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mcc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "numericCode": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "oucProvisioningStatus": {
                    "$ref": "#/components/schemas/lib.OucProvisioningStatus"
                  },
                  "shortCountryId": {
                    "format": "int32",
                    "description": "A 3-digit numeric identifier of the country. The sole purpose of this identifier is to ensure compatability with existing BM installations, where a country is identified using the tinyint datataype.\n",
                    "type": "number"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "addresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Address"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customersBillingAddressCountry": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Customer"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customersShippingAddressCountry": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Customer"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkRepositories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkRepository"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "purchaseOrders": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PurchaseOrder"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "regions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Region"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simLivesDataLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimLive"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simLivesSmsMoLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimLive"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simLivesSmsMtLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimLive"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simLivesVoiceMoLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimLive"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simLivesVoiceMtLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimLive"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "vcountryDetailses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.vcountryDetails"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "countryMccs": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CountryMcc"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneCountries": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ZoneCountry"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Csp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingCycleDefinitions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingCycleDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "cmpInstances": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CmpInstance"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "cspStatisticsBc": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CspStatisticsBc"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "cspStatisticsDaily": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CspStatisticsDaily"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CspStatisticsBc": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsActiveAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsActiveTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsBillableAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsBillableTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsChurned": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsDraftAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsDraftTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsGrossAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsLeadAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsLeadTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsNetAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsNonbillableAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsNonbillableTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsSuspendedAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsSuspendedTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsTerminatedAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsTerminatedTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "arpuActivation": {
                    "format": "double",
                    "type": "number"
                  },
                  "arpuDataOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "arpuMoSmsOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "arpuMoVoiceOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "arpuMtSmsOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "arpuMtVoiceOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "arpuSubscriptionInBilling": {
                    "format": "double",
                    "type": "number"
                  },
                  "arpuSubscriptionSuspended": {
                    "format": "double",
                    "type": "number"
                  },
                  "arpuSubscriptionTotal": {
                    "format": "double",
                    "type": "number"
                  },
                  "arpuTotal": {
                    "format": "double",
                    "type": "number"
                  },
                  "billingCycleEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billingCycleStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billingMonth": {
                    "format": "int32",
                    "type": "number"
                  },
                  "billingYear": {
                    "format": "int32",
                    "type": "number"
                  },
                  "billrunEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billrunStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "cdrSmsAverageDaily": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrSmsAverageHourly": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "cdrSmsPeakHourly": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrSmsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrVoiceAverageDaily": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrVoiceAverageHourly": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrVoicePeakHourly": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrVoiceTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "chargesActivation": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesActivationAverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesCommitted": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesCsdAverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesData": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesDataAverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesDataOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesDataPredicted": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesMoSmsOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesMoVoiceOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesMtSmsOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesMtVoiceOverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesOther": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesOtherAverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesSms": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesSmsAverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesSmsPredicted": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesSubscription": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesSubscriptionAverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesSubscriptionPredicted": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesTotal": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesTotalAverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesTotalPredicted": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesUssdAverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesVoice": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesVoiceAverage": {
                    "format": "double",
                    "type": "number"
                  },
                  "chargesVoicePredicted": {
                    "format": "double",
                    "type": "number"
                  },
                  "cspId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "customerId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "dataAverageSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "dataBillableTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "dataPeakSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "dataTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "edrAverageDaily": {
                    "format": "int64",
                    "type": "number"
                  },
                  "edrPeakHourly": {
                    "format": "int64",
                    "type": "number"
                  },
                  "edrTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "moSmsAverageSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "moSmsPeakSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "moSmsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "moVoiceAverageSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "moVoicePeakSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "moVoiceTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "modificationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mtSmsAverageSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "mtSmsPeakSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "mtSmsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "mtVoiceAverageSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "mtVoicePeakSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "mtVoiceTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "sessionsAverageSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "sessionsPeakSim": {
                    "format": "int64",
                    "type": "number"
                  },
                  "sessionsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsAccountTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsActivationTimeAverage": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsActivations": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillableInBilling": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillableInTesting": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillableReadyForBilling": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillableRetired": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillableSuspended": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillableTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillingReadyAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillingReadyTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsCommitted": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsCustomerInventoryAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsCustomerInventoryTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsCustomerTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsDeactivations": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsDeltaToCommitment": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsInBillingAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsInBillingTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsInGraceperiod": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsInTestingAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsMovedToAccountTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsMovedToSubaccountsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsNetAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsNonbillableTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsOverGraceperiod": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsOverGraceperiodForced": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsRetiredAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsRetiredTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsServiceProviderInventory": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsStatusAssignedTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsStatusOperatorInventoryTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsStatusPurgedTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsStatusUnassignedTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsSuspendedAdd": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsSuspendedTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsTestingTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simHlrRefreshSuccess": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simHlrRefreshFailed": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "statisticsContext": {
                    "$ref": "#/components/schemas/lib.StatisticsContext"
                  },
                  "statisticsPeriod": {
                    "$ref": "#/components/schemas/lib.StatisticsPeriod"
                  },
                  "validFromTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validToTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "csp": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Csp"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CspStatisticsBcBillableSims": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountSubscriptionItemId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "bbeChargesDataOverage": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbeChargesSmsOverage": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbeChargesVoiceOverage": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbePlanId": {
                    "type": "string"
                  },
                  "bbePlanName": {
                    "type": "string"
                  },
                  "bbeUsageTotalSms": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "bbeUsageTotalVoice": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "bbsM2mApplication": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsM2mDiscount": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsM2mHardware": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsM2mOther": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsM2mSubscriptionFee": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsM2mUsage": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsMonthlyFeeDiscounts": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsSubscriptionFee": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsSubtotal": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsTotalDiscount": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "bbsTotalUsage": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "billingCycleEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "billingCycleStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "bmBcId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "chargesDataOverage": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "chargesSmsOverage": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "chargesVoiceOverage": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "detailId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "isBillableIndicator": {
                    "type": "boolean"
                  },
                  "isEnhancedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isEnhancedIndicatorBbe": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isEnhancedIndicatorBss": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isMrcSuspendedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isPilotSubscriptionIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "legacySubscriptionItemType": {
                    "type": "string"
                  },
                  "mrcOnetime": {
                    "format": "double",
                    "type": "number"
                  },
                  "mrcSim": {
                    "format": "double",
                    "type": "number"
                  },
                  "prepaidRenewalCount": {
                    "format": "int64",
                    "type": "number"
                  },
                  "prepaidRenewalTotal": {
                    "format": "double",
                    "type": "number"
                  },
                  "simBillingStatus": {
                    "type": "string"
                  },
                  "simCommitmentIndicator": {
                    "type": "boolean"
                  },
                  "subscriptionItemId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "tcBbeStatusInfo": {
                    "type": "string"
                  },
                  "tcBssStatusInfo": {
                    "type": "string"
                  },
                  "tcMrcSimBbe": {
                    "format": "double",
                    "type": "number"
                  },
                  "usageIncluded": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "usageIncludedSms": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "usageIncludedVoice": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "usageOverage": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "usageOverageSms": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "usageOverageVoice": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "usageTotal": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "usageTotalSms": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "usageTotalTcBbe": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "usageTotalVoice": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "validFromTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validToTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "csp": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Csp"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CspStatisticsDaily": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountsActiveBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsActiveTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsBillableBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsBillableTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsDraftBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsDraftTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsLeadBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsLeadTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsNonbillableBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsNonbillableTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsSuspendedBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsSuspendedTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsTerminatedBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsTerminatedTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "accountsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrPeakVoiceHourly": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrSmsAverageDaily": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrSmsPeakHourly": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrSmsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrVoiceAverageDaily": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cdrVoiceTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "dataTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "edrAverageDaily": {
                    "format": "int64",
                    "type": "number"
                  },
                  "edrPeakHourly": {
                    "format": "int64",
                    "type": "number"
                  },
                  "edrTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "moSmsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "moVoiceTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "modificationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mtSmsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "mtVoiceTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "sessionsAverage": {
                    "format": "int64",
                    "type": "number"
                  },
                  "sessionsMax": {
                    "format": "int64",
                    "type": "number"
                  },
                  "sessionsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsAccountTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillingReadyBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsBillingReadyTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsCustomerInventoryBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsCustomerInventoryTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsCustomerTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsDeltaToCommitment": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsInBillingBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsInBillingTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsInGraceperiod": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsMovedToAccountTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsMovedToSubaccountTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsOverGraceperiod": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsOverGraceperiodForced": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsRetiredBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsRetiredTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsSuspendedBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsSuspendedTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsTestingBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simsTestingTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simHlrRefreshSuccess": {
                    "format": "int64",
                    "type": "number"
                  },
                  "simHlrRefreshFailed": {
                    "format": "int64",
                    "type": "number"
                  },
                  "statisticsContext": {
                    "$ref": "#/components/schemas/lib.StatisticsContext"
                  },
                  "statisticsDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "statisticsPeriod": {
                    "$ref": "#/components/schemas/lib.StatisticsPeriod"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "csp": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Csp"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Customer"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CurrencyDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currencyKey": {
                    "$ref": "#/components/schemas/lib.Currency"
                  },
                  "currencyNumber": {
                    "maxLength": 3,
                    "description": "https://en.wikipedia.org/wiki/ISO_4217\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "precision": {
                    "format": "int32",
                    "description": "Identifies the number of digits after the decimal separator.\n",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Customer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "adminEmail": {
                    "type": "string"
                  },
                  "adminFirstname": {
                    "type": "string"
                  },
                  "adminLastname": {
                    "type": "string"
                  },
                  "adminLinkedin": {
                    "type": "string"
                  },
                  "adminMiddleName": {
                    "type": "string"
                  },
                  "adminPhone": {
                    "type": "string"
                  },
                  "annualRevenue": {
                    "type": "string"
                  },
                  "b2bCustomerType": {
                    "$ref": "#/components/schemas/lib.B2bCustomerType"
                  },
                  "billingAddressCity": {
                    "type": "string"
                  },
                  "billingAddressState": {
                    "type": "string"
                  },
                  "billingAddressStreet": {
                    "type": "string"
                  },
                  "billingAddressZipCode": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "customerNumber": {
                    "type": "string"
                  },
                  "customerStatus": {
                    "$ref": "#/components/schemas/lib.CustomerStatus"
                  },
                  "dbCompany": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "dunsNumber": {
                    "maxLength": 9,
                    "type": "string"
                  },
                  "externalCustomerNumber": {
                    "type": "string"
                  },
                  "fax": {
                    "type": "string"
                  },
                  "foundingDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "invoiceDeliveryEmail": {
                    "type": "string"
                  },
                  "isBillableIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "linkedin": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nameLocal": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "registrationNumber": {
                    "type": "string"
                  },
                  "shippingAddressCity": {
                    "type": "string"
                  },
                  "shippingAddressState": {
                    "type": "string"
                  },
                  "shippingAddressStreet": {
                    "type": "string"
                  },
                  "shippingAddressZipCode": {
                    "type": "string"
                  },
                  "taxNumber": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountingGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountingGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingAddressCountry": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "companyType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CompanyType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "cspStatisticsDaily": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CspStatisticsDaily"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customerSims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CustomerSim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customerSubscriptionItemTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CustomerSubscriptionItemType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customerSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CustomerSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customersParentCustomer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Customer"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "naicsCodes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NaicsCode"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentCustomer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Customer"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resellerProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ResellerProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resellerProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ResellerProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "shippingAddressCountry": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sicCodes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SicCode"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CustomerSim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "customer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Customer"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CustomerSubscriptionItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isDefaultIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "networkInterfaceId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "subscriptionItemBaseType": {
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "customer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Customer"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CustomerSubscriptionItemType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "customer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Customer"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.StmSubscriptionItemType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.DataCenter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "cmpInstances": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CmpInstance"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ggsns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Ggsn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "onlineUsageControllers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OnlineUsageController"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.DeviceType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.DiscountTier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountRevenueUpperThreshold": {
                    "format": "double",
                    "type": "number"
                  },
                  "billableSimsUpperThreshold": {
                    "format": "int64",
                    "type": "number"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "discount": {
                    "format": "double",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "tierLevel": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "1",
                    "x-annotation-common.notNull": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.DnsProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dnsServerIpAddress": {
                    "type": "string"
                  },
                  "dnsServerPort": {
                    "format": "int32",
                    "type": "number"
                  },
                  "dnsServerPriority": {
                    "$ref": "#/components/schemas/lib.ServerPriority"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "baseApn": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnBase"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Domain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "casAccountPolicy": {
                    "$ref": "#/components/schemas/lib.CasAccountPolicy"
                  },
                  "casAccountType": {
                    "$ref": "#/components/schemas/lib.CasAccountType"
                  },
                  "casAllowedUsagePolicy": {
                    "$ref": "#/components/schemas/lib.CasAllowedUsagePolicy"
                  },
                  "casAuthorizationPolicy": {
                    "$ref": "#/components/schemas/lib.CasAuthorizationPolicy"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "description": "Additional description.\n",
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "description": "Unique name of the domain.\n",
                    "type": "string"
                  },
                  "sn": {
                    "description": "Unique short name of the domain; used as CAS serviceId.\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "casusers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Casuser"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.EsimNetworkInterface": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "displayKey": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSimSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "esimPlatform": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.EsimPlatform"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.EsimPlatform": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "displayKey": {
                    "type": "string"
                  },
                  "esimPlatformTypeKey": {
                    "$ref": "#/components/schemas/lib.EsimPlatformType"
                  },
                  "isApiIntegratedIndicator": {
                    "type": "boolean"
                  },
                  "isProfileDownloadOrderOverrideSupportedIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "licenseLevel": {
                    "format": "int32",
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "esimPlatform": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.EsimPlatform"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.FileMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "fileName": {
                    "type": "string"
                  },
                  "fileReference": {
                    "type": "string"
                  },
                  "fileSize": {
                    "format": "int64",
                    "type": "number"
                  },
                  "fileUploadStatus": {
                    "$ref": "#/components/schemas/lib.FileUploadStatus"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "uploadTokenExpiryTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contracts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Contract"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.FrNetwork": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "frNetworkAddress": {
                    "type": "string"
                  },
                  "gatewayAddress": {
                    "type": "string"
                  },
                  "isCustomGatewayAddressIndicator": {
                    "description": "When this flag is disabled, the first IP address of the address pool will be automatically set as gateway_address. Otherwise an IP address from the address pool must be entered.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isUsedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "frNetworkPool": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.FrNetworkPool"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiPdpContexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiPdpContext"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.FrNetworkPool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "frNetworkMasklen": {
                    "format": "int32",
                    "description": "The masklength of the network chunks that are relating to this network pool. All network chunks are the same size.\n",
                    "type": "number"
                  },
                  "ipAddressType": {
                    "$ref": "#/components/schemas/lib.IpAddressType"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "networkAddress": {
                    "type": "string"
                  },
                  "networkSize": {
                    "format": "int64",
                    "type": "number"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "useCustomGatewayAddressIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apn": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Apn"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "frNetworks": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.FrNetwork"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Ggsn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Apn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "datacenter": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.DataCenter"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "onlineUsageControllers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.OnlineUsageController"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.IgnoreStagingStatusEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "eventTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "processContext": {
                    "type": "string"
                  },
                  "processType": {
                    "$ref": "#/components/schemas/lib.ProcessType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "cmpObject": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CmpObject"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ignoreStagingStatusSchedule": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.IgnoreStagingStatusSchedule"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "process": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Process"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.IgnoreStagingStatusSchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "cmpObjectStagingStatusTypeKey": {
                    "$ref": "#/components/schemas/core.CmpObjectStagingStatusType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "info": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "startTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "context": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Context"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ignoreStagingStatusEvents": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.IgnoreStagingStatusEvent"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Imsi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalIpv4AddressStatic": {
                    "type": "string"
                  },
                  "externalIpv6AddressStatic": {
                    "type": "string"
                  },
                  "hlrIsActiveIndicator": {
                    "description": "Indicates whether the IMSI is allowed to attach to the network.  This parameter corresponds to the 'IMSI-Active-Flag' in the WING HLR. Note: All IMSIs will be created in the HLR with IMSI-Active-Flag disabled, i.e. the IMSI cannot attach to a network. Once the IMSI (the related SIM) becomes assigned to an account (via Purchase Order), the IMSI-Active-Flag will be enabled in the HLR.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "hlrIsActiveIndicatorUpdateTimestamp": {
                    "description": "The moment in time when the IMSI-Active-Flag was modified. This timestamp needs to be provided in the API call\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "hlrProvisionedIndicator": {
                    "description": "Indicates whether an IMSI profile exists in HLR. TRUE: IMSI profile exists in HLR FALSE: IMSI profile does not exist in HLR WING requires that each IMSI is preloaded in HLR.  When an IMSI is to be purgedm (removed from HLR), a batch operation shall be used to update the hlr_provisioned_indicator accordingly.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true",
                    "x-annotation-common.notNull": true
                  },
                  "imsi": {
                    "maxLength": 15,
                    "description": "see https://en.wikipedia.org/wiki/International_mobile_subscriber_identity\n",
                    "type": "string"
                  },
                  "isPrepaidOverageEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "prepaidRenewalMode": {
                    "$ref": "#/components/schemas/lib.PrepaidRenewalModeImsi"
                  },
                  "quarantineEndDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "usageLimitOverride": {
                    "$ref": "#/components/schemas/lib.UsageLimitOverride"
                  },
                  "viccid": {
                    "maxLength": 22,
                    "description": "Virtual ICCID: Used in context of MultiSIM only. vICCID and IMSI are statically paired; pairing cannot be changed.\n",
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "activeOnSim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "assignedToSim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiMsubNetworkPriceplans": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiMsubNetworkPriceplan"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiPdpContexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiPdpContext"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiPool": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ImsiPool"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiSecurityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiSecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ipProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.IpProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "msisdn": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Msisdn"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "prepaidAutoRenewQueues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PrepaidAutoRenewQueue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simasCredentialses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimasCredentials"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ImsiMsubNetworkPriceplan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "imsi": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Imsi"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ImsiPdpContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isTransactionLockedIndicator": {
                    "description": "Indicates whether an HLR operation regarding the old record is ongoing\n",
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUsedIpAddress": {
                    "description": "The IP Address that was assigned to the IMSI when the last data session was established.\n",
                    "type": "string"
                  },
                  "lastUsedIpAddressUpdateTimestamp": {
                    "description": "The moment in time when the IMSI started the last data session\n",
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "frNetwork": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.FrNetwork"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsi": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Imsi"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "pdpContext": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.PdpContext"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "staticIpAddress": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.StaticIpAddress"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ImsiPool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "imsiRecyclingEnabledIndicator": {
                    "type": "boolean"
                  },
                  "imsiPoolSize": {
                    "format": "int64",
                    "type": "number"
                  },
                  "quarantinePeriod": {
                    "format": "int32",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "cugEnabledIndicator": {
                    "description": "This is only relevant for SIMs provided by KPN: Indicates whether the CUG Feature is enabled in KPN-Jasper (SMS to these SIMs must be sent via KPN-Jasper).\n",
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "batchFiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ImsiSecurityProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "securityProfileType": {
                    "$ref": "#/components/schemas/lib.SecurityProfileType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "imsi": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Imsi"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.IntegrationConfig": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "configFile": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "configValue": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "integrationConfigParameter": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.IntegrationConfigParameter"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.IntegrationConfigParameter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "integrationConfigs": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.IntegrationConfig"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.InterimBillingCycle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmBillingCycleInstanceId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "interimBillingCycleCause": {
                    "$ref": "#/components/schemas/lib.InterimBillingCycleCause"
                  },
                  "interimBillingCycleDelayUntilTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "interimBillingCycleStatus": {
                    "$ref": "#/components/schemas/lib.InterimBillingCycleStatus"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "processInfo": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.InterimBillingCycleItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "interimBillingCycleId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "interimBillingCycleItemCause": {
                    "$ref": "#/components/schemas/lib.InterimBillingCycleCause"
                  },
                  "interimBillingCycleItemStatus": {
                    "$ref": "#/components/schemas/lib.InterimBillingCycleItemStatus"
                  },
                  "itemId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "processInfo": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.InvoiceTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "template": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "templateSize": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountingGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountingGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.IpAddressPool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "ipAddressPool": {
                    "type": "string"
                  },
                  "ipAddressType": {
                    "$ref": "#/components/schemas/lib.IpAddressType"
                  },
                  "ipPoolSize": {
                    "format": "int64",
                    "description": "this value is computed automatically\n",
                    "type": "number"
                  },
                  "usedIpSize": {
                    "format": "int64",
                    "type": "number"
                  },
                  "ipAddressAllocationType": {
                    "$ref": "#/components/schemas/lib.IpAllocationType"
                  },
                  "vpnEnabledIndicator": {
                    "type": "boolean"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "usedIpPercentage": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apn": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Apn"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "staticIpAddresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.StaticIpAddress"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.IpProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 100,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Msisdn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "msisdn": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "msisdnAvailabilityStatus": {
                    "$ref": "#/components/schemas/lib.MsisdnAvailabilityStatus"
                  },
                  "quarantineEndDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "msisdnPool": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.MsisdnPool"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.MsisdnPool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "msisdnPoolTypeKey": {
                    "$ref": "#/components/schemas/lib.MsisdnPoolType"
                  },
                  "msisdnRecyclingEnabledIndicator": {
                    "description": "FALSE: MSISDNs of this pool must not be re-used TRUE: MSISDNs of this pool can be re-used after quarantine_period has ended (quarantine period must not be NULL in this case)\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "name": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "quarantinePeriod": {
                    "format": "int32",
                    "description": "Number of days before an MSISDN can be re-used.\n",
                    "type": "number"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "msisdnPoolSize": {
                    "format": "int64",
                    "type": "number"
                  },
                  "usedMsisdnSize": {
                    "format": "int64",
                    "type": "number"
                  },
                  "usedMsisdnPercentage": {
                    "format": "double",
                    "type": "number"
                  },
                  "msisdnInQuarantine": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "msisdns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Msisdn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NaicsCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "level": {
                    "format": "int32",
                    "type": "number"
                  },
                  "naicsCode": {
                    "maxLength": 6,
                    "type": "string"
                  },
                  "parentNaicsCodeId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "title": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "customers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Customer"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "naicsCodesParentNaicsCode": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NaicsCode"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentNaicsCode": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NaicsCode"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "cc": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "comment": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "ndcNpa": {
                    "maxLength": 15,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkRepository": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkRepository"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "edrDescriptor": {
                    "maxLength": 4000,
                    "description": "Network descriptor in the CDR/EDR as provided by the MNO\n",
                    "type": "string"
                  },
                  "groupGtPrefix": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "roundingData": {
                    "$ref": "#/components/schemas/lib.RoundingData"
                  },
                  "roundingVoice": {
                    "$ref": "#/components/schemas/lib.RoundingVoice"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkRepositories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkRepository"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkGt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "gtPrefix": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkRepository": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkRepository"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkInterface": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "apiPassword": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "apiUsername": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "displayKey": {
                    "maxLength": 8,
                    "description": "This value is used in BM GUI\n",
                    "type": "string"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "serviceEndpoint": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountApnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountRoamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountRoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountServiceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSimSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSimSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Apn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnBases": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ApnBase"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileApnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileRoamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileRoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileServiceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSimSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "communicationProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CommunicationProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractApnGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractApnGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractRoamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractRoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractServiceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractSimSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractSimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contractSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ContractSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "integrationConfigs": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.IntegrationConfig"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "platform": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Platform"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "prepaidAutoRenewTemplates": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PrepaidAutoRenewTemplate"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "qosProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.QosProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "qosProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.QosProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfileDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfileDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simBillingStatusNetworkSettingses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimBillingStatusNetworkSettings"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkProvider": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "comment": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "defaultMsisdnQuarantinePeriod": {
                    "format": "int32",
                    "description": "Default number of days an MSISDN should stay in quarantine before it can be re-assigned to another SIM. This value can be overwritten on MSISDN Pool level. If default_msisdn_recycling_enabled_indicator is TRUE, this value must not be NULL\n",
                    "type": "number"
                  },
                  "defaultMsisdnRecyclingEnabledIndicator": {
                    "type": "boolean"
                  },
                  "displayKey": {
                    "maxLength": 8,
                    "description": "This value is used in BM GUI\n",
                    "type": "string"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "esimNetworkInterfaces": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.EsimNetworkInterface"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiPools": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiPool"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "msisdnPools": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.MsisdnPool"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterfaces": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkInterface"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviderReports": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkProviderReport"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simPools": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimPool"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkProviderReport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "outputFormat": {
                    "$ref": "#/components/schemas/lib.OutputFormat"
                  },
                  "sequenceNbr": {
                    "format": "int32",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviderReportSchedules": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkProviderReportSchedule"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "report": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Report"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkProviderReportResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "actualPeriodicityParameters": {
                    "type": "string"
                  },
                  "actualReportDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "reportContent": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "reportContentType": {
                    "type": "string"
                  },
                  "reportFilesizeBytes": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "reportRowcount": {
                    "format": "int64",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ReportExecutionStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkProviderReportResultConversions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkProviderReportResultConversion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviderReportSchedule": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProviderReportSchedule"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkProviderReportResultConversion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "reportContentType": {
                    "type": "string"
                  },
                  "reportFileName": {
                    "type": "string"
                  },
                  "reportFilesizeBytes": {
                    "format": "int64",
                    "type": "number"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ReportExecutionStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviderReportResult": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProviderReportResult"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkProviderReportSchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "executionPolicy": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "periodicityParameters": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkProviderReport": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProviderReport"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviderReportResults": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkProviderReportResult"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.NetworkRepository": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "comment": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mcc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "mnc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "name": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "country": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkCodes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkCode"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkGts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkGt"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfileNetworks": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfileNetwork"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sgsns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sgsn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tadigCodes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TadigCode"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneNetworks": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ZoneNetwork"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.OfferType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "triggerCount": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.OfferTypeChargeTrigger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "chargeTypeKey": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "offerTypeId": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.OnlineUsageController": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hostname": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "ipAddress": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "port": {
                    "format": "int32",
                    "type": "number"
                  },
                  "provisioningUrl": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "datacenter": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.DataCenter"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ggsns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Ggsn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.OpenCostsSummaryReportItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currencyKey": {
                    "$ref": "#/components/schemas/lib.Currency"
                  },
                  "exportedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "openItemsTotal": {
                    "format": "int64",
                    "type": "number"
                  },
                  "openNetCostTotal": {
                    "format": "double",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingCycleInstance": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingCycleInstance"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.PdpContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hlrReference": {
                    "format": "int32",
                    "description": "This value will be set as PDP Context ID in the HLR\n",
                    "type": "number"
                  },
                  "isDefaultApnIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apn": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Apn"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "apnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiPdpContexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiPdpContext"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Person": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalPersonId": {
                    "description": "https://mavoco.atlassian.net/browse/DEFECT-1164\n",
                    "type": "string"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "isCspEmployee": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "sex": {
                    "$ref": "#/components/schemas/lib.Sex"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountPersons": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountPerson"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "addresses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Address"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.PersonType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isAccountAdminIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isCspRole": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isProcessRoleIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isUniqueIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "receiveEmailNotificationIndicator": {
                    "description": "If enabled, email notifications will be sent to all account-persons of this type\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "receiveSmsNotificationIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "simProcessesKey": {
                    "$ref": "#/components/schemas/lib.SimProcess"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountPersons": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountPerson"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Platform": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "apnGroupApnLimit": {
                    "format": "int32",
                    "type": "number"
                  },
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "communicationManagementType": {
                    "$ref": "#/components/schemas/lib.CommunicationManagementType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "displayKey": {
                    "maxLength": 8,
                    "description": "This value is used in BM GUI\n",
                    "type": "string"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "platformTypeKey": {
                    "$ref": "#/components/schemas/lib.PlatformType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "suspendType": {
                    "$ref": "#/components/schemas/lib.SuspendType"
                  },
                  "isLicensed": {
                    "type": "boolean"
                  },
                  "isPcrfEnabledIndicator": {
                    "type": "boolean"
                  },
                  "apiIntegration": {
                    "type": "boolean"
                  },
                  "isApnQosSupportedIndicator": {
                    "type": "boolean"
                  },
                  "simProvisioningBehavior": {
                    "$ref": "#/components/schemas/lib.SimProvisioningBehavior"
                  },
                  "simInitialBillingStatus": {
                    "$ref": "#/components/schemas/lib.SimInitialBillingStatus"
                  },
                  "pcrfZoneSupportType": {
                    "$ref": "#/components/schemas/lib.PcrfZoneSupportType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkInterfaces": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkInterface"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "platforms": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Platform"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.PrepaidAutoRenewQueue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentQueuePosition": {
                    "format": "int32",
                    "type": "number"
                  },
                  "lastQueuePosition": {
                    "format": "int32",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "networkInterfaceId": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsi": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Imsi"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "prepaidAutoRenewTemplate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.PrepaidAutoRenewTemplate"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.PrepaidAutoRenewTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "templateName": {
                    "type": "string"
                  },
                  "templatePriceplanCount": {
                    "format": "int64",
                    "type": "number"
                  },
                  "templateType": {
                    "$ref": "#/components/schemas/lib.PrepaidAutoRenewTemplateType"
                  },
                  "assignedImsisCounter": {
                    "format": "int64",
                    "type": "number"
                  },
                  "terminationBehavior": {
                    "$ref": "#/components/schemas/lib.PrepaidAutoRenewTerminationBehavior"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "prepaidAutoRenewQueues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PrepaidAutoRenewQueue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "prepaidAutoRenewTemplatePriceplans": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PrepaidAutoRenewTemplatePriceplan"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.PrepaidAutoRenewTemplatePriceplan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isPrepaidIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "queuePosition": {
                    "format": "int32",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "prepaidAutoRenewTemplate": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.PrepaidAutoRenewTemplate"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Priceplan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activationFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "bmAccountIdExclusiveAccess": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cancellationPeriodCsp": {
                    "format": "int32",
                    "type": "number"
                  },
                  "cancellationPeriodCustomer": {
                    "format": "int32",
                    "type": "number"
                  },
                  "currency": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "customerType": {
                    "$ref": "#/components/schemas/lib.BmCustomerType"
                  },
                  "defaultCommitment": {
                    "format": "int32",
                    "type": "number"
                  },
                  "includedHomezoneData": {
                    "format": "double",
                    "type": "number"
                  },
                  "includedHomezoneDataUnit": {
                    "$ref": "#/components/schemas/lib.UnitData"
                  },
                  "includedHomezoneMoSms": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedHomezoneMtSms": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestData": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestMsu": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestSms": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestVoice": {
                    "format": "int64",
                    "type": "number"
                  },
                  "monthlyFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "phoneChargeType": {
                    "$ref": "#/components/schemas/lib.BmPhoneChargeType"
                  },
                  "priceplanActivationStatus": {
                    "type": "string"
                  },
                  "priceplanExclusivity": {
                    "$ref": "#/components/schemas/lib.BmCustomerType"
                  },
                  "priceplanId": {
                    "format": "int32",
                    "type": "number"
                  },
                  "priceplanLifecycleStatus": {
                    "type": "string"
                  },
                  "priceplanName": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "priceplanVersion": {
                    "format": "int64",
                    "type": "number"
                  },
                  "smsChargeType": {
                    "$ref": "#/components/schemas/lib.BmSmsChargeType"
                  },
                  "subscriptionItemType": {
                    "type": "string"
                  },
                  "uuid": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "validFrom": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validTo": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "wholesaleCustomerFamilyId": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ZoneModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.PriceplanTopoff": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activationFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "bmAccountIdExclusiveAccess": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cancellationPeriodCsp": {
                    "format": "int32",
                    "type": "number"
                  },
                  "cancellationPeriodCustomer": {
                    "format": "int32",
                    "type": "number"
                  },
                  "currency": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "customerType": {
                    "$ref": "#/components/schemas/lib.BmCustomerType"
                  },
                  "defaultCommitment": {
                    "format": "int32",
                    "type": "number"
                  },
                  "includedHomezoneData": {
                    "format": "double",
                    "type": "number"
                  },
                  "includedHomezoneDataUnit": {
                    "$ref": "#/components/schemas/lib.UnitData"
                  },
                  "includedHomezoneMoSms": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedHomezoneMtSms": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestData": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestMsu": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestSms": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestVoice": {
                    "format": "int64",
                    "type": "number"
                  },
                  "monthlyFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "phoneChargeType": {
                    "$ref": "#/components/schemas/lib.BmPhoneChargeType"
                  },
                  "priceplanActivationStatus": {
                    "type": "string"
                  },
                  "priceplanExclusivity": {
                    "$ref": "#/components/schemas/lib.BmCustomerType"
                  },
                  "priceplanId": {
                    "format": "int32",
                    "type": "number"
                  },
                  "priceplanLifecycleStatus": {
                    "type": "string"
                  },
                  "priceplanName": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "priceplanVersion": {
                    "format": "int64",
                    "type": "number"
                  },
                  "smsChargeType": {
                    "$ref": "#/components/schemas/lib.BmSmsChargeType"
                  },
                  "subscriptionItemType": {
                    "type": "string"
                  },
                  "uuid": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "validFrom": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validTo": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "wholesaleCustomerFamilyId": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ZoneModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Process": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "completedItems": {
                    "format": "int32",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "domain": {
                    "type": "string"
                  },
                  "esbNumber": {
                    "description": "https://mavoco.atlassian.net/browse/MAV-4700\n",
                    "type": "string"
                  },
                  "interruptedDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "item": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "originId": {
                    "type": "string"
                  },
                  "processResult": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "totalItems": {
                    "format": "int32",
                    "type": "number"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "cmpObjectStagingAreas": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CmpObjectStagingArea"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ignoreStagingStatusEvents": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.IgnoreStagingStatusEvent"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Process"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "processesParent": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Process"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simStagingAreas": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimStagingArea"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "processQueues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ProcessQueue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Project": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "billingModeKey": {
                    "$ref": "#/components/schemas/lib.BillingMode"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalProjectNumber": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "company": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Company"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.PurchaseOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "actualShippingTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "completedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "customerComment": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "defaultSubscriptionStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionStatus"
                  },
                  "externalOrderNumber": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "freightCost": {
                    "format": "double",
                    "type": "number"
                  },
                  "isAccountDefaultSettingsUsedIndicator": {
                    "type": "boolean"
                  },
                  "issuerEmailAddress": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "modificationComment": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "orderNumber": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "orderRevision": {
                    "format": "int32",
                    "description": "Attribute is set by enterprise customer when making changes to an order which is not in draft status\n",
                    "type": "number",
                    "x-annotation-common.defaultValue": "1",
                    "x-annotation-common.notNull": true
                  },
                  "orderStatus": {
                    "$ref": "#/components/schemas/lib.OrderStatus"
                  },
                  "orderTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "orderVersion": {
                    "format": "int64",
                    "description": "value increases automatically when the order is modified\n",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "portalStatus": {
                    "$ref": "#/components/schemas/lib.PortalStatus"
                  },
                  "processStatus": {
                    "$ref": "#/components/schemas/lib.ProcessStatus"
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "number"
                  },
                  "requestedShippingDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "shippedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "shippingAgency": {
                    "$ref": "#/components/schemas/lib.ShippingAgency"
                  },
                  "shippingBmAddressReference": {
                    "maxLength": 200,
                    "description": "Reference to the BM-address template that was used when the account agent places the order in EP\n",
                    "type": "string"
                  },
                  "shippingCity": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "shippingComment": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "shippingPostcode": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "shippingStreet": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "submittedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "trackingNumber": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "acceptedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountApnGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountApnGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountRoamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountRoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountServiceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSimSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "country": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "purchaseOrderStagingArea": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PurchaseOrderStagingArea"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.PurchaseOrderStagingArea": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentStagingStatusMessage": {
                    "type": "string"
                  },
                  "externalProcessReference": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "processContext": {
                    "type": "string"
                  },
                  "processStatus": {
                    "$ref": "#/components/schemas/lib.ProcessStatus"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.PurchaseOrderSimStagingStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "purchaseOrder": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.PurchaseOrder"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.QosProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "hlrProfileReference": {
                    "type": "string"
                  },
                  "isDefaultQosProfileIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "maxRequestedBandwidthDl": {
                    "format": "int64",
                    "type": "number"
                  },
                  "maxRequestedBandwidthUl": {
                    "format": "int64",
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "qosProfileTypeKey": {
                    "$ref": "#/components/schemas/lib.QosProfileType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apns": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Apn"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterfaces": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkInterface"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RadiusFwdProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "radiusServerFqdn": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "radiusServerIpAddress": {
                    "type": "string"
                  },
                  "radiusServerPort": {
                    "format": "int32",
                    "type": "number"
                  },
                  "radiusServerPriority": {
                    "$ref": "#/components/schemas/lib.ServerPriority"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apn": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Apn"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RateCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isSplitBillingEnabled": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sortOrder": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "vsimProductVersionDefinitionId": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "parentRateCard": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RateCard"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "rateCardsParentRateCard": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RateCard"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ratingFilterAttributeValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RatingFilterAttributeValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceRateCardRoot": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceRateCardRoot"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usageRelatedPriceDefinitions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsageRelatedPriceDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RatingFilterAttributeValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "tratingFilterAttributeTypeKey": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "rateCard": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RateCard"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RatingGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "description": "A descriptive name for the rating group\n",
                    "type": "string"
                  },
                  "ratingGroupDescriptor": {
                    "description": "The identifier of the rating group as it provided by the network\n",
                    "type": "string"
                  },
                  "ratingGroupType": {
                    "$ref": "#/components/schemas/lib.RatingGroupType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "apnRatingGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ApnRatingGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Region": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "countrys": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Country"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RemoteStorage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "artifactType": {
                    "$ref": "#/components/schemas/lib.ArtifactType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "remoteStorageType": {
                    "$ref": "#/components/schemas/lib.RemoteStorageType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sftpPropertieses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SftpProperties"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Report": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "periodicity": {
                    "$ref": "#/components/schemas/lib.Periodicity"
                  },
                  "query": {
                    "description": "The SQL query generating the report\n",
                    "type": "string"
                  },
                  "reportQueryType": {
                    "$ref": "#/components/schemas/lib.ReportQueryType"
                  },
                  "reportTemplate": {
                    "$ref": "#/components/schemas/lib.FileData"
                  },
                  "reportType": {
                    "$ref": "#/components/schemas/lib.ReportType"
                  },
                  "shortcode": {
                    "maxLength": 1024,
                    "description": "Short form of the internal report name\n",
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ReportStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountReports": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountReport"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accounts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Account"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviderReports": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkProviderReport"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "reportGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ReportGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "reportParameters": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ReportParameter"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ReportGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.ReportStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountReports": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountReport"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "reports": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Report"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ReportParameter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dataTypeKey": {
                    "$ref": "#/components/schemas/lib.DataType"
                  },
                  "dataTypeParameter": {
                    "description": "If data_type is KEY or FUNCTION, this field describes which function or context/system parameter to use (e.g. $ORGUNITID)\n",
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mandatoryIndicator": {
                    "type": "boolean"
                  },
                  "name": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "parameterName": {
                    "description": "Contains the name of the parameter exactly as it is defined in the stored procedure\n",
                    "type": "string"
                  },
                  "visibleIndicator": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountReportParameterValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountReportParameterValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "report": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Report"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ResellerProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "billingStatusPropagationTypeKey": {
                    "$ref": "#/components/schemas/lib.BillingStatusPropagationType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "invoiceOutputFormat": {
                    "$ref": "#/components/schemas/lib.InvoiceOutputFormat"
                  },
                  "isCustomerInvoiceCreationEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "modificationTypeKey": {
                    "$ref": "#/components/schemas/lib.ResellerModificationType"
                  },
                  "resellerProfileType": {
                    "$ref": "#/components/schemas/lib.ResellerProfileType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountingGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountingGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingCycleDefinition": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingCycleDefinition"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customer": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Customer"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Customer"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RoOperatorservicename": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "operatorservicename": {
                    "type": "string"
                  },
                  "roServiceType": {
                    "$ref": "#/components/schemas/lib.RoServiceType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "serviceProfilesOcsiRoOperatorservicename": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfilesTcsiRoOperatorservicename": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RoamingProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "hlrProfileReference": {
                    "description": "The automatically generated HLR profile reference. This attribute will be used for core network communication if HLR-ROAMING-PROFILE-PROVISIONING-ATTRIBUTE is set to HLR-PROFILE-REFERENCE\n",
                    "type": "string"
                  },
                  "hlrProfileReferenceManual": {
                    "description": "The manually entered HLR Profile Reference.  This attribute relates to https://mavoco.atlassian.net/wiki/spaces/NACS/pages/1673756673/DP023+Roaming+Restrictions+as+an+Optional+Feature This attribute will be used for core network communication if HLR-ROAMING-PROFILE-PROVISIONING-ATTRIBUTE is set to HLR-PROFILE-REFERENCE-MANUAL\n",
                    "type": "string"
                  },
                  "hssProfileReference": {
                    "type": "string"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "description": "This attribute will be used for core network communication if HLR-ROAMING-PROFILE-PROVISIONING-ATTRIBUTE is set to NAME\n",
                    "type": "string"
                  },
                  "resourceStatus": {
                    "$ref": "#/components/schemas/lib.ResourceStatus"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "type": {
                    "$ref": "#/components/schemas/lib.RoamingProfileType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileRoamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileRoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "communicationProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CommunicationProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentRoamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfileDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfileDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfileVersions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfileVersion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfilesParentRoamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RoamingProfileDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activeRoamingProfileVersionId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "hlrProfileReference": {
                    "type": "string"
                  },
                  "hlrProfileReferenceManual": {
                    "type": "string"
                  },
                  "hssProfileReference": {
                    "type": "string"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "ownerAccountId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "parentRoamingProfileId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "resourceStatus": {
                    "$ref": "#/components/schemas/lib.ResourceStatus"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "type": {
                    "$ref": "#/components/schemas/lib.RoamingProfileType"
                  },
                  "uuid": {
                    "maxLength": 255,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RoamingProfileNetwork": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkRepository": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkRepository"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.RoamingProfileVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validityEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validityStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "versionLifecycleStatus": {
                    "$ref": "#/components/schemas/lib.VersionLifecycleStatus"
                  },
                  "versionNumber": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "predecessorRoamingProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfileNetworks": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfileNetwork"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfileVersionsPredecessorRoamingProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfileVersion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RoamingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SecurityProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "securityProfileApplicability": {
                    "$ref": "#/components/schemas/lib.SecurityProfileApplicability"
                  },
                  "securityProfileType": {
                    "$ref": "#/components/schemas/lib.SecurityProfileType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSecurityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileSecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiSecurityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiSecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfileVersions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SecurityProfileVersion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SecurityProfileVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "noImeiServiceStatus": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "securityProfileType": {
                    "$ref": "#/components/schemas/lib.SecurityProfileType"
                  },
                  "validityEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validityStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "versionLifecycleStatus": {
                    "$ref": "#/components/schemas/lib.VersionLifecycleStatus"
                  },
                  "versionNumber": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accessListDataImeiLocks": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessListDataImeiLock"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accessListSmses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessListSms"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accessListVoices": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccessListVoice"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "predecessorSecurityProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SecurityProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfileVersionsPredecessorSecurityProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SecurityProfileVersion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "securityProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SecurityProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ServiceProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bearer2g": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "bearer3g": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "bearer4g": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "bearer5g": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "bearerLora": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "bearerLteM": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "bearerNbIot": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "bearerSigfox": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "csdBearerService20": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "csdBearerService30": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "csdMo": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "csdMt": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "data": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "dataRoaming": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "description": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "hlrProfileReference": {
                    "maxLength": 100,
                    "description": "Identifier of the Service Profile in the HLR\n",
                    "type": "string"
                  },
                  "isDefaultSuspendProfileIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "nbIot": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ocsi": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType2gGeran": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType2gGsm": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType3gUtran": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType4gEutran": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType4gHoNon3gpp": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType4gIhspa": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType4gLteM": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType4gNbIot": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType4gWbEUtran": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType5gNrSa": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ratType5gNrSecondary": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "smsMo": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "smsMoBlockInternationalExceptHomeCountry": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "smsMt": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "smsRoaming": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "tcsi": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "ussd": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceBarPremium": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceBoicexhc": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceCallWaiting": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceCallback": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceCallbackIsdn": {
                    "type": "string"
                  },
                  "voiceCfb": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceCfbIsdn": {
                    "type": "string"
                  },
                  "voiceCfnrc": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceCfnrcIsdn": {
                    "type": "string"
                  },
                  "voiceCfnry": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceCfnryIsdn": {
                    "type": "string"
                  },
                  "voiceCfu": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceCfuIsdn": {
                    "type": "string"
                  },
                  "voiceClip": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceClir": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceColp": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceColr": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceData": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceEntertainment": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceFwd": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceHold": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceInformation": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceInternationalMo": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceMo": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceMt": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceMultiparty": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceOdbic": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceOdbsci": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceOdbssm": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voicePad": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceRoaming": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceRoamingMt": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceServiceProvisioned": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceSupplementary": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  },
                  "voiceUnresData": {
                    "$ref": "#/components/schemas/lib.ServiceStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingProfileServiceProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileServiceProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "communicationProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CommunicationProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsis": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterfaces": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.NetworkInterface"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ocsiRoOperatorservicename": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoOperatorservicename"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simBillingStatusNetworkSettingses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimBillingStatusNetworkSettings"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tcsiRoOperatorservicename": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoOperatorservicename"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ServiceRateCardRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "tserviceTypeKey": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "rateCards": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.RateCard"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItemVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "topLevelPriceDefinitions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TopLevelPriceDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SftpProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "authenticationString": {
                    "description": "The password, private-key or api-key\n",
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "homePath": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  },
                  "isProxyUsedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "numberOfRetries": {
                    "format": "int32",
                    "type": "number"
                  },
                  "port": {
                    "format": "int32",
                    "type": "number"
                  },
                  "proxyHost": {
                    "type": "string"
                  },
                  "proxyPort": {
                    "format": "int32",
                    "type": "number"
                  },
                  "proxyType": {
                    "$ref": "#/components/schemas/lib.ProxyType"
                  },
                  "sftpAuthenticationType": {
                    "$ref": "#/components/schemas/lib.SftpAuthenticationType"
                  },
                  "username": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "remoteStorage": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RemoteStorage"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Sgsn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "sgsnIpAddressRange": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkRepository": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkRepository"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SicCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "divisionKey": {
                    "type": "string"
                  },
                  "industryGroupKey": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "majorGroupKey": {
                    "type": "string"
                  },
                  "sicCode": {
                    "maxLength": 8,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "customers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Customer"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Sim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountAssignmentTimestamp": {
                    "description": "This attribute is computed by tf_sim_b_u\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "activationGraceCommitmentEndDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "activePriceplanId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "adminKey": {
                    "type": "string"
                  },
                  "baseSimBillingStatus": {
                    "$ref": "#/components/schemas/lib.SimBillingStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentSubscriptionBillingStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionStatus"
                  },
                  "esimProfileStatusKey": {
                    "$ref": "#/components/schemas/lib.EsimProfileStatus"
                  },
                  "esimProfileStatusSimpleKey": {
                    "$ref": "#/components/schemas/lib.EsimProfileStatusSimple"
                  },
                  "firstUsageTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "graceCommitmentPenaltyChargeDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "hlrAuthenticationKey": {
                    "type": "string"
                  },
                  "initialBillingActivationTimestamp": {
                    "description": "This attribute is computed by tf_sim_b_u\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "isBillableIndicator": {
                    "description": "Indicates whether the SIM Card is billable (SIM card and related cost appears on the invoice). This flag is set to TRUE when the SIM is assigned to the account and can only be changed manually; there is no dependency between this flag and the SIM's billing status.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isCommitmentBillableIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isEsimBootstrapProfileIndicator": {
                    "type": "boolean"
                  },
                  "isMultiimsiEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false"
                  },
                  "lastManualSuspendTimestamp": {
                    "description": "Tracks the timestamp of the MANUAL suspension of a SIM card. This relates to cmp_config.SIM-SUSPENSION-LOCK-PERIOD\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lockedImei": {
                    "maxLength": 16,
                    "description": "The IMEI that is 'paired' with the SIM Card.\n",
                    "type": "string"
                  },
                  "lockedImeiUpdateTimestamp": {
                    "description": "The point in time when the locked IMEI was changed.  This attribute is automatically set via a database trigger.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "matCommitmentEndDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mdmCommitmentEndDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "newPriceplanActivationTimestamp": {
                    "description": "The point in time when the new_priceplan_id shall become active.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "newPriceplanId": {
                    "format": "int64",
                    "description": "The identifier of the priceplan that will be activated at the next billing cycle.\n",
                    "type": "number"
                  },
                  "opcKey": {
                    "type": "string"
                  },
                  "pin1": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "pin2": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "previousSimBillingStatus": {
                    "$ref": "#/components/schemas/lib.SimBillingStatus"
                  },
                  "priceplanActivationTimestamp": {
                    "description": "The point in time on which the current priceplan (active_priceplan_id) came into effect. This attribute must be set via API.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "processingStatus": {
                    "$ref": "#/components/schemas/lib.ProcessingStatus"
                  },
                  "puk1": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "puk2": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "sfEuimidDec": {
                    "type": "string"
                  },
                  "simBillingStatus": {
                    "$ref": "#/components/schemas/lib.SimBillingStatus"
                  },
                  "simBillingStatusUpdateTimestamp": {
                    "description": "The point in time on which the SIM card changes its billing status.  This attribute is automatically set via a database trigger.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "simIdentifier": {
                    "maxLength": 32,
                    "description": "The hardware identifier for UICC: see https://en.wikipedia.org/wiki/Subscriber_identity_module#ICCID for eSIM: see https://www.gsma.com/iot/wp-content/uploads/2016/07/SGP.02_v3.1.pdf (2.2.2 Identification of eUICC: EID) for multi-SIM: see xxx\n",
                    "type": "string"
                  },
                  "simProfileType": {
                    "$ref": "#/components/schemas/lib.SimProfileType"
                  },
                  "simStatus": {
                    "$ref": "#/components/schemas/lib.SimStatus"
                  },
                  "subordinateObjectsCount": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "batchFile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileLogisticStatus": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileLogisticStatus"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsi": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Imsi"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsisActiveOnSim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsisAssignedToSim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Imsi"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "offerType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OfferType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "parentSim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "process": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Process"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "purchaseOrder": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.PurchaseOrder"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "purchaseOrderStagingArea": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PurchaseOrderStagingArea"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simLives": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimLive"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simRegistrationCodes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimRegistrationCode"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simStagingAreas": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimStagingArea"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSubscriptions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSubscription"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simsParentSim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimAddon": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "format": "int64",
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "vkBase": {
                    "format": "double",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimBatchFileCaImport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "customAttributeTypeKey": {
                    "type": "string"
                  },
                  "customAttributeValue": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "simIdentifier": {
                    "maxLength": 32,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "batchFileItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BatchFileItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimBillingStatusNetworkSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "simBillingStatus": {
                    "$ref": "#/components/schemas/lib.SimBillingStatus"
                  },
                  "simStatus": {
                    "$ref": "#/components/schemas/lib.SimStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimCommitment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "minimumActivationTerm": {
                    "format": "int32",
                    "type": "number"
                  },
                  "simActivationGracePeriod": {
                    "format": "int32",
                    "type": "number"
                  },
                  "simMinimumRevenue": {
                    "format": "double",
                    "type": "number"
                  },
                  "simMinimumRevenueTerm": {
                    "format": "int32",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "contract": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Contract"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimLive": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bcEndTimestampData": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "bcEndTimestampSms": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "bcEndTimestampVoice": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentDataSessionStatus": {
                    "$ref": "#/components/schemas/lib.DataSessionStatus"
                  },
                  "currentDataSessionStatusUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentImei": {
                    "maxLength": 16,
                    "type": "string"
                  },
                  "currentImeiUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentIpAddress": {
                    "type": "string"
                  },
                  "currentRatType": {
                    "type": "string"
                  },
                  "currentRatTypeUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dataLastActivityTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dataLastCountryTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dataSessionApnName": {
                    "type": "string"
                  },
                  "dataSessionBlockingReasonDetails": {
                    "type": "string"
                  },
                  "dataSessionBlockingReasonTypeKey": {
                    "$ref": "#/components/schemas/lib.DataSessionBlockingReasonType"
                  },
                  "dataSessionCountCdt": {
                    "format": "int64",
                    "type": "number"
                  },
                  "dataSessionCountDaily": {
                    "format": "int64",
                    "type": "number"
                  },
                  "dataSessionEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dataSessionIdentifier": {
                    "type": "string"
                  },
                  "dataSessionMcc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "dataSessionMnc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "dataSessionStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "dataSessionZoneId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "dataUsageCdt": {
                    "format": "int64",
                    "type": "number"
                  },
                  "dataUsageDaily": {
                    "format": "int64",
                    "type": "number"
                  },
                  "firstUsageDataTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "firstUsageSmsMoTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "firstUsageSmsMtTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "firstUsageVoiceMoTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "firstUsageVoiceMtTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "ggsnIpAddress": {
                    "type": "string"
                  },
                  "lastCountryAlpha2Code": {
                    "maxLength": 2,
                    "type": "string"
                  },
                  "lastCountryTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "previousImei": {
                    "maxLength": 16,
                    "type": "string"
                  },
                  "previousRatType": {
                    "type": "string"
                  },
                  "sgsnIpAddress": {
                    "type": "string"
                  },
                  "smsMoCalledPartyMsisdn": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "smsMoLastActivityTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "smsMoLastCountryTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "smsMoSessionIdentifier": {
                    "type": "string"
                  },
                  "smsMoSessionMcc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "smsMoSessionMnc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "smsMoSessionZoneId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "smsMoUsageCdt": {
                    "format": "int64",
                    "type": "number"
                  },
                  "smsMtCallingPartyMsisdn": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "smsMtLastActivityTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "smsMtLastCountryTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "smsMtSessionIdentifier": {
                    "type": "string"
                  },
                  "smsMtSessionMcc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "smsMtSessionMnc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "smsMtSessionZoneId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "smsMtUsageCdt": {
                    "format": "int64",
                    "type": "number"
                  },
                  "userLocationInfo": {
                    "type": "string"
                  },
                  "voiceMoCalledPartyMsisdn": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "voiceMoLastActivityTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "voiceMoLastCountryTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "voiceMoSessionEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "voiceMoSessionIdentifier": {
                    "type": "string"
                  },
                  "voiceMoSessionMcc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "voiceMoSessionMnc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "voiceMoSessionStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "voiceMoSessionZoneId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "voiceMoUsageCdt": {
                    "format": "int64",
                    "type": "number"
                  },
                  "voiceMtCallingPartyMsisdn": {
                    "maxLength": 15,
                    "type": "string"
                  },
                  "voiceMtLastActivityTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "voiceMtLastCountryTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "voiceMtSessionEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "voiceMtSessionIdentifier": {
                    "type": "string"
                  },
                  "voiceMtSessionMcc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "voiceMtSessionMnc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "voiceMtSessionStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "voiceMtSessionZoneId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "voiceMtUsageCdt": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "dataLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "dataUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Unit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "smsMoLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "smsMtLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "smsUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Unit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "voiceMoLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "voiceMtLastCountryAlpha2Code": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "voiceUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Unit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimPool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "providerReference": {
                    "type": "string"
                  },
                  "simVendorReference": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "batchFiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BatchFile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "automaticImsiAssignmentIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true",
                    "x-annotation-common.notNull": true
                  },
                  "automaticMsisdnAssignmentIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true",
                    "x-annotation-common.notNull": true
                  },
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "esimProfileCapability": {
                    "$ref": "#/components/schemas/lib.EsimProfileCapability"
                  },
                  "esimTypeKey": {
                    "$ref": "#/components/schemas/lib.EsimType"
                  },
                  "initialSimBillingStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionStatusInitial"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "simDataRetentionTime": {
                    "$ref": "#/components/schemas/lib.SimDataRetentionTime"
                  },
                  "simFormFactor": {
                    "$ref": "#/components/schemas/lib.SimFormFactor"
                  },
                  "simMinimumUpdates": {
                    "$ref": "#/components/schemas/lib.SimMinimumUpdates"
                  },
                  "simProductSimsInOperatorInventoryRatio": {
                    "format": "double",
                    "type": "number"
                  },
                  "simSupplierPartNumber": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "simTemperatureRange": {
                    "$ref": "#/components/schemas/lib.SimTemperatureRange"
                  },
                  "simType": {
                    "$ref": "#/components/schemas/lib.SimType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSimSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "branding": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Branding"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "esimNetworkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.EsimNetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProvider": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProvider"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simPools": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimPool"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simVendor": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimVendor"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sims": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Sim"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimRegistrationCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isUsedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "registrationCode": {
                    "type": "string"
                  },
                  "usageTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimSalesProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currencyKey": {
                    "$ref": "#/components/schemas/lib.Currency"
                  },
                  "description": {
                    "type": "string"
                  },
                  "detailId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "feeOneOff": {
                    "format": "double",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lifecycleStatus": {
                    "$ref": "#/components/schemas/lib.BmLifecycleStatus"
                  },
                  "name": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "partNumber": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "uuid": {
                    "maxLength": 64,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSimSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountSimSalesProductDetail"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSimSalesProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProductDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimSalesProductDetail"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimSalesProductDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "accountPrice": {
                    "format": "double",
                    "type": "number"
                  },
                  "assignedToBillingProfileId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "branding": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "customFeeOneOff": {
                    "format": "double",
                    "type": "number"
                  },
                  "dataRetention": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "displayKey": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "formFactor": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "initialSimBillingStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionStatusInitial"
                  },
                  "invoiceCurrency": {
                    "maxLength": 4,
                    "type": "string"
                  },
                  "manufacturer": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "minimumUpdates": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "mysqlId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "mysqlStatus": {
                    "type": "string"
                  },
                  "name": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "partNumber": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "poCount": {
                    "format": "int64",
                    "type": "number"
                  },
                  "providerKey": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "simType": {
                    "$ref": "#/components/schemas/lib.SimType"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "supplierKey": {
                    "maxLength": 8,
                    "type": "string"
                  },
                  "supplierPartNumber": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "temperatureRange": {
                    "maxLength": 64,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSimSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfileSimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "esimNetworkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.EsimNetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSalesProduct": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimSalesProduct"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimStagingArea": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentStagingStatusMessage": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "processContext": {
                    "type": "string"
                  },
                  "processStatus": {
                    "$ref": "#/components/schemas/lib.ProcessStatus"
                  },
                  "processType": {
                    "$ref": "#/components/schemas/lib.ProcessType"
                  },
                  "simStagingStatusTypeKey": {
                    "$ref": "#/components/schemas/lib.SimStagingStatusType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "process": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Process"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimSubscription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isPrimarySubscriptionIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "simUuid": {
                    "type": "string"
                  },
                  "simSuspendReason": {
                    "$ref": "#/components/schemas/lib.SimSuspendReason"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionHistories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionHistory"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sim": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Sim"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscription": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Subscription"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimVendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 200,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "simProducts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimProduct"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SimasCredentials": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "imsi": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Imsi"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.StaticIpAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "ipAddress": {
                    "description": "This value is computed by after insert trigger on apn_ip_pool\n",
                    "type": "string"
                  },
                  "isUsedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "imsiPdpContexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiPdpContext"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "ipAddressPool": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.IpAddressPool"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.StmChangeRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "conditionCounter": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "changeRuleConditions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.StmChangeRuleCondition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "sourceSubscriptionItemType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.StmSubscriptionItemType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "targetSubscriptionItemType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.StmSubscriptionItemType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.StmChangeRuleCondition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "changeRuleSchedule": {
                    "$ref": "#/components/schemas/lib.ChangeRuleSchedule"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isActiveIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isInitialSubscriptionIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "priority": {
                    "format": "int32",
                    "description": "The smaller the number, the higher the priority\n",
                    "type": "number"
                  },
                  "processExecution": {
                    "$ref": "#/components/schemas/lib.ProcessExecution"
                  },
                  "processTrigger": {
                    "$ref": "#/components/schemas/lib.ProcessTrigger"
                  },
                  "simBillingStatus": {
                    "$ref": "#/components/schemas/lib.SimBillingStatus"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "changeRule": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.StmChangeRule"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.StmSubscriptionItemType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "categoryId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "internalProductKey": {
                    "type": "string"
                  },
                  "isCustomerSitIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isDependentIndicator": {
                    "description": "Defines whether the subscription item type has a dependency to other subscription item types (e.g. addon with percentage based price, ...)\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isDynamicPricingEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isLegacyIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isLicensedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isPoolIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isPrepaidIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isResellableIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isSharedIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isTopoffIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isVsimEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "subscriptionItemBaseType": {
                    "$ref": "#/components/schemas/lib.SubscriptionItemBaseType"
                  },
                  "subscriptionItemPoolType": {
                    "$ref": "#/components/schemas/lib.SubscriptionItemPoolType"
                  },
                  "subscriptionItemTypeDomain": {
                    "$ref": "#/components/schemas/lib.SubscriptionItemTypeDomain"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "changeRulesSourceSubscriptionItemType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.StmChangeRule"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "changeRulesTargetSubscriptionItemType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.StmChangeRule"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customerSubscriptionItemTypes": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CustomerSubscriptionItemType"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Subscription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "autorenewsCurrentBc": {
                    "format": "int64",
                    "type": "number"
                  },
                  "billingStartDate": {
                    "description": "Date on which the service becomes billable. Attribute is required if the sim_subscription_status is other than 'ASSIGNED'.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "chargeType": {
                    "$ref": "#/components/schemas/lib.ChargeType"
                  },
                  "comments": {
                    "type": "string"
                  },
                  "commitment": {
                    "format": "int32",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "customerText": {
                    "maxLength": 32,
                    "type": "string"
                  },
                  "invoiceBillingInformation": {
                    "type": "string"
                  },
                  "isCurrentSubscriptionIndicator": {
                    "description": "In case of subscription chaining, this attribute defines whether the subscription is the active subscription. There can be only one active (current) subscription within a subscription chain.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isInitialSubscriptionIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isPrepaidIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "retireExtendedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "retireTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "serviceAssignmentTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "serviceStartDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "subscriptionItemBaseType": {
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "type": "string"
                  },
                  "subscriptionResumeTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "subscriptionStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionStatus"
                  },
                  "subscriptionSuspendTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "subscriptionTerminationDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "subscriptionType": {
                    "$ref": "#/components/schemas/lib.SubscriptionType"
                  },
                  "uuid": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "baseAccountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "chargeses": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Charges"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionHistories": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionHistory"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSubscriptions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimSubscription"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionChains": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionChain"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionSupplements": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionSupplement"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "terminationReasonType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TerminationReasonType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionChain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isAutorenewEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true",
                    "x-annotation-common.notNull": true
                  },
                  "isCurrentIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "true"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validityEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validityStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "cpredecessorSubscriptionChain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionChain"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscription": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Subscription"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionChainsCPredecessorSubscriptionChain": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionChain"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currencyKey": {
                    "$ref": "#/components/schemas/lib.Currency"
                  },
                  "description": {
                    "type": "string"
                  },
                  "detailId": {
                    "format": "int64",
                    "description": "The reference to the respective object in mySQL\n",
                    "type": "number"
                  },
                  "externalReference": {
                    "type": "string"
                  },
                  "isLegacySubscriptionItemIndicator": {
                    "type": "boolean"
                  },
                  "isPrepaidOverageEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isTieringEnabledIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isUsageLimitConfiguredIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "legacySubscriptionItemType": {
                    "$ref": "#/components/schemas/lib.LegacySubscriptionItemType"
                  },
                  "name": {
                    "description": "The name of the subscription item (eg. priceplan name)\n",
                    "type": "string"
                  },
                  "periodFee": {
                    "minimum": 0,
                    "maximum": 99999,
                    "multipleOf": 0.01,
                    "type": "number"
                  },
                  "poolType": {
                    "$ref": "#/components/schemas/lib.PoolType"
                  },
                  "prepaidValidity": {
                    "format": "int32",
                    "type": "number"
                  },
                  "prepaidBaseValidity": {
                    "type": "string"
                  },
                  "roamingProfileContext": {
                    "$ref": "#/components/schemas/lib.RoamingProfileContext"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "subscriptionItemBaseType": {
                    "type": "string"
                  },
                  "subscriptionItemStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionItemStatus"
                  },
                  "subscriptionItemUuid": {
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "$ref": "#/components/schemas/lib.SubscriptionItemType"
                  },
                  "tsourceTypeKey": {
                    "type": "string",
                    "x-annotation-common.defaultValue": "ACCOUNT",
                    "x-annotation-common.notNull": true
                  },
                  "version": {
                    "format": "int32",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountAddon": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountAddon"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "addonTopoff": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AddonTopoff"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfileSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfileSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "customerSubscriptionItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.CustomerSubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "imsiMsubNetworkPriceplans": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ImsiMsubNetworkPriceplan"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkInterface": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkInterface"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "originSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "predecessorSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "priceplan": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Priceplan"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "priceplanMsubNetworkpricelistSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "priceplanTopoff": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.PriceplanTopoff"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "resellerProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ResellerProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "roamingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RoamingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simAddon": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimAddon"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemDetail": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItemDetail"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemDetailCatalogs": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItemDetailCatalog"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemDetailZonePriceplans": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItemDetailZonePriceplan"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.StmSubscriptionItemType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemVersions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItemVersion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemsOriginSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemsPredecessorSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemsPriceplanMsubNetworkpricelistSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tsourceType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionItemDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "customerType": {
                    "type": "string"
                  },
                  "detailId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "status": {
                    "type": "string"
                  },
                  "subscriptionItemName": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "type": "string"
                  },
                  "uuid": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionItemDetailCatalog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "chargeFlavor": {
                    "$ref": "#/components/schemas/lib.BmChargeFlavor"
                  },
                  "chargeType": {
                    "$ref": "#/components/schemas/lib.BmChargeType"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currencyKey": {
                    "$ref": "#/components/schemas/lib.Currency"
                  },
                  "description": {
                    "type": "string"
                  },
                  "detail": {
                    "type": "string"
                  },
                  "detailId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "feeOneOff": {
                    "format": "double",
                    "type": "number"
                  },
                  "feePercentage": {
                    "format": "double",
                    "type": "number"
                  },
                  "feeRecurring": {
                    "format": "double",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lifecycleStatus": {
                    "$ref": "#/components/schemas/lib.BmLifecycleStatus"
                  },
                  "name": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "simType": {
                    "$ref": "#/components/schemas/lib.BmSimType"
                  },
                  "subscriptionItemBaseType": {
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "type": "string"
                  },
                  "subscriptionItemTypeDomain": {
                    "type": "string"
                  },
                  "version": {
                    "format": "int32",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionItemDetailZonePriceplan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activationFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "activationFeePool": {
                    "format": "double",
                    "type": "number"
                  },
                  "activationStatus": {
                    "type": "boolean"
                  },
                  "bmAccountNumber": {
                    "format": "int64",
                    "type": "number"
                  },
                  "bmType": {
                    "$ref": "#/components/schemas/lib.BmType"
                  },
                  "bmWholesaleCustomerFamilyId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cancellationPeriodCsp": {
                    "format": "int32",
                    "type": "number"
                  },
                  "cancellationPeriodCustomer": {
                    "format": "int32",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currencyKey": {
                    "$ref": "#/components/schemas/lib.Currency"
                  },
                  "customerType": {
                    "$ref": "#/components/schemas/lib.BmCustomerType"
                  },
                  "defaultCommitment": {
                    "format": "int32",
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "destinationZoneModelId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "detail": {
                    "type": "string"
                  },
                  "detailId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "inTestingTimeLimit": {
                    "format": "int32",
                    "type": "number"
                  },
                  "includedMonthlyDataHomezone": {
                    "format": "double",
                    "type": "number"
                  },
                  "includedMonthlyDataHomezoneUnit": {
                    "$ref": "#/components/schemas/lib.UnitData"
                  },
                  "includedMonthlyMoSmsHomezone": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedMonthlyMoVoiceHomezone": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedMonthlyMoVoiceHomezoneUnit": {
                    "$ref": "#/components/schemas/lib.UnitVoice"
                  },
                  "includedMonthlyMtSmsHomezone": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedMonthlyMtVoiceHomezone": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedMonthlyMtVoiceHomezoneUnit": {
                    "$ref": "#/components/schemas/lib.UnitVoice"
                  },
                  "includedTestQuotaData": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestQuotaSms": {
                    "format": "int64",
                    "type": "number"
                  },
                  "includedTestQuotaVoice": {
                    "format": "int64",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lifecycleStatus": {
                    "$ref": "#/components/schemas/lib.BmLifecycleStatus"
                  },
                  "locationZoneModelId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "monthlyFeeInBilling": {
                    "format": "double",
                    "type": "number"
                  },
                  "monthlyFeePoolInBilling": {
                    "format": "double",
                    "type": "number"
                  },
                  "monthlyFeeSuspended": {
                    "format": "double",
                    "type": "number"
                  },
                  "name": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "phoneChargeType": {
                    "$ref": "#/components/schemas/lib.BmPhoneChargeType"
                  },
                  "prepaidPriceplanValidity": {
                    "format": "int32",
                    "type": "number"
                  },
                  "prepaidPriceplanValidityUnit": {
                    "$ref": "#/components/schemas/lib.BmPrepaidPriceplanValidityUnit"
                  },
                  "prepaidSimValidity": {
                    "format": "int32",
                    "type": "number"
                  },
                  "prepaidSimValidityUnit": {
                    "$ref": "#/components/schemas/lib.BmPrepaidSimValidityUnit"
                  },
                  "prepaidSupplementalLevel": {
                    "$ref": "#/components/schemas/lib.PrepaidSupplementalLevel"
                  },
                  "prepaidType": {
                    "$ref": "#/components/schemas/lib.BmPrepaidType"
                  },
                  "priceplanPeriodFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "qosProfileCategory": {
                    "$ref": "#/components/schemas/lib.QosProfileCategory"
                  },
                  "ratingType": {
                    "$ref": "#/components/schemas/lib.BmRatingType"
                  },
                  "roamingProfileFlavor": {
                    "$ref": "#/components/schemas/lib.BmRoamingProfileFlavor"
                  },
                  "smsChargeType": {
                    "$ref": "#/components/schemas/lib.BmSmsChargeType"
                  },
                  "startInTestingTimeLimitOnFirstUsageIndicator": {
                    "type": "boolean"
                  },
                  "subscriptionItemBaseType": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "subscriptionItemName": {
                    "type": "string"
                  },
                  "subscriptionItemType": {
                    "type": "string"
                  },
                  "subscriptionPeriodFee": {
                    "format": "double",
                    "type": "number"
                  },
                  "uuid": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "validFrom": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validTo": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "version": {
                    "format": "int32",
                    "type": "number"
                  },
                  "versionNumber": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "1",
                    "x-annotation-common.notNull": true
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "offerType": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OfferType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "qosProfileId": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.QosProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "offerTypeId": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.OfferType"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionItemVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "specificTimezone": {
                    "type": "string",
                    "x-annotation-common.defaultValue": "UTC",
                    "x-annotation-common.notNull": true
                  },
                  "timezoneMapping": {
                    "$ref": "#/components/schemas/lib.TimezoneMapping"
                  },
                  "validationStatus": {
                    "$ref": "#/components/schemas/lib.ValidationStatus"
                  },
                  "validityEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validityStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "versionLifecycleStatus": {
                    "$ref": "#/components/schemas/lib.VersionLifecycleStatus"
                  },
                  "versionModificationEntity": {
                    "type": "string"
                  },
                  "versionModificationEntityReference": {
                    "format": "int64",
                    "description": "The primary key of the modified record that triggered c_version_modification_timestamp\n",
                    "type": "number"
                  },
                  "versionModificationTimestamp": {
                    "description": "The timestamp when any attribute related to the subscription item version was modified (this includes related entities). This is set from DB-triggers\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "versionNumber": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "originSubscriptionItemVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItemVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceRateCardRoots": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ServiceRateCardRoot"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemVersionAttributeValues": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItemVersionAttributeValue"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemVersionTierModels": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItemVersionTierModel"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemVersionsOriginSubscriptionItemVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItemVersion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "topLevelPriceDefinitions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TopLevelPriceDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionItemVersionAttributeValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "tsubscriptionItemAttributeTypeKey": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItemVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItemVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionItemVersionTierModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItemVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItemVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tierModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TierModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "topLevelPriceDefinitions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TopLevelPriceDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usageRelatedPriceDefinitions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsageRelatedPriceDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionSupplement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscription": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Subscription"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TadigCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "tadigCode": {
                    "maxLength": 5,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkRepository": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkRepository"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TaxItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "isDefaultTaxIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "taxValue": {
                    "format": "double",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "chargeTypeTaxItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ChargeTypeTaxItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "taxProfileVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TaxProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TaxProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "isLegacyTaxProfileIndicator": {
                    "description": "Marks the dummy tax profile that is used for companies that were created before db model 5.5.5. This tax profile has no tax items and shall not be used for new companies.\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountingGroups": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.AccountingGroup"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "chargeTypeTaxItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ChargeTypeTaxItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "companies": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Company"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "taxProfileVersions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TaxProfileVersion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TaxProfileVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "activationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validityEndTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validityStartTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "versionLifecycleStatus": {
                    "$ref": "#/components/schemas/lib.VersionLifecycleStatus"
                  },
                  "versionNumber": {
                    "format": "int32",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "predecessorTaxProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TaxProfileVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "taxItems": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TaxItem"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "taxProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TaxProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "taxProfileVersionsPredecessorTaxProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TaxProfileVersion"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Tenant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "tenantKey": {
                    "type": "string"
                  },
                  "tenantType": {
                    "$ref": "#/components/schemas/lib.TenantType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingCycleDefinitions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingCycleDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "contexts": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Context"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TerminationReasonType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Subscription"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Tier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lowerThreshold": {
                    "format": "int32",
                    "description": "The lower threshold value is inclusive (greater or equal to)\n",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "name": {
                    "type": "string"
                  },
                  "upperThreshold": {
                    "format": "int32",
                    "description": "The lower threshold value is exclusive (less than)\n",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tierModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TierModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "topLevelPrices": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TopLevelPrice"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usageRelatedPrices": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsageRelatedPrice"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TierModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "ttieringAttributeTypeKey": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionItemVersionTierModels": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SubscriptionItemVersionTierModel"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "tiers": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Tier"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Timeslice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endTime": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sourceTimesliceId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "startTime": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "timesliceModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TimesliceModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TimesliceModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "isDefaultTimesliceModelIndicator": {
                    "description": "If true, the timeslice model is used by all accounts that do not have a dedicated timeslice model assigned\n",
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sourceTimesliceModelId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "timesliceModelType": {
                    "$ref": "#/components/schemas/lib.TimesliceModelType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfiles": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.BillingProfile"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "timeslices": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Timeslice"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TopLevelPrice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "price": {
                    "format": "double",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tier": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Tier"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "topLevelPriceDefinition": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.TopLevelPriceDefinition"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.TopLevelPriceDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "chargeLevel": {
                    "$ref": "#/components/schemas/lib.ChargeLevel"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "pricepoint": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "serviceRateCardRoot": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ServiceRateCardRoot"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemVersion": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItemVersion"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemVersionTierModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItemVersionTierModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "topLevelPrices": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TopLevelPrice"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "unit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Unit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Unit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "abbreviation": {
                    "type": "string"
                  },
                  "baseUnitId": {
                    "format": "int64",
                    "description": "CMP uses the base unit for computations. All units are being converted into the base unit internally.\n",
                    "type": "number"
                  },
                  "conversionFactor": {
                    "format": "double",
                    "description": "Conversion factor for converting the unit into the base unit\n",
                    "type": "number"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isBaseUnitIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "simLivesDataUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimLive"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simLivesSmsUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimLive"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simLivesVoiceUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.SimLive"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "topLevelPriceDefinitions": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.TopLevelPriceDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usageRelatedPriceDefinitionsIncludedQuotaUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsageRelatedPriceDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usageRelatedPriceDefinitionsUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsageRelatedPriceDefinition"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.UsageRelatedPrice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "price": {
                    "format": "double",
                    "type": "number"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tier": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Tier"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usageRelatedPriceDefinition": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.UsageRelatedPriceDefinition"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.UsageRelatedPriceDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "includedQuotaAmount": {
                    "format": "double",
                    "type": "number",
                    "x-annotation-common.defaultValue": "0",
                    "x-annotation-common.notNull": true
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "overusageActionType": {
                    "$ref": "#/components/schemas/lib.OverusageActionType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "includedQuotaUnit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Unit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "pricepoint": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "rateCard": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.RateCard"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscriptionItemVersionTierModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SubscriptionItemVersionTierModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "unit": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Unit"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "usageRelatedPrices": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.UsageRelatedPrice"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.UserReport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "executionCompletedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "optionalJoinStmt": {
                    "type": "string"
                  },
                  "outputFilePath": {
                    "type": "string"
                  },
                  "reportDeliveryEmail": {
                    "type": "string"
                  },
                  "requestTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "requestType": {
                    "$ref": "#/components/schemas/lib.UserReportRequestType"
                  },
                  "selectStmt": {
                    "type": "string"
                  },
                  "whereStmt": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountReport": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountReport"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountReportResult": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountReportResult"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "casuser": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Casuser"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviderReport": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProviderReport"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "networkProviderReportResult": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkProviderReportResult"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.Zone": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalZoneReference": {
                    "type": "string"
                  },
                  "isHomezoneIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false",
                    "x-annotation-common.notNull": true
                  },
                  "isRestofworldIndicator": {
                    "type": "boolean",
                    "x-annotation-common.defaultValue": "false"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 4000,
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "zoneCountries": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ZoneCountry"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ZoneModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneNetworks": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ZoneNetwork"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ZoneCountry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "country": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zone": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Zone"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ZoneModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ZoneModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  },
                  "zoneModelTypeKey": {
                    "$ref": "#/components/schemas/lib.ZoneModelType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "priceplan": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Priceplan"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "priceplanTopoff": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.PriceplanTopoff"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneCountries": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ZoneCountry"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneNetworks": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.ZoneNetwork"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zones": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToMany"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Zone"
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/lib.Resource"
                                }
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ZoneNetwork": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "bmSyncStatus": {
                    "$ref": "#/components/schemas/lib.BmSyncStatus"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastSyncTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "networkRepository": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.NetworkRepository"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zone": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Zone"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "zoneModel": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.ZoneModel"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.BillingProfileHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "externalCostCenter": {
                    "format": "int64",
                    "type": "number"
                  },
                  "generateInvoiceWithoutVatIndicator": {
                    "type": "boolean"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "mrcChargeType": {
                    "$ref": "#/components/schemas/lib.MrcChargeType"
                  },
                  "nonStandardVatRate": {
                    "format": "double",
                    "type": "number"
                  },
                  "ratingType": {
                    "$ref": "#/components/schemas/lib.RatingType"
                  },
                  "usageLimitOverride": {
                    "$ref": "#/components/schemas/lib.UsageLimitOverride"
                  },
                  "validFromTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validToTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "accountingGroup": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountingGroup"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingCycleDefinition": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingCycleDefinition"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "billingProfile": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.BillingProfile"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.SubscriptionHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "htenantId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "subscriptionBillingStatus": {
                    "$ref": "#/components/schemas/lib.SubscriptionStatus"
                  },
                  "subscriptionType": {
                    "$ref": "#/components/schemas/lib.SubscriptionType"
                  },
                  "validFromTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "validToTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "account": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Account"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "accountSubscriptionItem": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.AccountSubscriptionItem"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "simSubscription": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.SimSubscription"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "subscription": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Subscription"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.vcountryDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "alpha2Code": {
                    "maxLength": 2,
                    "type": "string"
                  },
                  "alpha3Code": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "ccs": {
                    "type": "string"
                  },
                  "countryType": {
                    "$ref": "#/components/schemas/lib.CountryType"
                  },
                  "gts": {
                    "type": "string"
                  },
                  "mccs": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "country": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CountryMcc": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "alpha2Code": {
                    "maxLength": 2,
                    "type": "string"
                  },
                  "alpha3Code": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "countryType": {
                    "$ref": "#/components/schemas/lib.CountryType"
                  },
                  "mcc": {
                    "maxLength": 3,
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/lib.Status"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "country": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Country"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ProcessQueue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "cmpObjectId": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cmpObjectStagingStatusTypeKey": {
                    "$ref": "#/components/schemas/core.CmpObjectStagingStatusType"
                  },
                  "cmpObjectTypeKey": {
                    "type": "string"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "currentStagingStatusMessage": {
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  },
                  "errorSource": {
                    "$ref": "#/components/schemas/lib.ErrorSource"
                  },
                  "esbNumber": {
                    "type": "string"
                  },
                  "lastUpdateTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "processContext": {
                    "type": "string"
                  },
                  "processStatus": {
                    "$ref": "#/components/schemas/lib.ProcessStatus"
                  },
                  "processType": {
                    "$ref": "#/components/schemas/lib.ProcessType"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "cmpObjectStagingArea": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.CmpObjectStagingArea"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  },
                  "process": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/lib.Process"
                              },
                              {
                                "$ref": "#/components/schemas/lib.Resource"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.AccountSubscriptionItemStatistics": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "numberOfActiveSubscriptions": {
                    "format": "int64",
                    "type": "number"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CustomerDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "taxId": {
                    "type": "string"
                  },
                  "primaryContact": {
                    "$ref": "#/components/schemas/lib.CustomerDetailsContactPerson"
                  },
                  "address": {
                    "$ref": "#/components/schemas/lib.CustomerDetailsAddress"
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string"
                  },
                  "leadId": {
                    "type": "string"
                  },
                  "opptyId": {
                    "type": "string"
                  },
                  "applicationType": {
                    "type": "string"
                  },
                  "leadContacts": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/lib.CustomerDetailsContactPerson"
                    }
                  },
                  "ocsCustomerId": {
                    "type": "string"
                  },
                  "project": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/lib.CustomerDetailsProject"
                    }
                  },
                  "projectAgreement": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/lib.CustomerDetailsProjectAgreement"
                    }
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CustomerDetailsContactPerson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "idNumber": {
                    "type": "string"
                  },
                  "idType": {
                    "type": "string"
                  },
                  "mainPhoneNumber": {
                    "type": "string"
                  },
                  "nationality": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CustomerDetailsAddress": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "properties": {
              "street1": {
                "type": "string"
              },
              "street2": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            },
            "required": [
              "street1",
              "street2",
              "postalCode",
              "region",
              "city",
              "country"
            ]
          }
        },
        "required": [
          "attributes"
        ]
      },
      "lib.CustomerDetailsProject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "collectionTreatment": {
                    "type": "string"
                  },
                  "paymentResponsibleType": {
                    "type": "string"
                  },
                  "projectContactId": {
                    "type": "string"
                  },
                  "accountManagerUserId": {
                    "type": "string"
                  },
                  "salesTeam": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "accountName": {
                    "type": "string"
                  },
                  "projectName": {
                    "type": "string"
                  },
                  "projectType": {
                    "type": "string"
                  },
                  "projectSubType": {
                    "type": "string"
                  },
                  "billingMode": {
                    "type": "string"
                  },
                  "ocsCustomerId": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CustomerDetailsProjectAgreement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ConfigurableFeature": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "isEnabledIndicator": {
                    "type": "boolean"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.CmpObjectCounter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/common.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "calculationTimestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "quantity": {
                    "format": "int64",
                    "type": "number"
                  },
                  "cmpObjectType": {
                    "type": "string"
                  },
                  "counterName": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "cmpObject": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/lib.RelationshipToOne"
                      },
                      {
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/lib.Resource"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ExternalAccountManager": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "salesTeam": {
                    "type": "string"
                  },
                  "ocsCustomerId": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "lib.ValidateExternalCompanyResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/lib.Resource"
          },
          {
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "taxId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "street1": {
                    "type": "string"
                  },
                  "street2": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "ocsCustomerId": {
                    "type": "string"
                  },
                  "projectId": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "houseNumber": {
                    "type": "string"
                  },
                  "residenceName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "buildingName": {
                    "type": "string"
                  },
                  "accountManager": {
                    "$ref": "#/components/schemas/lib.ExternalAccountManager"
                  },
                  "operationStatus": {
                    "enum": [
                      "OK",
                      "NOK",
                      "WARN"
                    ],
                    "type": "string"
                  },
                  "errorMessage": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      }
    },
    "responses": {},
    "parameters": {
      "trait_common.filtered_filter": {
        "name": "filter",
        "in": "query",
        "description": "Filtering expression follows LISP syntax.\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_common.paged_pageOffset": {
        "name": "pageOffset",
        "in": "query",
        "schema": {
          "type": "integer"
        }
      },
      "trait_common.paged_pageLimit": {
        "name": "pageLimit",
        "in": "query",
        "schema": {
          "type": "integer"
        }
      },
      "trait_common.sorted_sort": {
        "name": "sort",
        "in": "query",
        "description": "The value for sort represents sort fields. \nMultiple sortfields are comma-separated.\nSort order for each field is ascending - unless it is prefixed with a minus, in which case sort order is descending\n",
        "schema": {
          "type": "string"
        }
      },
      "trait_common.included_include": {
        "name": "include",
        "in": "query",
        "description": "Referenced resources which are to be included in response.\nYou can include in response any attribute listed in Relationships.\n",
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "oauth_2_0": {
        "description": "This API supports OAuth 2.0 for authenticating all API requests.\n",
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://{cspUrl}/cas/oauth2/authorize",
            "tokenUrl": "https://{cspUrl}/cas/oauth2/token",
            "scopes": {}
          }
        }
      }
    },
    "links": {},
    "callbacks": {}
  }
}